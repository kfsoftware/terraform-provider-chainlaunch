// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ModelsAWSKMSConfigPayload models a w s k m s config payload
//
// swagger:model models.AWSKMSConfigPayload
type ModelsAWSKMSConfigPayload struct {

	// IAM role assumption (optional, for cross-account access)
	AssumeRoleArn string `json:"assumeRoleArn,omitempty"`

	// Static credentials (optional - can use IAM roles instead)
	AwsAccessKeyID string `json:"awsAccessKeyId,omitempty"`

	// AWS Region (required)
	// Required: true
	AwsRegion *string `json:"awsRegion"`

	// aws secret access key
	AwsSecretAccessKey string `json:"awsSecretAccessKey,omitempty"`

	// aws session token
	AwsSessionToken string `json:"awsSessionToken,omitempty"`

	// Custom endpoint URL (optional, for LocalStack or custom AWS endpoints)
	// If not provided, defaults to standard AWS KMS endpoints
	EndpointURL string `json:"endpointUrl,omitempty"`

	// external Id
	ExternalID string `json:"externalId,omitempty"`

	// KMS key alias prefix (defaults to "chainlaunch/")
	KmsKeyAliasPrefix string `json:"kmsKeyAliasPrefix,omitempty"`

	// Operation type: only "IMPORT" is supported (linking existing AWS account)
	// Required: true
	Operation *string `json:"operation"`
}

// Validate validates this models a w s k m s config payload
func (m *ModelsAWSKMSConfigPayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAwsRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsAWSKMSConfigPayload) validateAwsRegion(formats strfmt.Registry) error {

	if err := validate.Required("awsRegion", "body", m.AwsRegion); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAWSKMSConfigPayload) validateOperation(formats strfmt.Registry) error {

	if err := validate.Required("operation", "body", m.Operation); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this models a w s k m s config payload based on context it is used
func (m *ModelsAWSKMSConfigPayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsAWSKMSConfigPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsAWSKMSConfigPayload) UnmarshalBinary(b []byte) error {
	var res ModelsAWSKMSConfigPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
