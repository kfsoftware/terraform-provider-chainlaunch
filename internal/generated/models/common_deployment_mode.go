// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CommonDeploymentMode common deployment mode
//
// swagger:model common.DeploymentMode
type CommonDeploymentMode string

func NewCommonDeploymentMode(value CommonDeploymentMode) *CommonDeploymentMode {
	return &value
}

// Pointer returns a pointer to a freshly-allocated CommonDeploymentMode.
func (m CommonDeploymentMode) Pointer() *CommonDeploymentMode {
	return &m
}

const (

	// CommonDeploymentModeDocker captures enum value "docker"
	CommonDeploymentModeDocker CommonDeploymentMode = "docker"

	// CommonDeploymentModeService captures enum value "service"
	CommonDeploymentModeService CommonDeploymentMode = "service"
)

// for schema
var commonDeploymentModeEnum []any

func init() {
	var res []CommonDeploymentMode
	if err := json.Unmarshal([]byte(`["docker","service"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commonDeploymentModeEnum = append(commonDeploymentModeEnum, v)
	}
}

func (m CommonDeploymentMode) validateCommonDeploymentModeEnum(path, location string, value CommonDeploymentMode) error {
	if err := validate.EnumCase(path, location, value, commonDeploymentModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this common deployment mode
func (m CommonDeploymentMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCommonDeploymentModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this common deployment mode based on context it is used
func (m CommonDeploymentMode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
