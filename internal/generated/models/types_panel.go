// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TypesPanel types panel
//
// swagger:model types.Panel
type TypesPanel struct {

	// ChartType defines the visualization type (line, histogram, gauge, etc.)
	ChartType string `json:"chart_type,omitempty"`

	// Metric is the metric name/query to display
	Metric string `json:"metric,omitempty"`

	// RefreshInterval defines how often this panel should refresh
	RefreshInterval string `json:"refresh_interval,omitempty"`

	// ShowRate defines whether to show the rate of the metric
	ShowRate bool `json:"show_rate,omitempty"`

	// TimeRange defines the time range for the panel (e.g., "1h", "24h")
	TimeRange string `json:"time_range,omitempty"`

	// Title is the display title of the panel
	Title string `json:"title,omitempty"`
}

// Validate validates this types panel
func (m *TypesPanel) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this types panel based on context it is used
func (m *TypesPanel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TypesPanel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TypesPanel) UnmarshalBinary(b []byte) error {
	var res TypesPanel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
