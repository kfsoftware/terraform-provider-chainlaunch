// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TroubleshootingPingResponse troubleshooting ping response
//
// swagger:model troubleshooting.PingResponse
type TroubleshootingPingResponse struct {

	// avg rtt ms
	AvgRttMs int64 `json:"avg_rtt_ms,omitempty"`

	// error
	Error string `json:"error,omitempty"`

	// host
	Host string `json:"host,omitempty"`

	// max rtt ms
	MaxRttMs int64 `json:"max_rtt_ms,omitempty"`

	// min rtt ms
	MinRttMs int64 `json:"min_rtt_ms,omitempty"`

	// packet loss
	PacketLoss float64 `json:"packet_loss,omitempty"`

	// packets recv
	PacketsRecv int64 `json:"packets_recv,omitempty"`

	// packets sent
	PacketsSent int64 `json:"packets_sent,omitempty"`

	// reachable
	Reachable bool `json:"reachable,omitempty"`

	// resolved ip
	ResolvedIP string `json:"resolved_ip,omitempty"`
}

// Validate validates this troubleshooting ping response
func (m *TroubleshootingPingResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this troubleshooting ping response based on context it is used
func (m *TroubleshootingPingResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TroubleshootingPingResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TroubleshootingPingResponse) UnmarshalBinary(b []byte) error {
	var res TroubleshootingPingResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
