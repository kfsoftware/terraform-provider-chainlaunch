// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CommunicationReceiveChaincodeShareRequest Request to receive a shared chaincode definition
//
// swagger:model communication.ReceiveChaincodeShareRequest
type CommunicationReceiveChaincodeShareRequest struct {

	// chaincode Id
	ChaincodeID string `json:"chaincodeId,omitempty"`

	// docker image
	DockerImage string `json:"dockerImage,omitempty"`

	// metadata
	Metadata map[string]string `json:"metadata,omitempty"`

	// sender Id
	SenderID string `json:"senderId,omitempty"`

	// sequence
	Sequence int64 `json:"sequence,omitempty"`

	// share Id
	ShareID string `json:"shareId,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this communication receive chaincode share request
func (m *CommunicationReceiveChaincodeShareRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this communication receive chaincode share request based on context it is used
func (m *CommunicationReceiveChaincodeShareRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CommunicationReceiveChaincodeShareRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommunicationReceiveChaincodeShareRequest) UnmarshalBinary(b []byte) error {
	var res CommunicationReceiveChaincodeShareRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
