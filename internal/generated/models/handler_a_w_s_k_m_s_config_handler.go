// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// HandlerAWSKMSConfigHandler handler a w s k m s config handler
//
// swagger:model handler.AWSKMSConfigHandler
type HandlerAWSKMSConfigHandler struct {

	// assume role arn
	// Example: arn:aws:iam::123456789012:role/KMSRole
	AssumeRoleArn string `json:"assumeRoleArn,omitempty"`

	// aws access key Id
	// Example: AKIAIOSFODNN7EXAMPLE
	AwsAccessKeyID string `json:"awsAccessKeyId,omitempty"`

	// aws region
	// Example: us-east-1
	// Required: true
	AwsRegion *string `json:"awsRegion"`

	// aws secret access key
	// Example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
	AwsSecretAccessKey string `json:"awsSecretAccessKey,omitempty"`

	// aws session token
	AwsSessionToken string `json:"awsSessionToken,omitempty"`

	// endpoint Url
	// Example: http://localhost:4566
	EndpointURL string `json:"endpointUrl,omitempty"`

	// external Id
	// Example: unique-external-id
	ExternalID string `json:"externalId,omitempty"`

	// kms key alias prefix
	// Example: chainlaunch/
	KmsKeyAliasPrefix string `json:"kmsKeyAliasPrefix,omitempty"`

	// operation
	// Example: IMPORT
	// Required: true
	Operation *string `json:"operation"`
}

// Validate validates this handler a w s k m s config handler
func (m *HandlerAWSKMSConfigHandler) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAwsRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HandlerAWSKMSConfigHandler) validateAwsRegion(formats strfmt.Registry) error {

	if err := validate.Required("awsRegion", "body", m.AwsRegion); err != nil {
		return err
	}

	return nil
}

func (m *HandlerAWSKMSConfigHandler) validateOperation(formats strfmt.Registry) error {

	if err := validate.Required("operation", "body", m.Operation); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this handler a w s k m s config handler based on context it is used
func (m *HandlerAWSKMSConfigHandler) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HandlerAWSKMSConfigHandler) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HandlerAWSKMSConfigHandler) UnmarshalBinary(b []byte) error {
	var res HandlerAWSKMSConfigHandler
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
