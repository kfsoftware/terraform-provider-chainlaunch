// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CommunicationConnectedPeer Connected peer node information
//
// swagger:model communication.ConnectedPeer
type CommunicationConnectedPeer struct {

	// analytics enabled
	AnalyticsEnabled bool `json:"analytics_enabled,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// metrics federation
	MetricsFederation bool `json:"metrics_federation,omitempty"`

	// node id
	NodeID string `json:"node_id,omitempty"`

	// peer endpoint
	PeerEndpoint string `json:"peer_endpoint,omitempty"`

	// peer public key
	PeerPublicKey string `json:"peer_public_key,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this communication connected peer
func (m *CommunicationConnectedPeer) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this communication connected peer based on context it is used
func (m *CommunicationConnectedPeer) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CommunicationConnectedPeer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommunicationConnectedPeer) UnmarshalBinary(b []byte) error {
	var res CommunicationConnectedPeer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
