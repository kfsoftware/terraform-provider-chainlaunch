// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BoilerplatesBoilerplateConfig boilerplates boilerplate config
//
// swagger:model boilerplates.BoilerplateConfig
type BoilerplatesBoilerplateConfig struct {

	// args
	Args []string `json:"args"`

	// command
	Command string `json:"command,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// ID is the key in the configs map
	ID string `json:"id,omitempty"`

	// image
	Image string `json:"image,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// platform
	Platform string `json:"platform,omitempty"`

	// repo name
	RepoName string `json:"repoName,omitempty"`

	// repo owner
	RepoOwner string `json:"repoOwner,omitempty"`

	// repo path
	RepoPath string `json:"repoPath,omitempty"`

	// system prompt
	SystemPrompt string `json:"systemPrompt,omitempty"`

	// validate command
	ValidateCommand string `json:"validateCommand,omitempty"`
}

// Validate validates this boilerplates boilerplate config
func (m *BoilerplatesBoilerplateConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this boilerplates boilerplate config based on context it is used
func (m *BoilerplatesBoilerplateConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BoilerplatesBoilerplateConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BoilerplatesBoilerplateConfig) UnmarshalBinary(b []byte) error {
	var res BoilerplatesBoilerplateConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
