// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ResponseNodeCreationErrorDetails response node creation error details
//
// swagger:model response.NodeCreationErrorDetails
type ResponseNodeCreationErrorDetails struct {

	// Node contains the partial node data (only set if NodeCreated is true)
	// This can be of type interface{} to accept any node type (FabricPeer, FabricOrderer, BesuNode)
	Node any `json:"node,omitempty"`

	// NodeCreated indicates whether the node was created in the database
	NodeCreated bool `json:"node_created,omitempty"`

	// NodeID is the database ID of the node (only set if NodeCreated is true)
	NodeID int64 `json:"node_id,omitempty"`

	// Stage indicates at which stage the failure occurred (validation, db_insert, initialization, deployment_config, startup, connectivity)
	Stage string `json:"stage,omitempty"`
}

// Validate validates this response node creation error details
func (m *ResponseNodeCreationErrorDetails) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this response node creation error details based on context it is used
func (m *ResponseNodeCreationErrorDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ResponseNodeCreationErrorDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResponseNodeCreationErrorDetails) UnmarshalBinary(b []byte) error {
	var res ResponseNodeCreationErrorDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
