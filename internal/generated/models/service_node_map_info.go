// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ServiceNodeMapInfo service node map info
//
// swagger:model service.NodeMapInfo
type ServiceNodeMapInfo struct {

	// error
	Error string `json:"error,omitempty"`

	// healthy
	Healthy bool `json:"healthy,omitempty"`

	// host
	Host string `json:"host,omitempty"`

	// host:port by default
	ID string `json:"id,omitempty"`

	// e.g., "1.2ms"
	Latency string `json:"latency,omitempty"`

	// e.g., 1
	LatencyNs int64 `json:"latencyNs,omitempty"`

	// mine
	Mine bool `json:"mine,omitempty"`

	// Only for fabric and if mine
	MspID string `json:"mspId,omitempty"`

	// Only if mine
	NodeID int64 `json:"nodeId,omitempty"`

	// port
	Port int64 `json:"port,omitempty"`

	// peer, orderer, validator, etc.
	Role string `json:"role,omitempty"`
}

// Validate validates this service node map info
func (m *ServiceNodeMapInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this service node map info based on context it is used
func (m *ServiceNodeMapInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ServiceNodeMapInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceNodeMapInfo) UnmarshalBinary(b []byte) error {
	var res ServiceNodeMapInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
