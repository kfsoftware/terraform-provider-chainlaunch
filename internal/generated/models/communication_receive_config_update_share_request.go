// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CommunicationReceiveConfigUpdateShareRequest Request to receive a shared config update proposal
//
// swagger:model communication.ReceiveConfigUpdateShareRequest
type CommunicationReceiveConfigUpdateShareRequest struct {

	// channel name
	ChannelName string `json:"channelName,omitempty"`

	// config update
	ConfigUpdate []int64 `json:"configUpdate"`

	// metadata
	Metadata map[string]string `json:"metadata,omitempty"`

	// proposal Id
	ProposalID string `json:"proposalId,omitempty"`

	// sender Id
	SenderID string `json:"senderId,omitempty"`

	// share Id
	ShareID string `json:"shareId,omitempty"`
}

// Validate validates this communication receive config update share request
func (m *CommunicationReceiveConfigUpdateShareRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this communication receive config update share request based on context it is used
func (m *CommunicationReceiveConfigUpdateShareRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CommunicationReceiveConfigUpdateShareRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommunicationReceiveConfigUpdateShareRequest) UnmarshalBinary(b []byte) error {
	var res CommunicationReceiveConfigUpdateShareRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
