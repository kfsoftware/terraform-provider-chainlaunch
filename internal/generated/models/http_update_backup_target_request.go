// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// HTTPUpdateBackupTargetRequest http update backup target request
//
// swagger:model http.UpdateBackupTargetRequest
type HTTPUpdateBackupTargetRequest struct {

	// access key Id
	AccessKeyID string `json:"accessKeyId,omitempty"`

	// bucket name
	BucketName string `json:"bucketName,omitempty"`

	// bucket path
	BucketPath string `json:"bucketPath,omitempty"`

	// endpoint
	Endpoint string `json:"endpoint,omitempty"`

	// force path style
	ForcePathStyle bool `json:"forcePathStyle,omitempty"`

	// name
	// Required: true
	Name *string `json:"name"`

	// region
	Region string `json:"region,omitempty"`

	// restic password
	ResticPassword string `json:"resticPassword,omitempty"`

	// secret key
	SecretKey string `json:"secretKey,omitempty"`

	// type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this http update backup target request
func (m *HTTPUpdateBackupTargetRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HTTPUpdateBackupTargetRequest) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *HTTPUpdateBackupTargetRequest) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this http update backup target request based on context it is used
func (m *HTTPUpdateBackupTargetRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HTTPUpdateBackupTargetRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HTTPUpdateBackupTargetRequest) UnmarshalBinary(b []byte) error {
	var res HTTPUpdateBackupTargetRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
