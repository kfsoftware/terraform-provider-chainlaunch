// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PluginServiceStatus plugin service status
//
// swagger:model plugin.ServiceStatus
type PluginServiceStatus struct {

	// config
	Config any `json:"config,omitempty"`

	// containers
	Containers []string `json:"containers"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// depends on
	DependsOn []string `json:"depends_on"`

	// environment
	Environment map[string]string `json:"environment,omitempty"`

	// health
	Health string `json:"health,omitempty"`

	// image
	Image string `json:"image,omitempty"`

	// last error
	LastError string `json:"last_error,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// ports
	Ports []string `json:"ports"`

	// running
	Running bool `json:"running,omitempty"`

	// started at
	StartedAt string `json:"started_at,omitempty"`

	// state
	State string `json:"state,omitempty"`

	// volumes
	Volumes []string `json:"volumes"`
}

// Validate validates this plugin service status
func (m *PluginServiceStatus) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this plugin service status based on context it is used
func (m *PluginServiceStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PluginServiceStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PluginServiceStatus) UnmarshalBinary(b []byte) error {
	var res PluginServiceStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
