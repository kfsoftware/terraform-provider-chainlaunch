// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ServiceSettingConfig service setting config
//
// swagger:model service.SettingConfig
type ServiceSettingConfig struct {

	// besu template c m d
	BesuTemplateCMD string `json:"besuTemplateCMD,omitempty"`

	// default node expose IP
	DefaultNodeExposeIP string `json:"defaultNodeExposeIP,omitempty"`

	// Enable demo mode with anonymous read-only access
	DemoMode bool `json:"demoMode,omitempty"`

	// Duration string (e.g., "1m", "30s")
	HealthCheckInterval string `json:"healthCheckInterval,omitempty"`

	// Days to keep healthcheck records
	HealthCheckRetention int64 `json:"healthCheckRetention,omitempty"`

	// Timeout for individual checks
	HealthCheckTimeout string `json:"healthCheckTimeout,omitempty"`

	// orderer template c m d
	OrdererTemplateCMD string `json:"ordererTemplateCMD,omitempty"`

	// peer template c m d
	PeerTemplateCMD string `json:"peerTemplateCMD,omitempty"`
}

// Validate validates this service setting config
func (m *ServiceSettingConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this service setting config based on context it is used
func (m *ServiceSettingConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ServiceSettingConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceSettingConfig) UnmarshalBinary(b []byte) error {
	var res ServiceSettingConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
