// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProjectsHandlerResponse projects handler response
//
// swagger:model projects.HandlerResponse
type ProjectsHandlerResponse struct {

	// args
	Args []string `json:"args"`

	// block number
	BlockNumber int64 `json:"blockNumber,omitempty"`

	// chaincode
	Chaincode string `json:"chaincode,omitempty"`

	// channel
	Channel string `json:"channel,omitempty"`

	// code
	Code int64 `json:"code,omitempty"`

	// function
	Function string `json:"function,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// project
	Project string `json:"project,omitempty"`

	// result
	Result any `json:"result,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// transaction Id
	TransactionID string `json:"transactionId,omitempty"`
}

// Validate validates this projects handler response
func (m *ProjectsHandlerResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects handler response based on context it is used
func (m *ProjectsHandlerResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProjectsHandlerResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProjectsHandlerResponse) UnmarshalBinary(b []byte) error {
	var res ProjectsHandlerResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
