// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// HandlerVaultConfigHandler handler vault config handler
//
// swagger:model handler.VaultConfigHandler
type HandlerVaultConfigHandler struct {

	// address
	// Example: http://vault:8200
	Address string `json:"address,omitempty"`

	// ca cert
	CaCert string `json:"caCert,omitempty"`

	// default c a cert TTL
	// Example: 87600h
	DefaultCACertTTL string `json:"defaultCACertTTL,omitempty"`

	// default cert TTL
	// Example: 8760h
	DefaultCertTTL string `json:"defaultCertTTL,omitempty"`

	// kv mount
	// Example: secret
	KvMount string `json:"kvMount,omitempty"`

	// max c a cert TTL
	// Example: 175200h
	MaxCACertTTL string `json:"maxCACertTTL,omitempty"`

	// max cert TTL
	// Example: 87600h
	MaxCertTTL string `json:"maxCertTTL,omitempty"`

	// mode
	// Example: docker
	Mode string `json:"mode,omitempty"`

	// namespace
	// Example: admin
	Namespace string `json:"namespace,omitempty"`

	// network
	// Example: bridge
	Network string `json:"network,omitempty"`

	// operation
	// Example: CREATE
	// Required: true
	Operation *string `json:"operation"`

	// pki mount
	// Example: pki
	PkiMount string `json:"pkiMount,omitempty"`

	// port
	// Example: 8200
	Port int64 `json:"port,omitempty"`

	// shares
	// Example: 5
	Shares int64 `json:"shares,omitempty"`

	// threshold
	// Example: 3
	Threshold int64 `json:"threshold,omitempty"`

	// token
	// Example: hvs.token
	Token string `json:"token,omitempty"`

	// transit mount
	// Example: transit
	TransitMount string `json:"transitMount,omitempty"`

	// version
	// Example: 1.15.6
	Version string `json:"version,omitempty"`
}

// Validate validates this handler vault config handler
func (m *HandlerVaultConfigHandler) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOperation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HandlerVaultConfigHandler) validateOperation(formats strfmt.Registry) error {

	if err := validate.Required("operation", "body", m.Operation); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this handler vault config handler based on context it is used
func (m *HandlerVaultConfigHandler) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HandlerVaultConfigHandler) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HandlerVaultConfigHandler) UnmarshalBinary(b []byte) error {
	var res HandlerVaultConfigHandler
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
