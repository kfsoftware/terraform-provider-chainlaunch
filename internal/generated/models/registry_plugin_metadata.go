// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RegistryPluginMetadata registry plugin metadata
//
// swagger:model registry.PluginMetadata
type RegistryPluginMetadata struct {

	// author
	Author string `json:"author,omitempty"`

	// created
	Created string `json:"created,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// downloads
	Downloads int64 `json:"downloads,omitempty"`

	// hash
	Hash string `json:"hash,omitempty"`

	// labels
	Labels map[string]string `json:"labels,omitempty"`

	// license
	License string `json:"license,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// rating
	Rating float64 `json:"rating,omitempty"`

	// raw yaml
	RawYaml string `json:"raw_yaml,omitempty"`

	// source
	Source string `json:"source,omitempty"`

	// tags
	Tags []string `json:"tags"`

	// updated
	Updated string `json:"updated,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this registry plugin metadata
func (m *RegistryPluginMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this registry plugin metadata based on context it is used
func (m *RegistryPluginMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RegistryPluginMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RegistryPluginMetadata) UnmarshalBinary(b []byte) error {
	var res RegistryPluginMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
