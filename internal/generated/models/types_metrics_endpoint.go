// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TypesMetricsEndpoint types metrics endpoint
//
// swagger:model types.MetricsEndpoint
type TypesMetricsEndpoint struct {

	// Interval is the scrape interval for this endpoint (optional, uses global if not set)
	Interval string `json:"interval,omitempty"`

	// JobName is the Prometheus job name (optional, auto-generated if not set)
	JobName string `json:"jobName,omitempty"`

	// Path is the HTTP path where metrics are served (default: /metrics)
	Path string `json:"path,omitempty"`

	// Port is the port number where metrics are exposed (supports templating)
	Port string `json:"port,omitempty"`

	// Service is the name of the docker-compose service that exposes metrics
	Service string `json:"service,omitempty"`
}

// Validate validates this types metrics endpoint
func (m *TypesMetricsEndpoint) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this types metrics endpoint based on context it is used
func (m *TypesMetricsEndpoint) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TypesMetricsEndpoint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TypesMetricsEndpoint) UnmarshalBinary(b []byte) error {
	var res TypesMetricsEndpoint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
