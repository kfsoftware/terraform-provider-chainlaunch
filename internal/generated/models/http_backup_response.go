// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HTTPBackupResponse http backup response
//
// swagger:model http.BackupResponse
type HTTPBackupResponse struct {

	// completed at
	CompletedAt string `json:"completedAt,omitempty"`

	// created at
	CreatedAt string `json:"createdAt,omitempty"`

	// error message
	ErrorMessage string `json:"errorMessage,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// metadata
	Metadata any `json:"metadata,omitempty"`

	// schedule Id
	ScheduleID int64 `json:"scheduleId,omitempty"`

	// size bytes
	SizeBytes int64 `json:"sizeBytes,omitempty"`

	// started at
	StartedAt string `json:"startedAt,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// target Id
	TargetID int64 `json:"targetId,omitempty"`
}

// Validate validates this http backup response
func (m *HTTPBackupResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this http backup response based on context it is used
func (m *HTTPBackupResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HTTPBackupResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HTTPBackupResponse) UnmarshalBinary(b []byte) error {
	var res HTTPBackupResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
