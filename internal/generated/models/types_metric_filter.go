// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TypesMetricFilter types metric filter
//
// swagger:model types.MetricFilter
type TypesMetricFilter struct {

	// e.g., "eq", "ne", "contains", "regex"
	// Required: true
	Operator struct {
		TypesFilterOperator
	} `json:"operator"`

	// e.g., "status", "job", "instance", "__name__"
	// Required: true
	Property *string `json:"property"`

	// The value to filter by
	// Required: true
	Value any `json:"value"`
}

// Validate validates this types metric filter
func (m *TypesMetricFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProperty(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TypesMetricFilter) validateOperator(formats strfmt.Registry) error {

	return nil
}

func (m *TypesMetricFilter) validateProperty(formats strfmt.Registry) error {

	if err := validate.Required("property", "body", m.Property); err != nil {
		return err
	}

	return nil
}

func (m *TypesMetricFilter) validateValue(formats strfmt.Registry) error {

	if m.Value == nil {
		return errors.Required("value", "body", nil)
	}

	return nil
}

// ContextValidate validate this types metric filter based on the context it is used
func (m *TypesMetricFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOperator(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TypesMetricFilter) contextValidateOperator(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *TypesMetricFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TypesMetricFilter) UnmarshalBinary(b []byte) error {
	var res TypesMetricFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
