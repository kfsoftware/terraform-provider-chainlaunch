// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HTTPCronPreviewResponse Response containing the next scheduled execution times
//
// swagger:model http.CronPreviewResponse
type HTTPCronPreviewResponse struct {

	// Error message if the expression is invalid
	// @Example ""
	Error string `json:"error,omitempty"`

	// Next scheduled execution times
	// @Example ["2024-01-01T00:00:00Z", "2024-01-01T06:00:00Z", "2024-01-01T12:00:00Z", "2024-01-01T18:00:00Z", "2024-01-02T00:00:00Z"]
	NextExecutions []string `json:"nextExecutions"`

	// Valid indicates if the cron expression is valid
	// @Example true
	Valid bool `json:"valid,omitempty"`
}

// Validate validates this http cron preview response
func (m *HTTPCronPreviewResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this http cron preview response based on context it is used
func (m *HTTPCronPreviewResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HTTPCronPreviewResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HTTPCronPreviewResponse) UnmarshalBinary(b []byte) error {
	var res HTTPCronPreviewResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
