// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListUsersReader is a Reader for the ListUsers structure.
type ListUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /users] listUsers", response, response.Code())
	}
}

// NewListUsersOK creates a ListUsersOK with default headers values
func NewListUsersOK() *ListUsersOK {
	return &ListUsersOK{}
}

/*
ListUsersOK describes a response with status code 200, with default header values.

List of users
*/
type ListUsersOK struct {
	Payload []*models.AuthUserResponse
}

// IsSuccess returns true when this list users o k response has a 2xx status code
func (o *ListUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list users o k response has a 3xx status code
func (o *ListUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list users o k response has a 4xx status code
func (o *ListUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list users o k response has a 5xx status code
func (o *ListUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list users o k response a status code equal to that given
func (o *ListUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list users o k response
func (o *ListUsersOK) Code() int {
	return 200
}

func (o *ListUsersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users][%d] listUsersOK %s", 200, payload)
}

func (o *ListUsersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users][%d] listUsersOK %s", 200, payload)
}

func (o *ListUsersOK) GetPayload() []*models.AuthUserResponse {
	return o.Payload
}

func (o *ListUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListUsersUnauthorized creates a ListUsersUnauthorized with default headers values
func NewListUsersUnauthorized() *ListUsersUnauthorized {
	return &ListUsersUnauthorized{}
}

/*
ListUsersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUsersUnauthorized struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this list users unauthorized response has a 2xx status code
func (o *ListUsersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list users unauthorized response has a 3xx status code
func (o *ListUsersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list users unauthorized response has a 4xx status code
func (o *ListUsersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list users unauthorized response has a 5xx status code
func (o *ListUsersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list users unauthorized response a status code equal to that given
func (o *ListUsersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list users unauthorized response
func (o *ListUsersUnauthorized) Code() int {
	return 401
}

func (o *ListUsersUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users][%d] listUsersUnauthorized %s", 401, payload)
}

func (o *ListUsersUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users][%d] listUsersUnauthorized %s", 401, payload)
}

func (o *ListUsersUnauthorized) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *ListUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListUsersForbidden creates a ListUsersForbidden with default headers values
func NewListUsersForbidden() *ListUsersForbidden {
	return &ListUsersForbidden{}
}

/*
ListUsersForbidden describes a response with status code 403, with default header values.

Forbidden - Requires admin role
*/
type ListUsersForbidden struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this list users forbidden response has a 2xx status code
func (o *ListUsersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list users forbidden response has a 3xx status code
func (o *ListUsersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list users forbidden response has a 4xx status code
func (o *ListUsersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list users forbidden response has a 5xx status code
func (o *ListUsersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list users forbidden response a status code equal to that given
func (o *ListUsersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list users forbidden response
func (o *ListUsersForbidden) Code() int {
	return 403
}

func (o *ListUsersForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users][%d] listUsersForbidden %s", 403, payload)
}

func (o *ListUsersForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /users][%d] listUsersForbidden %s", 403, payload)
}

func (o *ListUsersForbidden) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *ListUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
