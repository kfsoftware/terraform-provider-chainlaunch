// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DeleteNotificationProviderReader is a Reader for the DeleteNotificationProvider structure.
type DeleteNotificationProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNotificationProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteNotificationProviderNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteNotificationProviderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteNotificationProviderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteNotificationProviderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /notifications/providers/{id}] deleteNotificationProvider", response, response.Code())
	}
}

// NewDeleteNotificationProviderNoContent creates a DeleteNotificationProviderNoContent with default headers values
func NewDeleteNotificationProviderNoContent() *DeleteNotificationProviderNoContent {
	return &DeleteNotificationProviderNoContent{}
}

/*
DeleteNotificationProviderNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteNotificationProviderNoContent struct {
}

// IsSuccess returns true when this delete notification provider no content response has a 2xx status code
func (o *DeleteNotificationProviderNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete notification provider no content response has a 3xx status code
func (o *DeleteNotificationProviderNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notification provider no content response has a 4xx status code
func (o *DeleteNotificationProviderNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete notification provider no content response has a 5xx status code
func (o *DeleteNotificationProviderNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notification provider no content response a status code equal to that given
func (o *DeleteNotificationProviderNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete notification provider no content response
func (o *DeleteNotificationProviderNoContent) Code() int {
	return 204
}

func (o *DeleteNotificationProviderNoContent) Error() string {
	return fmt.Sprintf("[DELETE /notifications/providers/{id}][%d] deleteNotificationProviderNoContent", 204)
}

func (o *DeleteNotificationProviderNoContent) String() string {
	return fmt.Sprintf("[DELETE /notifications/providers/{id}][%d] deleteNotificationProviderNoContent", 204)
}

func (o *DeleteNotificationProviderNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNotificationProviderBadRequest creates a DeleteNotificationProviderBadRequest with default headers values
func NewDeleteNotificationProviderBadRequest() *DeleteNotificationProviderBadRequest {
	return &DeleteNotificationProviderBadRequest{}
}

/*
DeleteNotificationProviderBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteNotificationProviderBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse
}

// IsSuccess returns true when this delete notification provider bad request response has a 2xx status code
func (o *DeleteNotificationProviderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notification provider bad request response has a 3xx status code
func (o *DeleteNotificationProviderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notification provider bad request response has a 4xx status code
func (o *DeleteNotificationProviderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notification provider bad request response has a 5xx status code
func (o *DeleteNotificationProviderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notification provider bad request response a status code equal to that given
func (o *DeleteNotificationProviderBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete notification provider bad request response
func (o *DeleteNotificationProviderBadRequest) Code() int {
	return 400
}

func (o *DeleteNotificationProviderBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notifications/providers/{id}][%d] deleteNotificationProviderBadRequest %s", 400, payload)
}

func (o *DeleteNotificationProviderBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notifications/providers/{id}][%d] deleteNotificationProviderBadRequest %s", 400, payload)
}

func (o *DeleteNotificationProviderBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse {
	return o.Payload
}

func (o *DeleteNotificationProviderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteNotificationProviderNotFound creates a DeleteNotificationProviderNotFound with default headers values
func NewDeleteNotificationProviderNotFound() *DeleteNotificationProviderNotFound {
	return &DeleteNotificationProviderNotFound{}
}

/*
DeleteNotificationProviderNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteNotificationProviderNotFound struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse
}

// IsSuccess returns true when this delete notification provider not found response has a 2xx status code
func (o *DeleteNotificationProviderNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notification provider not found response has a 3xx status code
func (o *DeleteNotificationProviderNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notification provider not found response has a 4xx status code
func (o *DeleteNotificationProviderNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notification provider not found response has a 5xx status code
func (o *DeleteNotificationProviderNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notification provider not found response a status code equal to that given
func (o *DeleteNotificationProviderNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete notification provider not found response
func (o *DeleteNotificationProviderNotFound) Code() int {
	return 404
}

func (o *DeleteNotificationProviderNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notifications/providers/{id}][%d] deleteNotificationProviderNotFound %s", 404, payload)
}

func (o *DeleteNotificationProviderNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notifications/providers/{id}][%d] deleteNotificationProviderNotFound %s", 404, payload)
}

func (o *DeleteNotificationProviderNotFound) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse {
	return o.Payload
}

func (o *DeleteNotificationProviderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteNotificationProviderInternalServerError creates a DeleteNotificationProviderInternalServerError with default headers values
func NewDeleteNotificationProviderInternalServerError() *DeleteNotificationProviderInternalServerError {
	return &DeleteNotificationProviderInternalServerError{}
}

/*
DeleteNotificationProviderInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteNotificationProviderInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse
}

// IsSuccess returns true when this delete notification provider internal server error response has a 2xx status code
func (o *DeleteNotificationProviderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notification provider internal server error response has a 3xx status code
func (o *DeleteNotificationProviderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notification provider internal server error response has a 4xx status code
func (o *DeleteNotificationProviderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete notification provider internal server error response has a 5xx status code
func (o *DeleteNotificationProviderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete notification provider internal server error response a status code equal to that given
func (o *DeleteNotificationProviderInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete notification provider internal server error response
func (o *DeleteNotificationProviderInternalServerError) Code() int {
	return 500
}

func (o *DeleteNotificationProviderInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notifications/providers/{id}][%d] deleteNotificationProviderInternalServerError %s", 500, payload)
}

func (o *DeleteNotificationProviderInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notifications/providers/{id}][%d] deleteNotificationProviderInternalServerError %s", 500, payload)
}

func (o *DeleteNotificationProviderInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse {
	return o.Payload
}

func (o *DeleteNotificationProviderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
