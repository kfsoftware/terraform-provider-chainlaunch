// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// CreateNotificationProviderReader is a Reader for the CreateNotificationProvider structure.
type CreateNotificationProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNotificationProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 201:
		result := NewCreateNotificationProviderCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateNotificationProviderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateNotificationProviderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /notifications/providers] createNotificationProvider", response, response.Code())
	}
}

// NewCreateNotificationProviderCreated creates a CreateNotificationProviderCreated with default headers values
func NewCreateNotificationProviderCreated() *CreateNotificationProviderCreated {
	return &CreateNotificationProviderCreated{}
}

/*
CreateNotificationProviderCreated describes a response with status code 201, with default header values.

Created
*/
type CreateNotificationProviderCreated struct {
	Payload *models.HTTPProviderResponse
}

// IsSuccess returns true when this create notification provider created response has a 2xx status code
func (o *CreateNotificationProviderCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create notification provider created response has a 3xx status code
func (o *CreateNotificationProviderCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create notification provider created response has a 4xx status code
func (o *CreateNotificationProviderCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create notification provider created response has a 5xx status code
func (o *CreateNotificationProviderCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create notification provider created response a status code equal to that given
func (o *CreateNotificationProviderCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create notification provider created response
func (o *CreateNotificationProviderCreated) Code() int {
	return 201
}

func (o *CreateNotificationProviderCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /notifications/providers][%d] createNotificationProviderCreated %s", 201, payload)
}

func (o *CreateNotificationProviderCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /notifications/providers][%d] createNotificationProviderCreated %s", 201, payload)
}

func (o *CreateNotificationProviderCreated) GetPayload() *models.HTTPProviderResponse {
	return o.Payload
}

func (o *CreateNotificationProviderCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPProviderResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateNotificationProviderBadRequest creates a CreateNotificationProviderBadRequest with default headers values
func NewCreateNotificationProviderBadRequest() *CreateNotificationProviderBadRequest {
	return &CreateNotificationProviderBadRequest{}
}

/*
CreateNotificationProviderBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateNotificationProviderBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse
}

// IsSuccess returns true when this create notification provider bad request response has a 2xx status code
func (o *CreateNotificationProviderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create notification provider bad request response has a 3xx status code
func (o *CreateNotificationProviderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create notification provider bad request response has a 4xx status code
func (o *CreateNotificationProviderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create notification provider bad request response has a 5xx status code
func (o *CreateNotificationProviderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create notification provider bad request response a status code equal to that given
func (o *CreateNotificationProviderBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create notification provider bad request response
func (o *CreateNotificationProviderBadRequest) Code() int {
	return 400
}

func (o *CreateNotificationProviderBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /notifications/providers][%d] createNotificationProviderBadRequest %s", 400, payload)
}

func (o *CreateNotificationProviderBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /notifications/providers][%d] createNotificationProviderBadRequest %s", 400, payload)
}

func (o *CreateNotificationProviderBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse {
	return o.Payload
}

func (o *CreateNotificationProviderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateNotificationProviderInternalServerError creates a CreateNotificationProviderInternalServerError with default headers values
func NewCreateNotificationProviderInternalServerError() *CreateNotificationProviderInternalServerError {
	return &CreateNotificationProviderInternalServerError{}
}

/*
CreateNotificationProviderInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateNotificationProviderInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse
}

// IsSuccess returns true when this create notification provider internal server error response has a 2xx status code
func (o *CreateNotificationProviderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create notification provider internal server error response has a 3xx status code
func (o *CreateNotificationProviderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create notification provider internal server error response has a 4xx status code
func (o *CreateNotificationProviderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create notification provider internal server error response has a 5xx status code
func (o *CreateNotificationProviderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create notification provider internal server error response a status code equal to that given
func (o *CreateNotificationProviderInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create notification provider internal server error response
func (o *CreateNotificationProviderInternalServerError) Code() int {
	return 500
}

func (o *CreateNotificationProviderInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /notifications/providers][%d] createNotificationProviderInternalServerError %s", 500, payload)
}

func (o *CreateNotificationProviderInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /notifications/providers][%d] createNotificationProviderInternalServerError %s", 500, payload)
}

func (o *CreateNotificationProviderInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse {
	return o.Payload
}

func (o *CreateNotificationProviderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
