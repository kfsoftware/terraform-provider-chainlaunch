// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListNotificationProvidersReader is a Reader for the ListNotificationProviders structure.
type ListNotificationProvidersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListNotificationProvidersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListNotificationProvidersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListNotificationProvidersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /notifications/providers] listNotificationProviders", response, response.Code())
	}
}

// NewListNotificationProvidersOK creates a ListNotificationProvidersOK with default headers values
func NewListNotificationProvidersOK() *ListNotificationProvidersOK {
	return &ListNotificationProvidersOK{}
}

/*
ListNotificationProvidersOK describes a response with status code 200, with default header values.

OK
*/
type ListNotificationProvidersOK struct {
	Payload []*models.HTTPProviderResponse
}

// IsSuccess returns true when this list notification providers o k response has a 2xx status code
func (o *ListNotificationProvidersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list notification providers o k response has a 3xx status code
func (o *ListNotificationProvidersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list notification providers o k response has a 4xx status code
func (o *ListNotificationProvidersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list notification providers o k response has a 5xx status code
func (o *ListNotificationProvidersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list notification providers o k response a status code equal to that given
func (o *ListNotificationProvidersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list notification providers o k response
func (o *ListNotificationProvidersOK) Code() int {
	return 200
}

func (o *ListNotificationProvidersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /notifications/providers][%d] listNotificationProvidersOK %s", 200, payload)
}

func (o *ListNotificationProvidersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /notifications/providers][%d] listNotificationProvidersOK %s", 200, payload)
}

func (o *ListNotificationProvidersOK) GetPayload() []*models.HTTPProviderResponse {
	return o.Payload
}

func (o *ListNotificationProvidersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListNotificationProvidersInternalServerError creates a ListNotificationProvidersInternalServerError with default headers values
func NewListNotificationProvidersInternalServerError() *ListNotificationProvidersInternalServerError {
	return &ListNotificationProvidersInternalServerError{}
}

/*
ListNotificationProvidersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListNotificationProvidersInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse
}

// IsSuccess returns true when this list notification providers internal server error response has a 2xx status code
func (o *ListNotificationProvidersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list notification providers internal server error response has a 3xx status code
func (o *ListNotificationProvidersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list notification providers internal server error response has a 4xx status code
func (o *ListNotificationProvidersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list notification providers internal server error response has a 5xx status code
func (o *ListNotificationProvidersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list notification providers internal server error response a status code equal to that given
func (o *ListNotificationProvidersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list notification providers internal server error response
func (o *ListNotificationProvidersInternalServerError) Code() int {
	return 500
}

func (o *ListNotificationProvidersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /notifications/providers][%d] listNotificationProvidersInternalServerError %s", 500, payload)
}

func (o *ListNotificationProvidersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /notifications/providers][%d] listNotificationProvidersInternalServerError %s", 500, payload)
}

func (o *ListNotificationProvidersInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse {
	return o.Payload
}

func (o *ListNotificationProvidersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNotificationsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
