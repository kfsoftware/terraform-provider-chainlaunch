// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// FilterLogsReader is a Reader for the FilterLogs structure.
type FilterLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FilterLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewFilterLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFilterLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFilterLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFilterLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/logs/filter] filterLogs", response, response.Code())
	}
}

// NewFilterLogsOK creates a FilterLogsOK with default headers values
func NewFilterLogsOK() *FilterLogsOK {
	return &FilterLogsOK{}
}

/*
FilterLogsOK describes a response with status code 200, with default header values.

Filtered log entries
*/
type FilterLogsOK struct {
	Payload *models.LogLogResponse
}

// IsSuccess returns true when this filter logs o k response has a 2xx status code
func (o *FilterLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this filter logs o k response has a 3xx status code
func (o *FilterLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this filter logs o k response has a 4xx status code
func (o *FilterLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this filter logs o k response has a 5xx status code
func (o *FilterLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this filter logs o k response a status code equal to that given
func (o *FilterLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the filter logs o k response
func (o *FilterLogsOK) Code() int {
	return 200
}

func (o *FilterLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/filter][%d] filterLogsOK %s", 200, payload)
}

func (o *FilterLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/filter][%d] filterLogsOK %s", 200, payload)
}

func (o *FilterLogsOK) GetPayload() *models.LogLogResponse {
	return o.Payload
}

func (o *FilterLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogLogResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewFilterLogsBadRequest creates a FilterLogsBadRequest with default headers values
func NewFilterLogsBadRequest() *FilterLogsBadRequest {
	return &FilterLogsBadRequest{}
}

/*
FilterLogsBadRequest describes a response with status code 400, with default header values.

Invalid parameters
*/
type FilterLogsBadRequest struct {
	Payload *models.LogLogResponse
}

// IsSuccess returns true when this filter logs bad request response has a 2xx status code
func (o *FilterLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this filter logs bad request response has a 3xx status code
func (o *FilterLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this filter logs bad request response has a 4xx status code
func (o *FilterLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this filter logs bad request response has a 5xx status code
func (o *FilterLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this filter logs bad request response a status code equal to that given
func (o *FilterLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the filter logs bad request response
func (o *FilterLogsBadRequest) Code() int {
	return 400
}

func (o *FilterLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/filter][%d] filterLogsBadRequest %s", 400, payload)
}

func (o *FilterLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/filter][%d] filterLogsBadRequest %s", 400, payload)
}

func (o *FilterLogsBadRequest) GetPayload() *models.LogLogResponse {
	return o.Payload
}

func (o *FilterLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogLogResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewFilterLogsNotFound creates a FilterLogsNotFound with default headers values
func NewFilterLogsNotFound() *FilterLogsNotFound {
	return &FilterLogsNotFound{}
}

/*
FilterLogsNotFound describes a response with status code 404, with default header values.

Node or log file not found
*/
type FilterLogsNotFound struct {
	Payload *models.LogLogResponse
}

// IsSuccess returns true when this filter logs not found response has a 2xx status code
func (o *FilterLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this filter logs not found response has a 3xx status code
func (o *FilterLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this filter logs not found response has a 4xx status code
func (o *FilterLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this filter logs not found response has a 5xx status code
func (o *FilterLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this filter logs not found response a status code equal to that given
func (o *FilterLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the filter logs not found response
func (o *FilterLogsNotFound) Code() int {
	return 404
}

func (o *FilterLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/filter][%d] filterLogsNotFound %s", 404, payload)
}

func (o *FilterLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/filter][%d] filterLogsNotFound %s", 404, payload)
}

func (o *FilterLogsNotFound) GetPayload() *models.LogLogResponse {
	return o.Payload
}

func (o *FilterLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogLogResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewFilterLogsInternalServerError creates a FilterLogsInternalServerError with default headers values
func NewFilterLogsInternalServerError() *FilterLogsInternalServerError {
	return &FilterLogsInternalServerError{}
}

/*
FilterLogsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type FilterLogsInternalServerError struct {
	Payload *models.LogLogResponse
}

// IsSuccess returns true when this filter logs internal server error response has a 2xx status code
func (o *FilterLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this filter logs internal server error response has a 3xx status code
func (o *FilterLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this filter logs internal server error response has a 4xx status code
func (o *FilterLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this filter logs internal server error response has a 5xx status code
func (o *FilterLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this filter logs internal server error response a status code equal to that given
func (o *FilterLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the filter logs internal server error response
func (o *FilterLogsInternalServerError) Code() int {
	return 500
}

func (o *FilterLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/filter][%d] filterLogsInternalServerError %s", 500, payload)
}

func (o *FilterLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/filter][%d] filterLogsInternalServerError %s", 500, payload)
}

func (o *FilterLogsInternalServerError) GetPayload() *models.LogLogResponse {
	return o.Payload
}

func (o *FilterLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogLogResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
