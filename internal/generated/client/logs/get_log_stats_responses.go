// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetLogStatsReader is a Reader for the GetLogStats structure.
type GetLogStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLogStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetLogStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLogStatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLogStatsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLogStatsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/logs/stats] getLogStats", response, response.Code())
	}
}

// NewGetLogStatsOK creates a GetLogStatsOK with default headers values
func NewGetLogStatsOK() *GetLogStatsOK {
	return &GetLogStatsOK{}
}

/*
GetLogStatsOK describes a response with status code 200, with default header values.

Log statistics
*/
type GetLogStatsOK struct {
	Payload *models.LogLogResponse
}

// IsSuccess returns true when this get log stats o k response has a 2xx status code
func (o *GetLogStatsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get log stats o k response has a 3xx status code
func (o *GetLogStatsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get log stats o k response has a 4xx status code
func (o *GetLogStatsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get log stats o k response has a 5xx status code
func (o *GetLogStatsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get log stats o k response a status code equal to that given
func (o *GetLogStatsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get log stats o k response
func (o *GetLogStatsOK) Code() int {
	return 200
}

func (o *GetLogStatsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/stats][%d] getLogStatsOK %s", 200, payload)
}

func (o *GetLogStatsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/stats][%d] getLogStatsOK %s", 200, payload)
}

func (o *GetLogStatsOK) GetPayload() *models.LogLogResponse {
	return o.Payload
}

func (o *GetLogStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogLogResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetLogStatsBadRequest creates a GetLogStatsBadRequest with default headers values
func NewGetLogStatsBadRequest() *GetLogStatsBadRequest {
	return &GetLogStatsBadRequest{}
}

/*
GetLogStatsBadRequest describes a response with status code 400, with default header values.

Invalid node ID
*/
type GetLogStatsBadRequest struct {
	Payload *models.LogLogResponse
}

// IsSuccess returns true when this get log stats bad request response has a 2xx status code
func (o *GetLogStatsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get log stats bad request response has a 3xx status code
func (o *GetLogStatsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get log stats bad request response has a 4xx status code
func (o *GetLogStatsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get log stats bad request response has a 5xx status code
func (o *GetLogStatsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get log stats bad request response a status code equal to that given
func (o *GetLogStatsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get log stats bad request response
func (o *GetLogStatsBadRequest) Code() int {
	return 400
}

func (o *GetLogStatsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/stats][%d] getLogStatsBadRequest %s", 400, payload)
}

func (o *GetLogStatsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/stats][%d] getLogStatsBadRequest %s", 400, payload)
}

func (o *GetLogStatsBadRequest) GetPayload() *models.LogLogResponse {
	return o.Payload
}

func (o *GetLogStatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogLogResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetLogStatsNotFound creates a GetLogStatsNotFound with default headers values
func NewGetLogStatsNotFound() *GetLogStatsNotFound {
	return &GetLogStatsNotFound{}
}

/*
GetLogStatsNotFound describes a response with status code 404, with default header values.

Node or log file not found
*/
type GetLogStatsNotFound struct {
	Payload *models.LogLogResponse
}

// IsSuccess returns true when this get log stats not found response has a 2xx status code
func (o *GetLogStatsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get log stats not found response has a 3xx status code
func (o *GetLogStatsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get log stats not found response has a 4xx status code
func (o *GetLogStatsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get log stats not found response has a 5xx status code
func (o *GetLogStatsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get log stats not found response a status code equal to that given
func (o *GetLogStatsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get log stats not found response
func (o *GetLogStatsNotFound) Code() int {
	return 404
}

func (o *GetLogStatsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/stats][%d] getLogStatsNotFound %s", 404, payload)
}

func (o *GetLogStatsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/stats][%d] getLogStatsNotFound %s", 404, payload)
}

func (o *GetLogStatsNotFound) GetPayload() *models.LogLogResponse {
	return o.Payload
}

func (o *GetLogStatsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogLogResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetLogStatsInternalServerError creates a GetLogStatsInternalServerError with default headers values
func NewGetLogStatsInternalServerError() *GetLogStatsInternalServerError {
	return &GetLogStatsInternalServerError{}
}

/*
GetLogStatsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetLogStatsInternalServerError struct {
	Payload *models.LogLogResponse
}

// IsSuccess returns true when this get log stats internal server error response has a 2xx status code
func (o *GetLogStatsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get log stats internal server error response has a 3xx status code
func (o *GetLogStatsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get log stats internal server error response has a 4xx status code
func (o *GetLogStatsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get log stats internal server error response has a 5xx status code
func (o *GetLogStatsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get log stats internal server error response a status code equal to that given
func (o *GetLogStatsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get log stats internal server error response
func (o *GetLogStatsInternalServerError) Code() int {
	return 500
}

func (o *GetLogStatsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/stats][%d] getLogStatsInternalServerError %s", 500, payload)
}

func (o *GetLogStatsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs/stats][%d] getLogStatsInternalServerError %s", 500, payload)
}

func (o *GetLogStatsInternalServerError) GetPayload() *models.LogLogResponse {
	return o.Payload
}

func (o *GetLogStatsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogLogResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
