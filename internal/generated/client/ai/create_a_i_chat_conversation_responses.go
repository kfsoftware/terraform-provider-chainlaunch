// Code generated by go-swagger; DO NOT EDIT.

package ai

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// CreateAIChatConversationReader is a Reader for the CreateAIChatConversation structure.
type CreateAIChatConversationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAIChatConversationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 201:
		result := NewCreateAIChatConversationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAIChatConversationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateAIChatConversationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAIChatConversationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /ai/{projectId}/conversations] createAIChatConversation", response, response.Code())
	}
}

// NewCreateAIChatConversationCreated creates a CreateAIChatConversationCreated with default headers values
func NewCreateAIChatConversationCreated() *CreateAIChatConversationCreated {
	return &CreateAIChatConversationCreated{}
}

/*
CreateAIChatConversationCreated describes a response with status code 201, with default header values.

Created
*/
type CreateAIChatConversationCreated struct {
	Payload *models.AiConversationResponse
}

// IsSuccess returns true when this create a i chat conversation created response has a 2xx status code
func (o *CreateAIChatConversationCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create a i chat conversation created response has a 3xx status code
func (o *CreateAIChatConversationCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a i chat conversation created response has a 4xx status code
func (o *CreateAIChatConversationCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create a i chat conversation created response has a 5xx status code
func (o *CreateAIChatConversationCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create a i chat conversation created response a status code equal to that given
func (o *CreateAIChatConversationCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create a i chat conversation created response
func (o *CreateAIChatConversationCreated) Code() int {
	return 201
}

func (o *CreateAIChatConversationCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations][%d] createAIChatConversationCreated %s", 201, payload)
}

func (o *CreateAIChatConversationCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations][%d] createAIChatConversationCreated %s", 201, payload)
}

func (o *CreateAIChatConversationCreated) GetPayload() *models.AiConversationResponse {
	return o.Payload
}

func (o *CreateAIChatConversationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AiConversationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateAIChatConversationBadRequest creates a CreateAIChatConversationBadRequest with default headers values
func NewCreateAIChatConversationBadRequest() *CreateAIChatConversationBadRequest {
	return &CreateAIChatConversationBadRequest{}
}

/*
CreateAIChatConversationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateAIChatConversationBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create a i chat conversation bad request response has a 2xx status code
func (o *CreateAIChatConversationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create a i chat conversation bad request response has a 3xx status code
func (o *CreateAIChatConversationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a i chat conversation bad request response has a 4xx status code
func (o *CreateAIChatConversationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create a i chat conversation bad request response has a 5xx status code
func (o *CreateAIChatConversationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create a i chat conversation bad request response a status code equal to that given
func (o *CreateAIChatConversationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create a i chat conversation bad request response
func (o *CreateAIChatConversationBadRequest) Code() int {
	return 400
}

func (o *CreateAIChatConversationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations][%d] createAIChatConversationBadRequest %s", 400, payload)
}

func (o *CreateAIChatConversationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations][%d] createAIChatConversationBadRequest %s", 400, payload)
}

func (o *CreateAIChatConversationBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateAIChatConversationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateAIChatConversationNotFound creates a CreateAIChatConversationNotFound with default headers values
func NewCreateAIChatConversationNotFound() *CreateAIChatConversationNotFound {
	return &CreateAIChatConversationNotFound{}
}

/*
CreateAIChatConversationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateAIChatConversationNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create a i chat conversation not found response has a 2xx status code
func (o *CreateAIChatConversationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create a i chat conversation not found response has a 3xx status code
func (o *CreateAIChatConversationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a i chat conversation not found response has a 4xx status code
func (o *CreateAIChatConversationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create a i chat conversation not found response has a 5xx status code
func (o *CreateAIChatConversationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create a i chat conversation not found response a status code equal to that given
func (o *CreateAIChatConversationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create a i chat conversation not found response
func (o *CreateAIChatConversationNotFound) Code() int {
	return 404
}

func (o *CreateAIChatConversationNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations][%d] createAIChatConversationNotFound %s", 404, payload)
}

func (o *CreateAIChatConversationNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations][%d] createAIChatConversationNotFound %s", 404, payload)
}

func (o *CreateAIChatConversationNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateAIChatConversationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateAIChatConversationInternalServerError creates a CreateAIChatConversationInternalServerError with default headers values
func NewCreateAIChatConversationInternalServerError() *CreateAIChatConversationInternalServerError {
	return &CreateAIChatConversationInternalServerError{}
}

/*
CreateAIChatConversationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateAIChatConversationInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create a i chat conversation internal server error response has a 2xx status code
func (o *CreateAIChatConversationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create a i chat conversation internal server error response has a 3xx status code
func (o *CreateAIChatConversationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a i chat conversation internal server error response has a 4xx status code
func (o *CreateAIChatConversationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create a i chat conversation internal server error response has a 5xx status code
func (o *CreateAIChatConversationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create a i chat conversation internal server error response a status code equal to that given
func (o *CreateAIChatConversationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create a i chat conversation internal server error response
func (o *CreateAIChatConversationInternalServerError) Code() int {
	return 500
}

func (o *CreateAIChatConversationInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations][%d] createAIChatConversationInternalServerError %s", 500, payload)
}

func (o *CreateAIChatConversationInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations][%d] createAIChatConversationInternalServerError %s", 500, payload)
}

func (o *CreateAIChatConversationInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateAIChatConversationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
