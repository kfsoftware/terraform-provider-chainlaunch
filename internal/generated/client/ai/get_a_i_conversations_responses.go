// Code generated by go-swagger; DO NOT EDIT.

package ai

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetAIConversationsReader is a Reader for the GetAIConversations structure.
type GetAIConversationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAIConversationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetAIConversationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAIConversationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAIConversationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ai/{projectId}/conversations] getAIConversations", response, response.Code())
	}
}

// NewGetAIConversationsOK creates a GetAIConversationsOK with default headers values
func NewGetAIConversationsOK() *GetAIConversationsOK {
	return &GetAIConversationsOK{}
}

/*
GetAIConversationsOK describes a response with status code 200, with default header values.

OK
*/
type GetAIConversationsOK struct {
	Payload []*models.AiConversationResponse
}

// IsSuccess returns true when this get a i conversations o k response has a 2xx status code
func (o *GetAIConversationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get a i conversations o k response has a 3xx status code
func (o *GetAIConversationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get a i conversations o k response has a 4xx status code
func (o *GetAIConversationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get a i conversations o k response has a 5xx status code
func (o *GetAIConversationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get a i conversations o k response a status code equal to that given
func (o *GetAIConversationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get a i conversations o k response
func (o *GetAIConversationsOK) Code() int {
	return 200
}

func (o *GetAIConversationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations][%d] getAIConversationsOK %s", 200, payload)
}

func (o *GetAIConversationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations][%d] getAIConversationsOK %s", 200, payload)
}

func (o *GetAIConversationsOK) GetPayload() []*models.AiConversationResponse {
	return o.Payload
}

func (o *GetAIConversationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetAIConversationsBadRequest creates a GetAIConversationsBadRequest with default headers values
func NewGetAIConversationsBadRequest() *GetAIConversationsBadRequest {
	return &GetAIConversationsBadRequest{}
}

/*
GetAIConversationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAIConversationsBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get a i conversations bad request response has a 2xx status code
func (o *GetAIConversationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get a i conversations bad request response has a 3xx status code
func (o *GetAIConversationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get a i conversations bad request response has a 4xx status code
func (o *GetAIConversationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get a i conversations bad request response has a 5xx status code
func (o *GetAIConversationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get a i conversations bad request response a status code equal to that given
func (o *GetAIConversationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get a i conversations bad request response
func (o *GetAIConversationsBadRequest) Code() int {
	return 400
}

func (o *GetAIConversationsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations][%d] getAIConversationsBadRequest %s", 400, payload)
}

func (o *GetAIConversationsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations][%d] getAIConversationsBadRequest %s", 400, payload)
}

func (o *GetAIConversationsBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetAIConversationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetAIConversationsInternalServerError creates a GetAIConversationsInternalServerError with default headers values
func NewGetAIConversationsInternalServerError() *GetAIConversationsInternalServerError {
	return &GetAIConversationsInternalServerError{}
}

/*
GetAIConversationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAIConversationsInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get a i conversations internal server error response has a 2xx status code
func (o *GetAIConversationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get a i conversations internal server error response has a 3xx status code
func (o *GetAIConversationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get a i conversations internal server error response has a 4xx status code
func (o *GetAIConversationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get a i conversations internal server error response has a 5xx status code
func (o *GetAIConversationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get a i conversations internal server error response a status code equal to that given
func (o *GetAIConversationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get a i conversations internal server error response
func (o *GetAIConversationsInternalServerError) Code() int {
	return 500
}

func (o *GetAIConversationsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations][%d] getAIConversationsInternalServerError %s", 500, payload)
}

func (o *GetAIConversationsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations][%d] getAIConversationsInternalServerError %s", 500, payload)
}

func (o *GetAIConversationsInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetAIConversationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
