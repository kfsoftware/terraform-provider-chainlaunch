// Code generated by go-swagger; DO NOT EDIT.

package ai

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetAIChatConversationDetailReader is a Reader for the GetAIChatConversationDetail structure.
type GetAIChatConversationDetailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAIChatConversationDetailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetAIChatConversationDetailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAIChatConversationDetailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAIChatConversationDetailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAIChatConversationDetailInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ai/{projectId}/conversations/{conversationId}/export] getAIChatConversationDetail", response, response.Code())
	}
}

// NewGetAIChatConversationDetailOK creates a GetAIChatConversationDetailOK with default headers values
func NewGetAIChatConversationDetailOK() *GetAIChatConversationDetailOK {
	return &GetAIChatConversationDetailOK{}
}

/*
GetAIChatConversationDetailOK describes a response with status code 200, with default header values.

OK
*/
type GetAIChatConversationDetailOK struct {
	Payload *models.AiConversationDetail
}

// IsSuccess returns true when this get a i chat conversation detail o k response has a 2xx status code
func (o *GetAIChatConversationDetailOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get a i chat conversation detail o k response has a 3xx status code
func (o *GetAIChatConversationDetailOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get a i chat conversation detail o k response has a 4xx status code
func (o *GetAIChatConversationDetailOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get a i chat conversation detail o k response has a 5xx status code
func (o *GetAIChatConversationDetailOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get a i chat conversation detail o k response a status code equal to that given
func (o *GetAIChatConversationDetailOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get a i chat conversation detail o k response
func (o *GetAIChatConversationDetailOK) Code() int {
	return 200
}

func (o *GetAIChatConversationDetailOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations/{conversationId}/export][%d] getAIChatConversationDetailOK %s", 200, payload)
}

func (o *GetAIChatConversationDetailOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations/{conversationId}/export][%d] getAIChatConversationDetailOK %s", 200, payload)
}

func (o *GetAIChatConversationDetailOK) GetPayload() *models.AiConversationDetail {
	return o.Payload
}

func (o *GetAIChatConversationDetailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AiConversationDetail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetAIChatConversationDetailBadRequest creates a GetAIChatConversationDetailBadRequest with default headers values
func NewGetAIChatConversationDetailBadRequest() *GetAIChatConversationDetailBadRequest {
	return &GetAIChatConversationDetailBadRequest{}
}

/*
GetAIChatConversationDetailBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAIChatConversationDetailBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get a i chat conversation detail bad request response has a 2xx status code
func (o *GetAIChatConversationDetailBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get a i chat conversation detail bad request response has a 3xx status code
func (o *GetAIChatConversationDetailBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get a i chat conversation detail bad request response has a 4xx status code
func (o *GetAIChatConversationDetailBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get a i chat conversation detail bad request response has a 5xx status code
func (o *GetAIChatConversationDetailBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get a i chat conversation detail bad request response a status code equal to that given
func (o *GetAIChatConversationDetailBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get a i chat conversation detail bad request response
func (o *GetAIChatConversationDetailBadRequest) Code() int {
	return 400
}

func (o *GetAIChatConversationDetailBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations/{conversationId}/export][%d] getAIChatConversationDetailBadRequest %s", 400, payload)
}

func (o *GetAIChatConversationDetailBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations/{conversationId}/export][%d] getAIChatConversationDetailBadRequest %s", 400, payload)
}

func (o *GetAIChatConversationDetailBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetAIChatConversationDetailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetAIChatConversationDetailNotFound creates a GetAIChatConversationDetailNotFound with default headers values
func NewGetAIChatConversationDetailNotFound() *GetAIChatConversationDetailNotFound {
	return &GetAIChatConversationDetailNotFound{}
}

/*
GetAIChatConversationDetailNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAIChatConversationDetailNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get a i chat conversation detail not found response has a 2xx status code
func (o *GetAIChatConversationDetailNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get a i chat conversation detail not found response has a 3xx status code
func (o *GetAIChatConversationDetailNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get a i chat conversation detail not found response has a 4xx status code
func (o *GetAIChatConversationDetailNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get a i chat conversation detail not found response has a 5xx status code
func (o *GetAIChatConversationDetailNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get a i chat conversation detail not found response a status code equal to that given
func (o *GetAIChatConversationDetailNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get a i chat conversation detail not found response
func (o *GetAIChatConversationDetailNotFound) Code() int {
	return 404
}

func (o *GetAIChatConversationDetailNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations/{conversationId}/export][%d] getAIChatConversationDetailNotFound %s", 404, payload)
}

func (o *GetAIChatConversationDetailNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations/{conversationId}/export][%d] getAIChatConversationDetailNotFound %s", 404, payload)
}

func (o *GetAIChatConversationDetailNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetAIChatConversationDetailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetAIChatConversationDetailInternalServerError creates a GetAIChatConversationDetailInternalServerError with default headers values
func NewGetAIChatConversationDetailInternalServerError() *GetAIChatConversationDetailInternalServerError {
	return &GetAIChatConversationDetailInternalServerError{}
}

/*
GetAIChatConversationDetailInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAIChatConversationDetailInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get a i chat conversation detail internal server error response has a 2xx status code
func (o *GetAIChatConversationDetailInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get a i chat conversation detail internal server error response has a 3xx status code
func (o *GetAIChatConversationDetailInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get a i chat conversation detail internal server error response has a 4xx status code
func (o *GetAIChatConversationDetailInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get a i chat conversation detail internal server error response has a 5xx status code
func (o *GetAIChatConversationDetailInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get a i chat conversation detail internal server error response a status code equal to that given
func (o *GetAIChatConversationDetailInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get a i chat conversation detail internal server error response
func (o *GetAIChatConversationDetailInternalServerError) Code() int {
	return 500
}

func (o *GetAIChatConversationDetailInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations/{conversationId}/export][%d] getAIChatConversationDetailInternalServerError %s", 500, payload)
}

func (o *GetAIChatConversationDetailInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ai/{projectId}/conversations/{conversationId}/export][%d] getAIChatConversationDetailInternalServerError %s", 500, payload)
}

func (o *GetAIChatConversationDetailInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetAIChatConversationDetailInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
