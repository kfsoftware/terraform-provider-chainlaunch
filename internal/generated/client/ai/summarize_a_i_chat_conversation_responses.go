// Code generated by go-swagger; DO NOT EDIT.

package ai

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// SummarizeAIChatConversationReader is a Reader for the SummarizeAIChatConversation structure.
type SummarizeAIChatConversationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SummarizeAIChatConversationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 201:
		result := NewSummarizeAIChatConversationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSummarizeAIChatConversationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSummarizeAIChatConversationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSummarizeAIChatConversationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /ai/{projectId}/conversations/{conversationId}/summarize] summarizeAIChatConversation", response, response.Code())
	}
}

// NewSummarizeAIChatConversationCreated creates a SummarizeAIChatConversationCreated with default headers values
func NewSummarizeAIChatConversationCreated() *SummarizeAIChatConversationCreated {
	return &SummarizeAIChatConversationCreated{}
}

/*
SummarizeAIChatConversationCreated describes a response with status code 201, with default header values.

Created
*/
type SummarizeAIChatConversationCreated struct {
	Payload models.ResponseDetailedResponse
}

// IsSuccess returns true when this summarize a i chat conversation created response has a 2xx status code
func (o *SummarizeAIChatConversationCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this summarize a i chat conversation created response has a 3xx status code
func (o *SummarizeAIChatConversationCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this summarize a i chat conversation created response has a 4xx status code
func (o *SummarizeAIChatConversationCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this summarize a i chat conversation created response has a 5xx status code
func (o *SummarizeAIChatConversationCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this summarize a i chat conversation created response a status code equal to that given
func (o *SummarizeAIChatConversationCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the summarize a i chat conversation created response
func (o *SummarizeAIChatConversationCreated) Code() int {
	return 201
}

func (o *SummarizeAIChatConversationCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations/{conversationId}/summarize][%d] summarizeAIChatConversationCreated %s", 201, payload)
}

func (o *SummarizeAIChatConversationCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations/{conversationId}/summarize][%d] summarizeAIChatConversationCreated %s", 201, payload)
}

func (o *SummarizeAIChatConversationCreated) GetPayload() models.ResponseDetailedResponse {
	return o.Payload
}

func (o *SummarizeAIChatConversationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewSummarizeAIChatConversationBadRequest creates a SummarizeAIChatConversationBadRequest with default headers values
func NewSummarizeAIChatConversationBadRequest() *SummarizeAIChatConversationBadRequest {
	return &SummarizeAIChatConversationBadRequest{}
}

/*
SummarizeAIChatConversationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SummarizeAIChatConversationBadRequest struct {
	Payload *models.ResponseDetailedErrorResponse
}

// IsSuccess returns true when this summarize a i chat conversation bad request response has a 2xx status code
func (o *SummarizeAIChatConversationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this summarize a i chat conversation bad request response has a 3xx status code
func (o *SummarizeAIChatConversationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this summarize a i chat conversation bad request response has a 4xx status code
func (o *SummarizeAIChatConversationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this summarize a i chat conversation bad request response has a 5xx status code
func (o *SummarizeAIChatConversationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this summarize a i chat conversation bad request response a status code equal to that given
func (o *SummarizeAIChatConversationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the summarize a i chat conversation bad request response
func (o *SummarizeAIChatConversationBadRequest) Code() int {
	return 400
}

func (o *SummarizeAIChatConversationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations/{conversationId}/summarize][%d] summarizeAIChatConversationBadRequest %s", 400, payload)
}

func (o *SummarizeAIChatConversationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations/{conversationId}/summarize][%d] summarizeAIChatConversationBadRequest %s", 400, payload)
}

func (o *SummarizeAIChatConversationBadRequest) GetPayload() *models.ResponseDetailedErrorResponse {
	return o.Payload
}

func (o *SummarizeAIChatConversationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseDetailedErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewSummarizeAIChatConversationNotFound creates a SummarizeAIChatConversationNotFound with default headers values
func NewSummarizeAIChatConversationNotFound() *SummarizeAIChatConversationNotFound {
	return &SummarizeAIChatConversationNotFound{}
}

/*
SummarizeAIChatConversationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SummarizeAIChatConversationNotFound struct {
	Payload *models.ResponseDetailedErrorResponse
}

// IsSuccess returns true when this summarize a i chat conversation not found response has a 2xx status code
func (o *SummarizeAIChatConversationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this summarize a i chat conversation not found response has a 3xx status code
func (o *SummarizeAIChatConversationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this summarize a i chat conversation not found response has a 4xx status code
func (o *SummarizeAIChatConversationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this summarize a i chat conversation not found response has a 5xx status code
func (o *SummarizeAIChatConversationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this summarize a i chat conversation not found response a status code equal to that given
func (o *SummarizeAIChatConversationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the summarize a i chat conversation not found response
func (o *SummarizeAIChatConversationNotFound) Code() int {
	return 404
}

func (o *SummarizeAIChatConversationNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations/{conversationId}/summarize][%d] summarizeAIChatConversationNotFound %s", 404, payload)
}

func (o *SummarizeAIChatConversationNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations/{conversationId}/summarize][%d] summarizeAIChatConversationNotFound %s", 404, payload)
}

func (o *SummarizeAIChatConversationNotFound) GetPayload() *models.ResponseDetailedErrorResponse {
	return o.Payload
}

func (o *SummarizeAIChatConversationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseDetailedErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewSummarizeAIChatConversationInternalServerError creates a SummarizeAIChatConversationInternalServerError with default headers values
func NewSummarizeAIChatConversationInternalServerError() *SummarizeAIChatConversationInternalServerError {
	return &SummarizeAIChatConversationInternalServerError{}
}

/*
SummarizeAIChatConversationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SummarizeAIChatConversationInternalServerError struct {
	Payload *models.ResponseDetailedErrorResponse
}

// IsSuccess returns true when this summarize a i chat conversation internal server error response has a 2xx status code
func (o *SummarizeAIChatConversationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this summarize a i chat conversation internal server error response has a 3xx status code
func (o *SummarizeAIChatConversationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this summarize a i chat conversation internal server error response has a 4xx status code
func (o *SummarizeAIChatConversationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this summarize a i chat conversation internal server error response has a 5xx status code
func (o *SummarizeAIChatConversationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this summarize a i chat conversation internal server error response a status code equal to that given
func (o *SummarizeAIChatConversationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the summarize a i chat conversation internal server error response
func (o *SummarizeAIChatConversationInternalServerError) Code() int {
	return 500
}

func (o *SummarizeAIChatConversationInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations/{conversationId}/summarize][%d] summarizeAIChatConversationInternalServerError %s", 500, payload)
}

func (o *SummarizeAIChatConversationInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ai/{projectId}/conversations/{conversationId}/summarize][%d] summarizeAIChatConversationInternalServerError %s", 500, payload)
}

func (o *SummarizeAIChatConversationInternalServerError) GetPayload() *models.ResponseDetailedErrorResponse {
	return o.Payload
}

func (o *SummarizeAIChatConversationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseDetailedErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
