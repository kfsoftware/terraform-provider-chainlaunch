// Code generated by go-swagger; DO NOT EDIT.

package node_sharing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// SyncExternalNodesReader is a Reader for the SyncExternalNodes structure.
type SyncExternalNodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncExternalNodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewSyncExternalNodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSyncExternalNodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /node/sync-external-nodes] syncExternalNodes", response, response.Code())
	}
}

// NewSyncExternalNodesOK creates a SyncExternalNodesOK with default headers values
func NewSyncExternalNodesOK() *SyncExternalNodesOK {
	return &SyncExternalNodesOK{}
}

/*
SyncExternalNodesOK describes a response with status code 200, with default header values.

OK
*/
type SyncExternalNodesOK struct {
	Payload *models.CommunicationSyncExternalNodesResponse
}

// IsSuccess returns true when this sync external nodes o k response has a 2xx status code
func (o *SyncExternalNodesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sync external nodes o k response has a 3xx status code
func (o *SyncExternalNodesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync external nodes o k response has a 4xx status code
func (o *SyncExternalNodesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this sync external nodes o k response has a 5xx status code
func (o *SyncExternalNodesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this sync external nodes o k response a status code equal to that given
func (o *SyncExternalNodesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the sync external nodes o k response
func (o *SyncExternalNodesOK) Code() int {
	return 200
}

func (o *SyncExternalNodesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /node/sync-external-nodes][%d] syncExternalNodesOK %s", 200, payload)
}

func (o *SyncExternalNodesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /node/sync-external-nodes][%d] syncExternalNodesOK %s", 200, payload)
}

func (o *SyncExternalNodesOK) GetPayload() *models.CommunicationSyncExternalNodesResponse {
	return o.Payload
}

func (o *SyncExternalNodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommunicationSyncExternalNodesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewSyncExternalNodesBadRequest creates a SyncExternalNodesBadRequest with default headers values
func NewSyncExternalNodesBadRequest() *SyncExternalNodesBadRequest {
	return &SyncExternalNodesBadRequest{}
}

/*
SyncExternalNodesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SyncExternalNodesBadRequest struct {
	Payload *models.CommunicationErrorResponse
}

// IsSuccess returns true when this sync external nodes bad request response has a 2xx status code
func (o *SyncExternalNodesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync external nodes bad request response has a 3xx status code
func (o *SyncExternalNodesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync external nodes bad request response has a 4xx status code
func (o *SyncExternalNodesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync external nodes bad request response has a 5xx status code
func (o *SyncExternalNodesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this sync external nodes bad request response a status code equal to that given
func (o *SyncExternalNodesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the sync external nodes bad request response
func (o *SyncExternalNodesBadRequest) Code() int {
	return 400
}

func (o *SyncExternalNodesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /node/sync-external-nodes][%d] syncExternalNodesBadRequest %s", 400, payload)
}

func (o *SyncExternalNodesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /node/sync-external-nodes][%d] syncExternalNodesBadRequest %s", 400, payload)
}

func (o *SyncExternalNodesBadRequest) GetPayload() *models.CommunicationErrorResponse {
	return o.Payload
}

func (o *SyncExternalNodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommunicationErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
