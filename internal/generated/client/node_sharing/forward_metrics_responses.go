// Code generated by go-swagger; DO NOT EDIT.

package node_sharing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ForwardMetricsReader is a Reader for the ForwardMetrics structure.
type ForwardMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ForwardMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewForwardMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewForwardMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewForwardMetricsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /node/forward-metrics] forwardMetrics", response, response.Code())
	}
}

// NewForwardMetricsOK creates a ForwardMetricsOK with default headers values
func NewForwardMetricsOK() *ForwardMetricsOK {
	return &ForwardMetricsOK{}
}

/*
ForwardMetricsOK describes a response with status code 200, with default header values.

Raw Prometheus federate response
*/
type ForwardMetricsOK struct {
	Payload string
}

// IsSuccess returns true when this forward metrics o k response has a 2xx status code
func (o *ForwardMetricsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this forward metrics o k response has a 3xx status code
func (o *ForwardMetricsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this forward metrics o k response has a 4xx status code
func (o *ForwardMetricsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this forward metrics o k response has a 5xx status code
func (o *ForwardMetricsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this forward metrics o k response a status code equal to that given
func (o *ForwardMetricsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the forward metrics o k response
func (o *ForwardMetricsOK) Code() int {
	return 200
}

func (o *ForwardMetricsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/forward-metrics][%d] forwardMetricsOK %s", 200, payload)
}

func (o *ForwardMetricsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/forward-metrics][%d] forwardMetricsOK %s", 200, payload)
}

func (o *ForwardMetricsOK) GetPayload() string {
	return o.Payload
}

func (o *ForwardMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewForwardMetricsBadRequest creates a ForwardMetricsBadRequest with default headers values
func NewForwardMetricsBadRequest() *ForwardMetricsBadRequest {
	return &ForwardMetricsBadRequest{}
}

/*
ForwardMetricsBadRequest describes a response with status code 400, with default header values.

No Prometheus instance deployed
*/
type ForwardMetricsBadRequest struct {
	Payload *models.CommunicationErrorResponse
}

// IsSuccess returns true when this forward metrics bad request response has a 2xx status code
func (o *ForwardMetricsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this forward metrics bad request response has a 3xx status code
func (o *ForwardMetricsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this forward metrics bad request response has a 4xx status code
func (o *ForwardMetricsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this forward metrics bad request response has a 5xx status code
func (o *ForwardMetricsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this forward metrics bad request response a status code equal to that given
func (o *ForwardMetricsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the forward metrics bad request response
func (o *ForwardMetricsBadRequest) Code() int {
	return 400
}

func (o *ForwardMetricsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/forward-metrics][%d] forwardMetricsBadRequest %s", 400, payload)
}

func (o *ForwardMetricsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/forward-metrics][%d] forwardMetricsBadRequest %s", 400, payload)
}

func (o *ForwardMetricsBadRequest) GetPayload() *models.CommunicationErrorResponse {
	return o.Payload
}

func (o *ForwardMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommunicationErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewForwardMetricsInternalServerError creates a ForwardMetricsInternalServerError with default headers values
func NewForwardMetricsInternalServerError() *ForwardMetricsInternalServerError {
	return &ForwardMetricsInternalServerError{}
}

/*
ForwardMetricsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ForwardMetricsInternalServerError struct {
	Payload *models.CommunicationErrorResponse
}

// IsSuccess returns true when this forward metrics internal server error response has a 2xx status code
func (o *ForwardMetricsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this forward metrics internal server error response has a 3xx status code
func (o *ForwardMetricsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this forward metrics internal server error response has a 4xx status code
func (o *ForwardMetricsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this forward metrics internal server error response has a 5xx status code
func (o *ForwardMetricsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this forward metrics internal server error response a status code equal to that given
func (o *ForwardMetricsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the forward metrics internal server error response
func (o *ForwardMetricsInternalServerError) Code() int {
	return 500
}

func (o *ForwardMetricsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/forward-metrics][%d] forwardMetricsInternalServerError %s", 500, payload)
}

func (o *ForwardMetricsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/forward-metrics][%d] forwardMetricsInternalServerError %s", 500, payload)
}

func (o *ForwardMetricsInternalServerError) GetPayload() *models.CommunicationErrorResponse {
	return o.Payload
}

func (o *ForwardMetricsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommunicationErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
