// Code generated by go-swagger; DO NOT EDIT.

package node_sharing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetExternalNodesForConnectedPeerReader is a Reader for the GetExternalNodesForConnectedPeer structure.
type GetExternalNodesForConnectedPeerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExternalNodesForConnectedPeerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetExternalNodesForConnectedPeerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExternalNodesForConnectedPeerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExternalNodesForConnectedPeerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /node/connected-peers/{peer_id}/nodes] getExternalNodesForConnectedPeer", response, response.Code())
	}
}

// NewGetExternalNodesForConnectedPeerOK creates a GetExternalNodesForConnectedPeerOK with default headers values
func NewGetExternalNodesForConnectedPeerOK() *GetExternalNodesForConnectedPeerOK {
	return &GetExternalNodesForConnectedPeerOK{}
}

/*
GetExternalNodesForConnectedPeerOK describes a response with status code 200, with default header values.

OK
*/
type GetExternalNodesForConnectedPeerOK struct {
	Payload *models.CommunicationExternalNodesResponse
}

// IsSuccess returns true when this get external nodes for connected peer o k response has a 2xx status code
func (o *GetExternalNodesForConnectedPeerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get external nodes for connected peer o k response has a 3xx status code
func (o *GetExternalNodesForConnectedPeerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external nodes for connected peer o k response has a 4xx status code
func (o *GetExternalNodesForConnectedPeerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get external nodes for connected peer o k response has a 5xx status code
func (o *GetExternalNodesForConnectedPeerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get external nodes for connected peer o k response a status code equal to that given
func (o *GetExternalNodesForConnectedPeerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get external nodes for connected peer o k response
func (o *GetExternalNodesForConnectedPeerOK) Code() int {
	return 200
}

func (o *GetExternalNodesForConnectedPeerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/connected-peers/{peer_id}/nodes][%d] getExternalNodesForConnectedPeerOK %s", 200, payload)
}

func (o *GetExternalNodesForConnectedPeerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/connected-peers/{peer_id}/nodes][%d] getExternalNodesForConnectedPeerOK %s", 200, payload)
}

func (o *GetExternalNodesForConnectedPeerOK) GetPayload() *models.CommunicationExternalNodesResponse {
	return o.Payload
}

func (o *GetExternalNodesForConnectedPeerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommunicationExternalNodesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetExternalNodesForConnectedPeerBadRequest creates a GetExternalNodesForConnectedPeerBadRequest with default headers values
func NewGetExternalNodesForConnectedPeerBadRequest() *GetExternalNodesForConnectedPeerBadRequest {
	return &GetExternalNodesForConnectedPeerBadRequest{}
}

/*
GetExternalNodesForConnectedPeerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetExternalNodesForConnectedPeerBadRequest struct {
	Payload *models.CommunicationErrorResponse
}

// IsSuccess returns true when this get external nodes for connected peer bad request response has a 2xx status code
func (o *GetExternalNodesForConnectedPeerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get external nodes for connected peer bad request response has a 3xx status code
func (o *GetExternalNodesForConnectedPeerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external nodes for connected peer bad request response has a 4xx status code
func (o *GetExternalNodesForConnectedPeerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get external nodes for connected peer bad request response has a 5xx status code
func (o *GetExternalNodesForConnectedPeerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get external nodes for connected peer bad request response a status code equal to that given
func (o *GetExternalNodesForConnectedPeerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get external nodes for connected peer bad request response
func (o *GetExternalNodesForConnectedPeerBadRequest) Code() int {
	return 400
}

func (o *GetExternalNodesForConnectedPeerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/connected-peers/{peer_id}/nodes][%d] getExternalNodesForConnectedPeerBadRequest %s", 400, payload)
}

func (o *GetExternalNodesForConnectedPeerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/connected-peers/{peer_id}/nodes][%d] getExternalNodesForConnectedPeerBadRequest %s", 400, payload)
}

func (o *GetExternalNodesForConnectedPeerBadRequest) GetPayload() *models.CommunicationErrorResponse {
	return o.Payload
}

func (o *GetExternalNodesForConnectedPeerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommunicationErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetExternalNodesForConnectedPeerNotFound creates a GetExternalNodesForConnectedPeerNotFound with default headers values
func NewGetExternalNodesForConnectedPeerNotFound() *GetExternalNodesForConnectedPeerNotFound {
	return &GetExternalNodesForConnectedPeerNotFound{}
}

/*
GetExternalNodesForConnectedPeerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetExternalNodesForConnectedPeerNotFound struct {
	Payload *models.CommunicationErrorResponse
}

// IsSuccess returns true when this get external nodes for connected peer not found response has a 2xx status code
func (o *GetExternalNodesForConnectedPeerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get external nodes for connected peer not found response has a 3xx status code
func (o *GetExternalNodesForConnectedPeerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external nodes for connected peer not found response has a 4xx status code
func (o *GetExternalNodesForConnectedPeerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get external nodes for connected peer not found response has a 5xx status code
func (o *GetExternalNodesForConnectedPeerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get external nodes for connected peer not found response a status code equal to that given
func (o *GetExternalNodesForConnectedPeerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get external nodes for connected peer not found response
func (o *GetExternalNodesForConnectedPeerNotFound) Code() int {
	return 404
}

func (o *GetExternalNodesForConnectedPeerNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/connected-peers/{peer_id}/nodes][%d] getExternalNodesForConnectedPeerNotFound %s", 404, payload)
}

func (o *GetExternalNodesForConnectedPeerNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /node/connected-peers/{peer_id}/nodes][%d] getExternalNodesForConnectedPeerNotFound %s", 404, payload)
}

func (o *GetExternalNodesForConnectedPeerNotFound) GetPayload() *models.CommunicationErrorResponse {
	return o.Payload
}

func (o *GetExternalNodesForConnectedPeerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommunicationErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
