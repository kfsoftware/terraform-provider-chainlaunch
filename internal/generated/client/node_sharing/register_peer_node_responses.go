// Code generated by go-swagger; DO NOT EDIT.

package node_sharing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// RegisterPeerNodeReader is a Reader for the RegisterPeerNode structure.
type RegisterPeerNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterPeerNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterPeerNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRegisterPeerNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /node/register-peer] registerPeerNode", response, response.Code())
	}
}

// NewRegisterPeerNodeOK creates a RegisterPeerNodeOK with default headers values
func NewRegisterPeerNodeOK() *RegisterPeerNodeOK {
	return &RegisterPeerNodeOK{}
}

/*
RegisterPeerNodeOK describes a response with status code 200, with default header values.

Registration response
*/
type RegisterPeerNodeOK struct {
	Payload map[string]string
}

// IsSuccess returns true when this register peer node o k response has a 2xx status code
func (o *RegisterPeerNodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register peer node o k response has a 3xx status code
func (o *RegisterPeerNodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register peer node o k response has a 4xx status code
func (o *RegisterPeerNodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this register peer node o k response has a 5xx status code
func (o *RegisterPeerNodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this register peer node o k response a status code equal to that given
func (o *RegisterPeerNodeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the register peer node o k response
func (o *RegisterPeerNodeOK) Code() int {
	return 200
}

func (o *RegisterPeerNodeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /node/register-peer][%d] registerPeerNodeOK %s", 200, payload)
}

func (o *RegisterPeerNodeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /node/register-peer][%d] registerPeerNodeOK %s", 200, payload)
}

func (o *RegisterPeerNodeOK) GetPayload() map[string]string {
	return o.Payload
}

func (o *RegisterPeerNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewRegisterPeerNodeBadRequest creates a RegisterPeerNodeBadRequest with default headers values
func NewRegisterPeerNodeBadRequest() *RegisterPeerNodeBadRequest {
	return &RegisterPeerNodeBadRequest{}
}

/*
RegisterPeerNodeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RegisterPeerNodeBadRequest struct {
	Payload *models.CommunicationErrorResponse
}

// IsSuccess returns true when this register peer node bad request response has a 2xx status code
func (o *RegisterPeerNodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register peer node bad request response has a 3xx status code
func (o *RegisterPeerNodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register peer node bad request response has a 4xx status code
func (o *RegisterPeerNodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this register peer node bad request response has a 5xx status code
func (o *RegisterPeerNodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this register peer node bad request response a status code equal to that given
func (o *RegisterPeerNodeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the register peer node bad request response
func (o *RegisterPeerNodeBadRequest) Code() int {
	return 400
}

func (o *RegisterPeerNodeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /node/register-peer][%d] registerPeerNodeBadRequest %s", 400, payload)
}

func (o *RegisterPeerNodeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /node/register-peer][%d] registerPeerNodeBadRequest %s", 400, payload)
}

func (o *RegisterPeerNodeBadRequest) GetPayload() *models.CommunicationErrorResponse {
	return o.Payload
}

func (o *RegisterPeerNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommunicationErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
