// Code generated by go-swagger; DO NOT EDIT.

package backups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DeleteBackupReader is a Reader for the DeleteBackup structure.
type DeleteBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteBackupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteBackupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteBackupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteBackupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /backups/{id}] deleteBackup", response, response.Code())
	}
}

// NewDeleteBackupNoContent creates a DeleteBackupNoContent with default headers values
func NewDeleteBackupNoContent() *DeleteBackupNoContent {
	return &DeleteBackupNoContent{}
}

/*
DeleteBackupNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteBackupNoContent struct {
}

// IsSuccess returns true when this delete backup no content response has a 2xx status code
func (o *DeleteBackupNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete backup no content response has a 3xx status code
func (o *DeleteBackupNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup no content response has a 4xx status code
func (o *DeleteBackupNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete backup no content response has a 5xx status code
func (o *DeleteBackupNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete backup no content response a status code equal to that given
func (o *DeleteBackupNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete backup no content response
func (o *DeleteBackupNoContent) Code() int {
	return 204
}

func (o *DeleteBackupNoContent) Error() string {
	return fmt.Sprintf("[DELETE /backups/{id}][%d] deleteBackupNoContent", 204)
}

func (o *DeleteBackupNoContent) String() string {
	return fmt.Sprintf("[DELETE /backups/{id}][%d] deleteBackupNoContent", 204)
}

func (o *DeleteBackupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBackupBadRequest creates a DeleteBackupBadRequest with default headers values
func NewDeleteBackupBadRequest() *DeleteBackupBadRequest {
	return &DeleteBackupBadRequest{}
}

/*
DeleteBackupBadRequest describes a response with status code 400, with default header values.

Invalid ID format
*/
type DeleteBackupBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this delete backup bad request response has a 2xx status code
func (o *DeleteBackupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete backup bad request response has a 3xx status code
func (o *DeleteBackupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup bad request response has a 4xx status code
func (o *DeleteBackupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete backup bad request response has a 5xx status code
func (o *DeleteBackupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete backup bad request response a status code equal to that given
func (o *DeleteBackupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete backup bad request response
func (o *DeleteBackupBadRequest) Code() int {
	return 400
}

func (o *DeleteBackupBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/{id}][%d] deleteBackupBadRequest %s", 400, payload)
}

func (o *DeleteBackupBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/{id}][%d] deleteBackupBadRequest %s", 400, payload)
}

func (o *DeleteBackupBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeleteBackupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteBackupNotFound creates a DeleteBackupNotFound with default headers values
func NewDeleteBackupNotFound() *DeleteBackupNotFound {
	return &DeleteBackupNotFound{}
}

/*
DeleteBackupNotFound describes a response with status code 404, with default header values.

Backup not found
*/
type DeleteBackupNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this delete backup not found response has a 2xx status code
func (o *DeleteBackupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete backup not found response has a 3xx status code
func (o *DeleteBackupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup not found response has a 4xx status code
func (o *DeleteBackupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete backup not found response has a 5xx status code
func (o *DeleteBackupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete backup not found response a status code equal to that given
func (o *DeleteBackupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete backup not found response
func (o *DeleteBackupNotFound) Code() int {
	return 404
}

func (o *DeleteBackupNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/{id}][%d] deleteBackupNotFound %s", 404, payload)
}

func (o *DeleteBackupNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/{id}][%d] deleteBackupNotFound %s", 404, payload)
}

func (o *DeleteBackupNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeleteBackupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteBackupInternalServerError creates a DeleteBackupInternalServerError with default headers values
func NewDeleteBackupInternalServerError() *DeleteBackupInternalServerError {
	return &DeleteBackupInternalServerError{}
}

/*
DeleteBackupInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteBackupInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this delete backup internal server error response has a 2xx status code
func (o *DeleteBackupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete backup internal server error response has a 3xx status code
func (o *DeleteBackupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup internal server error response has a 4xx status code
func (o *DeleteBackupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete backup internal server error response has a 5xx status code
func (o *DeleteBackupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete backup internal server error response a status code equal to that given
func (o *DeleteBackupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete backup internal server error response
func (o *DeleteBackupInternalServerError) Code() int {
	return 500
}

func (o *DeleteBackupInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/{id}][%d] deleteBackupInternalServerError %s", 500, payload)
}

func (o *DeleteBackupInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/{id}][%d] deleteBackupInternalServerError %s", 500, payload)
}

func (o *DeleteBackupInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeleteBackupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
