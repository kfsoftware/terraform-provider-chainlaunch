// Code generated by go-swagger; DO NOT EDIT.

package directories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DeleteProjectsProjectIDDirsDeleteReader is a Reader for the DeleteProjectsProjectIDDirsDelete structure.
type DeleteProjectsProjectIDDirsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectsProjectIDDirsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectsProjectIDDirsDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProjectsProjectIDDirsDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteProjectsProjectIDDirsDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProjectsProjectIDDirsDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProjectsProjectIDDirsDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteProjectsProjectIDDirsDeleteConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteProjectsProjectIDDirsDeleteUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteProjectsProjectIDDirsDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /projects/{projectId}/dirs/delete] DeleteProjectsProjectIDDirsDelete", response, response.Code())
	}
}

// NewDeleteProjectsProjectIDDirsDeleteOK creates a DeleteProjectsProjectIDDirsDeleteOK with default headers values
func NewDeleteProjectsProjectIDDirsDeleteOK() *DeleteProjectsProjectIDDirsDeleteOK {
	return &DeleteProjectsProjectIDDirsDeleteOK{}
}

/*
DeleteProjectsProjectIDDirsDeleteOK describes a response with status code 200, with default header values.

OK
*/
type DeleteProjectsProjectIDDirsDeleteOK struct {
	Payload *models.DirsDeleteDirResponse
}

// IsSuccess returns true when this delete projects project Id dirs delete o k response has a 2xx status code
func (o *DeleteProjectsProjectIDDirsDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete projects project Id dirs delete o k response has a 3xx status code
func (o *DeleteProjectsProjectIDDirsDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id dirs delete o k response has a 4xx status code
func (o *DeleteProjectsProjectIDDirsDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete projects project Id dirs delete o k response has a 5xx status code
func (o *DeleteProjectsProjectIDDirsDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id dirs delete o k response a status code equal to that given
func (o *DeleteProjectsProjectIDDirsDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete projects project Id dirs delete o k response
func (o *DeleteProjectsProjectIDDirsDeleteOK) Code() int {
	return 200
}

func (o *DeleteProjectsProjectIDDirsDeleteOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteOK %s", 200, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteOK %s", 200, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteOK) GetPayload() *models.DirsDeleteDirResponse {
	return o.Payload
}

func (o *DeleteProjectsProjectIDDirsDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirsDeleteDirResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDDirsDeleteBadRequest creates a DeleteProjectsProjectIDDirsDeleteBadRequest with default headers values
func NewDeleteProjectsProjectIDDirsDeleteBadRequest() *DeleteProjectsProjectIDDirsDeleteBadRequest {
	return &DeleteProjectsProjectIDDirsDeleteBadRequest{}
}

/*
DeleteProjectsProjectIDDirsDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteProjectsProjectIDDirsDeleteBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete projects project Id dirs delete bad request response has a 2xx status code
func (o *DeleteProjectsProjectIDDirsDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id dirs delete bad request response has a 3xx status code
func (o *DeleteProjectsProjectIDDirsDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id dirs delete bad request response has a 4xx status code
func (o *DeleteProjectsProjectIDDirsDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id dirs delete bad request response has a 5xx status code
func (o *DeleteProjectsProjectIDDirsDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id dirs delete bad request response a status code equal to that given
func (o *DeleteProjectsProjectIDDirsDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete projects project Id dirs delete bad request response
func (o *DeleteProjectsProjectIDDirsDeleteBadRequest) Code() int {
	return 400
}

func (o *DeleteProjectsProjectIDDirsDeleteBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteBadRequest %s", 400, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteBadRequest %s", 400, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteProjectsProjectIDDirsDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDDirsDeleteUnauthorized creates a DeleteProjectsProjectIDDirsDeleteUnauthorized with default headers values
func NewDeleteProjectsProjectIDDirsDeleteUnauthorized() *DeleteProjectsProjectIDDirsDeleteUnauthorized {
	return &DeleteProjectsProjectIDDirsDeleteUnauthorized{}
}

/*
DeleteProjectsProjectIDDirsDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteProjectsProjectIDDirsDeleteUnauthorized struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete projects project Id dirs delete unauthorized response has a 2xx status code
func (o *DeleteProjectsProjectIDDirsDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id dirs delete unauthorized response has a 3xx status code
func (o *DeleteProjectsProjectIDDirsDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id dirs delete unauthorized response has a 4xx status code
func (o *DeleteProjectsProjectIDDirsDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id dirs delete unauthorized response has a 5xx status code
func (o *DeleteProjectsProjectIDDirsDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id dirs delete unauthorized response a status code equal to that given
func (o *DeleteProjectsProjectIDDirsDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete projects project Id dirs delete unauthorized response
func (o *DeleteProjectsProjectIDDirsDeleteUnauthorized) Code() int {
	return 401
}

func (o *DeleteProjectsProjectIDDirsDeleteUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteUnauthorized %s", 401, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteUnauthorized %s", 401, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteUnauthorized) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteProjectsProjectIDDirsDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDDirsDeleteForbidden creates a DeleteProjectsProjectIDDirsDeleteForbidden with default headers values
func NewDeleteProjectsProjectIDDirsDeleteForbidden() *DeleteProjectsProjectIDDirsDeleteForbidden {
	return &DeleteProjectsProjectIDDirsDeleteForbidden{}
}

/*
DeleteProjectsProjectIDDirsDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteProjectsProjectIDDirsDeleteForbidden struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete projects project Id dirs delete forbidden response has a 2xx status code
func (o *DeleteProjectsProjectIDDirsDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id dirs delete forbidden response has a 3xx status code
func (o *DeleteProjectsProjectIDDirsDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id dirs delete forbidden response has a 4xx status code
func (o *DeleteProjectsProjectIDDirsDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id dirs delete forbidden response has a 5xx status code
func (o *DeleteProjectsProjectIDDirsDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id dirs delete forbidden response a status code equal to that given
func (o *DeleteProjectsProjectIDDirsDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete projects project Id dirs delete forbidden response
func (o *DeleteProjectsProjectIDDirsDeleteForbidden) Code() int {
	return 403
}

func (o *DeleteProjectsProjectIDDirsDeleteForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteForbidden %s", 403, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteForbidden %s", 403, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteForbidden) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteProjectsProjectIDDirsDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDDirsDeleteNotFound creates a DeleteProjectsProjectIDDirsDeleteNotFound with default headers values
func NewDeleteProjectsProjectIDDirsDeleteNotFound() *DeleteProjectsProjectIDDirsDeleteNotFound {
	return &DeleteProjectsProjectIDDirsDeleteNotFound{}
}

/*
DeleteProjectsProjectIDDirsDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteProjectsProjectIDDirsDeleteNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete projects project Id dirs delete not found response has a 2xx status code
func (o *DeleteProjectsProjectIDDirsDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id dirs delete not found response has a 3xx status code
func (o *DeleteProjectsProjectIDDirsDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id dirs delete not found response has a 4xx status code
func (o *DeleteProjectsProjectIDDirsDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id dirs delete not found response has a 5xx status code
func (o *DeleteProjectsProjectIDDirsDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id dirs delete not found response a status code equal to that given
func (o *DeleteProjectsProjectIDDirsDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete projects project Id dirs delete not found response
func (o *DeleteProjectsProjectIDDirsDeleteNotFound) Code() int {
	return 404
}

func (o *DeleteProjectsProjectIDDirsDeleteNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteNotFound %s", 404, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteNotFound %s", 404, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteProjectsProjectIDDirsDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDDirsDeleteConflict creates a DeleteProjectsProjectIDDirsDeleteConflict with default headers values
func NewDeleteProjectsProjectIDDirsDeleteConflict() *DeleteProjectsProjectIDDirsDeleteConflict {
	return &DeleteProjectsProjectIDDirsDeleteConflict{}
}

/*
DeleteProjectsProjectIDDirsDeleteConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteProjectsProjectIDDirsDeleteConflict struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete projects project Id dirs delete conflict response has a 2xx status code
func (o *DeleteProjectsProjectIDDirsDeleteConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id dirs delete conflict response has a 3xx status code
func (o *DeleteProjectsProjectIDDirsDeleteConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id dirs delete conflict response has a 4xx status code
func (o *DeleteProjectsProjectIDDirsDeleteConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id dirs delete conflict response has a 5xx status code
func (o *DeleteProjectsProjectIDDirsDeleteConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id dirs delete conflict response a status code equal to that given
func (o *DeleteProjectsProjectIDDirsDeleteConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete projects project Id dirs delete conflict response
func (o *DeleteProjectsProjectIDDirsDeleteConflict) Code() int {
	return 409
}

func (o *DeleteProjectsProjectIDDirsDeleteConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteConflict %s", 409, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteConflict %s", 409, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteConflict) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteProjectsProjectIDDirsDeleteConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDDirsDeleteUnprocessableEntity creates a DeleteProjectsProjectIDDirsDeleteUnprocessableEntity with default headers values
func NewDeleteProjectsProjectIDDirsDeleteUnprocessableEntity() *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity {
	return &DeleteProjectsProjectIDDirsDeleteUnprocessableEntity{}
}

/*
DeleteProjectsProjectIDDirsDeleteUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type DeleteProjectsProjectIDDirsDeleteUnprocessableEntity struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete projects project Id dirs delete unprocessable entity response has a 2xx status code
func (o *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id dirs delete unprocessable entity response has a 3xx status code
func (o *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id dirs delete unprocessable entity response has a 4xx status code
func (o *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete projects project Id dirs delete unprocessable entity response has a 5xx status code
func (o *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete projects project Id dirs delete unprocessable entity response a status code equal to that given
func (o *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete projects project Id dirs delete unprocessable entity response
func (o *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteUnprocessableEntity %s", 422, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteUnprocessableEntity %s", 422, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteProjectsProjectIDDirsDeleteUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteProjectsProjectIDDirsDeleteInternalServerError creates a DeleteProjectsProjectIDDirsDeleteInternalServerError with default headers values
func NewDeleteProjectsProjectIDDirsDeleteInternalServerError() *DeleteProjectsProjectIDDirsDeleteInternalServerError {
	return &DeleteProjectsProjectIDDirsDeleteInternalServerError{}
}

/*
DeleteProjectsProjectIDDirsDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteProjectsProjectIDDirsDeleteInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete projects project Id dirs delete internal server error response has a 2xx status code
func (o *DeleteProjectsProjectIDDirsDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete projects project Id dirs delete internal server error response has a 3xx status code
func (o *DeleteProjectsProjectIDDirsDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete projects project Id dirs delete internal server error response has a 4xx status code
func (o *DeleteProjectsProjectIDDirsDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete projects project Id dirs delete internal server error response has a 5xx status code
func (o *DeleteProjectsProjectIDDirsDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete projects project Id dirs delete internal server error response a status code equal to that given
func (o *DeleteProjectsProjectIDDirsDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete projects project Id dirs delete internal server error response
func (o *DeleteProjectsProjectIDDirsDeleteInternalServerError) Code() int {
	return 500
}

func (o *DeleteProjectsProjectIDDirsDeleteInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteInternalServerError %s", 500, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /projects/{projectId}/dirs/delete][%d] deleteProjectsProjectIdDirsDeleteInternalServerError %s", 500, payload)
}

func (o *DeleteProjectsProjectIDDirsDeleteInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteProjectsProjectIDDirsDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
