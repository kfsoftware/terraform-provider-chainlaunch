// Code generated by go-swagger; DO NOT EDIT.

package directories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetProjectsProjectIDDirsListReader is a Reader for the GetProjectsProjectIDDirsList structure.
type GetProjectsProjectIDDirsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectsProjectIDDirsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectsProjectIDDirsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProjectsProjectIDDirsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProjectsProjectIDDirsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProjectsProjectIDDirsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProjectsProjectIDDirsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetProjectsProjectIDDirsListConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetProjectsProjectIDDirsListUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetProjectsProjectIDDirsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /projects/{projectId}/dirs/list] GetProjectsProjectIDDirsList", response, response.Code())
	}
}

// NewGetProjectsProjectIDDirsListOK creates a GetProjectsProjectIDDirsListOK with default headers values
func NewGetProjectsProjectIDDirsListOK() *GetProjectsProjectIDDirsListOK {
	return &GetProjectsProjectIDDirsListOK{}
}

/*
GetProjectsProjectIDDirsListOK describes a response with status code 200, with default header values.

OK
*/
type GetProjectsProjectIDDirsListOK struct {
	Payload *models.DirsListEntriesResponse
}

// IsSuccess returns true when this get projects project Id dirs list o k response has a 2xx status code
func (o *GetProjectsProjectIDDirsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get projects project Id dirs list o k response has a 3xx status code
func (o *GetProjectsProjectIDDirsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects project Id dirs list o k response has a 4xx status code
func (o *GetProjectsProjectIDDirsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get projects project Id dirs list o k response has a 5xx status code
func (o *GetProjectsProjectIDDirsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects project Id dirs list o k response a status code equal to that given
func (o *GetProjectsProjectIDDirsListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get projects project Id dirs list o k response
func (o *GetProjectsProjectIDDirsListOK) Code() int {
	return 200
}

func (o *GetProjectsProjectIDDirsListOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListOK %s", 200, payload)
}

func (o *GetProjectsProjectIDDirsListOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListOK %s", 200, payload)
}

func (o *GetProjectsProjectIDDirsListOK) GetPayload() *models.DirsListEntriesResponse {
	return o.Payload
}

func (o *GetProjectsProjectIDDirsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirsListEntriesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetProjectsProjectIDDirsListBadRequest creates a GetProjectsProjectIDDirsListBadRequest with default headers values
func NewGetProjectsProjectIDDirsListBadRequest() *GetProjectsProjectIDDirsListBadRequest {
	return &GetProjectsProjectIDDirsListBadRequest{}
}

/*
GetProjectsProjectIDDirsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetProjectsProjectIDDirsListBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get projects project Id dirs list bad request response has a 2xx status code
func (o *GetProjectsProjectIDDirsListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get projects project Id dirs list bad request response has a 3xx status code
func (o *GetProjectsProjectIDDirsListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects project Id dirs list bad request response has a 4xx status code
func (o *GetProjectsProjectIDDirsListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get projects project Id dirs list bad request response has a 5xx status code
func (o *GetProjectsProjectIDDirsListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects project Id dirs list bad request response a status code equal to that given
func (o *GetProjectsProjectIDDirsListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get projects project Id dirs list bad request response
func (o *GetProjectsProjectIDDirsListBadRequest) Code() int {
	return 400
}

func (o *GetProjectsProjectIDDirsListBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListBadRequest %s", 400, payload)
}

func (o *GetProjectsProjectIDDirsListBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListBadRequest %s", 400, payload)
}

func (o *GetProjectsProjectIDDirsListBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetProjectsProjectIDDirsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetProjectsProjectIDDirsListUnauthorized creates a GetProjectsProjectIDDirsListUnauthorized with default headers values
func NewGetProjectsProjectIDDirsListUnauthorized() *GetProjectsProjectIDDirsListUnauthorized {
	return &GetProjectsProjectIDDirsListUnauthorized{}
}

/*
GetProjectsProjectIDDirsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetProjectsProjectIDDirsListUnauthorized struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get projects project Id dirs list unauthorized response has a 2xx status code
func (o *GetProjectsProjectIDDirsListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get projects project Id dirs list unauthorized response has a 3xx status code
func (o *GetProjectsProjectIDDirsListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects project Id dirs list unauthorized response has a 4xx status code
func (o *GetProjectsProjectIDDirsListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get projects project Id dirs list unauthorized response has a 5xx status code
func (o *GetProjectsProjectIDDirsListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects project Id dirs list unauthorized response a status code equal to that given
func (o *GetProjectsProjectIDDirsListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get projects project Id dirs list unauthorized response
func (o *GetProjectsProjectIDDirsListUnauthorized) Code() int {
	return 401
}

func (o *GetProjectsProjectIDDirsListUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListUnauthorized %s", 401, payload)
}

func (o *GetProjectsProjectIDDirsListUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListUnauthorized %s", 401, payload)
}

func (o *GetProjectsProjectIDDirsListUnauthorized) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetProjectsProjectIDDirsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetProjectsProjectIDDirsListForbidden creates a GetProjectsProjectIDDirsListForbidden with default headers values
func NewGetProjectsProjectIDDirsListForbidden() *GetProjectsProjectIDDirsListForbidden {
	return &GetProjectsProjectIDDirsListForbidden{}
}

/*
GetProjectsProjectIDDirsListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetProjectsProjectIDDirsListForbidden struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get projects project Id dirs list forbidden response has a 2xx status code
func (o *GetProjectsProjectIDDirsListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get projects project Id dirs list forbidden response has a 3xx status code
func (o *GetProjectsProjectIDDirsListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects project Id dirs list forbidden response has a 4xx status code
func (o *GetProjectsProjectIDDirsListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get projects project Id dirs list forbidden response has a 5xx status code
func (o *GetProjectsProjectIDDirsListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects project Id dirs list forbidden response a status code equal to that given
func (o *GetProjectsProjectIDDirsListForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get projects project Id dirs list forbidden response
func (o *GetProjectsProjectIDDirsListForbidden) Code() int {
	return 403
}

func (o *GetProjectsProjectIDDirsListForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListForbidden %s", 403, payload)
}

func (o *GetProjectsProjectIDDirsListForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListForbidden %s", 403, payload)
}

func (o *GetProjectsProjectIDDirsListForbidden) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetProjectsProjectIDDirsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetProjectsProjectIDDirsListNotFound creates a GetProjectsProjectIDDirsListNotFound with default headers values
func NewGetProjectsProjectIDDirsListNotFound() *GetProjectsProjectIDDirsListNotFound {
	return &GetProjectsProjectIDDirsListNotFound{}
}

/*
GetProjectsProjectIDDirsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetProjectsProjectIDDirsListNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get projects project Id dirs list not found response has a 2xx status code
func (o *GetProjectsProjectIDDirsListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get projects project Id dirs list not found response has a 3xx status code
func (o *GetProjectsProjectIDDirsListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects project Id dirs list not found response has a 4xx status code
func (o *GetProjectsProjectIDDirsListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get projects project Id dirs list not found response has a 5xx status code
func (o *GetProjectsProjectIDDirsListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects project Id dirs list not found response a status code equal to that given
func (o *GetProjectsProjectIDDirsListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get projects project Id dirs list not found response
func (o *GetProjectsProjectIDDirsListNotFound) Code() int {
	return 404
}

func (o *GetProjectsProjectIDDirsListNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListNotFound %s", 404, payload)
}

func (o *GetProjectsProjectIDDirsListNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListNotFound %s", 404, payload)
}

func (o *GetProjectsProjectIDDirsListNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetProjectsProjectIDDirsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetProjectsProjectIDDirsListConflict creates a GetProjectsProjectIDDirsListConflict with default headers values
func NewGetProjectsProjectIDDirsListConflict() *GetProjectsProjectIDDirsListConflict {
	return &GetProjectsProjectIDDirsListConflict{}
}

/*
GetProjectsProjectIDDirsListConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetProjectsProjectIDDirsListConflict struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get projects project Id dirs list conflict response has a 2xx status code
func (o *GetProjectsProjectIDDirsListConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get projects project Id dirs list conflict response has a 3xx status code
func (o *GetProjectsProjectIDDirsListConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects project Id dirs list conflict response has a 4xx status code
func (o *GetProjectsProjectIDDirsListConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get projects project Id dirs list conflict response has a 5xx status code
func (o *GetProjectsProjectIDDirsListConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects project Id dirs list conflict response a status code equal to that given
func (o *GetProjectsProjectIDDirsListConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get projects project Id dirs list conflict response
func (o *GetProjectsProjectIDDirsListConflict) Code() int {
	return 409
}

func (o *GetProjectsProjectIDDirsListConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListConflict %s", 409, payload)
}

func (o *GetProjectsProjectIDDirsListConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListConflict %s", 409, payload)
}

func (o *GetProjectsProjectIDDirsListConflict) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetProjectsProjectIDDirsListConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetProjectsProjectIDDirsListUnprocessableEntity creates a GetProjectsProjectIDDirsListUnprocessableEntity with default headers values
func NewGetProjectsProjectIDDirsListUnprocessableEntity() *GetProjectsProjectIDDirsListUnprocessableEntity {
	return &GetProjectsProjectIDDirsListUnprocessableEntity{}
}

/*
GetProjectsProjectIDDirsListUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type GetProjectsProjectIDDirsListUnprocessableEntity struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get projects project Id dirs list unprocessable entity response has a 2xx status code
func (o *GetProjectsProjectIDDirsListUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get projects project Id dirs list unprocessable entity response has a 3xx status code
func (o *GetProjectsProjectIDDirsListUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects project Id dirs list unprocessable entity response has a 4xx status code
func (o *GetProjectsProjectIDDirsListUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get projects project Id dirs list unprocessable entity response has a 5xx status code
func (o *GetProjectsProjectIDDirsListUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get projects project Id dirs list unprocessable entity response a status code equal to that given
func (o *GetProjectsProjectIDDirsListUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get projects project Id dirs list unprocessable entity response
func (o *GetProjectsProjectIDDirsListUnprocessableEntity) Code() int {
	return 422
}

func (o *GetProjectsProjectIDDirsListUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListUnprocessableEntity %s", 422, payload)
}

func (o *GetProjectsProjectIDDirsListUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListUnprocessableEntity %s", 422, payload)
}

func (o *GetProjectsProjectIDDirsListUnprocessableEntity) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetProjectsProjectIDDirsListUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetProjectsProjectIDDirsListInternalServerError creates a GetProjectsProjectIDDirsListInternalServerError with default headers values
func NewGetProjectsProjectIDDirsListInternalServerError() *GetProjectsProjectIDDirsListInternalServerError {
	return &GetProjectsProjectIDDirsListInternalServerError{}
}

/*
GetProjectsProjectIDDirsListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetProjectsProjectIDDirsListInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get projects project Id dirs list internal server error response has a 2xx status code
func (o *GetProjectsProjectIDDirsListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get projects project Id dirs list internal server error response has a 3xx status code
func (o *GetProjectsProjectIDDirsListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get projects project Id dirs list internal server error response has a 4xx status code
func (o *GetProjectsProjectIDDirsListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get projects project Id dirs list internal server error response has a 5xx status code
func (o *GetProjectsProjectIDDirsListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get projects project Id dirs list internal server error response a status code equal to that given
func (o *GetProjectsProjectIDDirsListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get projects project Id dirs list internal server error response
func (o *GetProjectsProjectIDDirsListInternalServerError) Code() int {
	return 500
}

func (o *GetProjectsProjectIDDirsListInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListInternalServerError %s", 500, payload)
}

func (o *GetProjectsProjectIDDirsListInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/dirs/list][%d] getProjectsProjectIdDirsListInternalServerError %s", 500, payload)
}

func (o *GetProjectsProjectIDDirsListInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetProjectsProjectIDDirsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
