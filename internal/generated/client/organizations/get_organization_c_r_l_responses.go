// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetOrganizationCRLReader is a Reader for the GetOrganizationCRL structure.
type GetOrganizationCRLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationCRLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationCRLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrganizationCRLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationCRLInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{id}/crl] getOrganizationCRL", response, response.Code())
	}
}

// NewGetOrganizationCRLOK creates a GetOrganizationCRLOK with default headers values
func NewGetOrganizationCRLOK() *GetOrganizationCRLOK {
	return &GetOrganizationCRLOK{}
}

/*
GetOrganizationCRLOK describes a response with status code 200, with default header values.

PEM encoded CRL
*/
type GetOrganizationCRLOK struct {
	Payload string
}

// IsSuccess returns true when this get organization c r l o k response has a 2xx status code
func (o *GetOrganizationCRLOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organization c r l o k response has a 3xx status code
func (o *GetOrganizationCRLOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization c r l o k response has a 4xx status code
func (o *GetOrganizationCRLOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization c r l o k response has a 5xx status code
func (o *GetOrganizationCRLOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization c r l o k response a status code equal to that given
func (o *GetOrganizationCRLOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organization c r l o k response
func (o *GetOrganizationCRLOK) Code() int {
	return 200
}

func (o *GetOrganizationCRLOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/crl][%d] getOrganizationCRLOK %s", 200, payload)
}

func (o *GetOrganizationCRLOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/crl][%d] getOrganizationCRLOK %s", 200, payload)
}

func (o *GetOrganizationCRLOK) GetPayload() string {
	return o.Payload
}

func (o *GetOrganizationCRLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetOrganizationCRLBadRequest creates a GetOrganizationCRLBadRequest with default headers values
func NewGetOrganizationCRLBadRequest() *GetOrganizationCRLBadRequest {
	return &GetOrganizationCRLBadRequest{}
}

/*
GetOrganizationCRLBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOrganizationCRLBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this get organization c r l bad request response has a 2xx status code
func (o *GetOrganizationCRLBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization c r l bad request response has a 3xx status code
func (o *GetOrganizationCRLBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization c r l bad request response has a 4xx status code
func (o *GetOrganizationCRLBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization c r l bad request response has a 5xx status code
func (o *GetOrganizationCRLBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization c r l bad request response a status code equal to that given
func (o *GetOrganizationCRLBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get organization c r l bad request response
func (o *GetOrganizationCRLBadRequest) Code() int {
	return 400
}

func (o *GetOrganizationCRLBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/crl][%d] getOrganizationCRLBadRequest %s", 400, payload)
}

func (o *GetOrganizationCRLBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/crl][%d] getOrganizationCRLBadRequest %s", 400, payload)
}

func (o *GetOrganizationCRLBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetOrganizationCRLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetOrganizationCRLInternalServerError creates a GetOrganizationCRLInternalServerError with default headers values
func NewGetOrganizationCRLInternalServerError() *GetOrganizationCRLInternalServerError {
	return &GetOrganizationCRLInternalServerError{}
}

/*
GetOrganizationCRLInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrganizationCRLInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this get organization c r l internal server error response has a 2xx status code
func (o *GetOrganizationCRLInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization c r l internal server error response has a 3xx status code
func (o *GetOrganizationCRLInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization c r l internal server error response has a 4xx status code
func (o *GetOrganizationCRLInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization c r l internal server error response has a 5xx status code
func (o *GetOrganizationCRLInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organization c r l internal server error response a status code equal to that given
func (o *GetOrganizationCRLInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organization c r l internal server error response
func (o *GetOrganizationCRLInternalServerError) Code() int {
	return 500
}

func (o *GetOrganizationCRLInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/crl][%d] getOrganizationCRLInternalServerError %s", 500, payload)
}

func (o *GetOrganizationCRLInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/crl][%d] getOrganizationCRLInternalServerError %s", 500, payload)
}

func (o *GetOrganizationCRLInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetOrganizationCRLInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
