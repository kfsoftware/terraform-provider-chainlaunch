// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetOrganizationKeyReader is a Reader for the GetOrganizationKey structure.
type GetOrganizationKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrganizationKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{id}/keys/{keyId}] getOrganizationKey", response, response.Code())
	}
}

// NewGetOrganizationKeyOK creates a GetOrganizationKeyOK with default headers values
func NewGetOrganizationKeyOK() *GetOrganizationKeyOK {
	return &GetOrganizationKeyOK{}
}

/*
GetOrganizationKeyOK describes a response with status code 200, with default header values.

OK
*/
type GetOrganizationKeyOK struct {
	Payload *models.HandlerKeyResponse
}

// IsSuccess returns true when this get organization key o k response has a 2xx status code
func (o *GetOrganizationKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organization key o k response has a 3xx status code
func (o *GetOrganizationKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization key o k response has a 4xx status code
func (o *GetOrganizationKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization key o k response has a 5xx status code
func (o *GetOrganizationKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization key o k response a status code equal to that given
func (o *GetOrganizationKeyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organization key o k response
func (o *GetOrganizationKeyOK) Code() int {
	return 200
}

func (o *GetOrganizationKeyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys/{keyId}][%d] getOrganizationKeyOK %s", 200, payload)
}

func (o *GetOrganizationKeyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys/{keyId}][%d] getOrganizationKeyOK %s", 200, payload)
}

func (o *GetOrganizationKeyOK) GetPayload() *models.HandlerKeyResponse {
	return o.Payload
}

func (o *GetOrganizationKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HandlerKeyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetOrganizationKeyBadRequest creates a GetOrganizationKeyBadRequest with default headers values
func NewGetOrganizationKeyBadRequest() *GetOrganizationKeyBadRequest {
	return &GetOrganizationKeyBadRequest{}
}

/*
GetOrganizationKeyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOrganizationKeyBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this get organization key bad request response has a 2xx status code
func (o *GetOrganizationKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization key bad request response has a 3xx status code
func (o *GetOrganizationKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization key bad request response has a 4xx status code
func (o *GetOrganizationKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization key bad request response has a 5xx status code
func (o *GetOrganizationKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization key bad request response a status code equal to that given
func (o *GetOrganizationKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get organization key bad request response
func (o *GetOrganizationKeyBadRequest) Code() int {
	return 400
}

func (o *GetOrganizationKeyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys/{keyId}][%d] getOrganizationKeyBadRequest %s", 400, payload)
}

func (o *GetOrganizationKeyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys/{keyId}][%d] getOrganizationKeyBadRequest %s", 400, payload)
}

func (o *GetOrganizationKeyBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetOrganizationKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetOrganizationKeyNotFound creates a GetOrganizationKeyNotFound with default headers values
func NewGetOrganizationKeyNotFound() *GetOrganizationKeyNotFound {
	return &GetOrganizationKeyNotFound{}
}

/*
GetOrganizationKeyNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrganizationKeyNotFound struct {
	Payload map[string]string
}

// IsSuccess returns true when this get organization key not found response has a 2xx status code
func (o *GetOrganizationKeyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization key not found response has a 3xx status code
func (o *GetOrganizationKeyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization key not found response has a 4xx status code
func (o *GetOrganizationKeyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization key not found response has a 5xx status code
func (o *GetOrganizationKeyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization key not found response a status code equal to that given
func (o *GetOrganizationKeyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organization key not found response
func (o *GetOrganizationKeyNotFound) Code() int {
	return 404
}

func (o *GetOrganizationKeyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys/{keyId}][%d] getOrganizationKeyNotFound %s", 404, payload)
}

func (o *GetOrganizationKeyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys/{keyId}][%d] getOrganizationKeyNotFound %s", 404, payload)
}

func (o *GetOrganizationKeyNotFound) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetOrganizationKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetOrganizationKeyInternalServerError creates a GetOrganizationKeyInternalServerError with default headers values
func NewGetOrganizationKeyInternalServerError() *GetOrganizationKeyInternalServerError {
	return &GetOrganizationKeyInternalServerError{}
}

/*
GetOrganizationKeyInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrganizationKeyInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this get organization key internal server error response has a 2xx status code
func (o *GetOrganizationKeyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization key internal server error response has a 3xx status code
func (o *GetOrganizationKeyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization key internal server error response has a 4xx status code
func (o *GetOrganizationKeyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization key internal server error response has a 5xx status code
func (o *GetOrganizationKeyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organization key internal server error response a status code equal to that given
func (o *GetOrganizationKeyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organization key internal server error response
func (o *GetOrganizationKeyInternalServerError) Code() int {
	return 500
}

func (o *GetOrganizationKeyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys/{keyId}][%d] getOrganizationKeyInternalServerError %s", 500, payload)
}

func (o *GetOrganizationKeyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys/{keyId}][%d] getOrganizationKeyInternalServerError %s", 500, payload)
}

func (o *GetOrganizationKeyInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetOrganizationKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
