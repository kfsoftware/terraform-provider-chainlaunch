// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// UpdateFabricOrganizationReader is a Reader for the UpdateFabricOrganization structure.
type UpdateFabricOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFabricOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateFabricOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateFabricOrganizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateFabricOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateFabricOrganizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /organizations/{id}] updateFabricOrganization", response, response.Code())
	}
}

// NewUpdateFabricOrganizationOK creates a UpdateFabricOrganizationOK with default headers values
func NewUpdateFabricOrganizationOK() *UpdateFabricOrganizationOK {
	return &UpdateFabricOrganizationOK{}
}

/*
UpdateFabricOrganizationOK describes a response with status code 200, with default header values.

OK
*/
type UpdateFabricOrganizationOK struct {
	Payload *models.HandlerOrganizationResponse
}

// IsSuccess returns true when this update fabric organization o k response has a 2xx status code
func (o *UpdateFabricOrganizationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update fabric organization o k response has a 3xx status code
func (o *UpdateFabricOrganizationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update fabric organization o k response has a 4xx status code
func (o *UpdateFabricOrganizationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update fabric organization o k response has a 5xx status code
func (o *UpdateFabricOrganizationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update fabric organization o k response a status code equal to that given
func (o *UpdateFabricOrganizationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update fabric organization o k response
func (o *UpdateFabricOrganizationOK) Code() int {
	return 200
}

func (o *UpdateFabricOrganizationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{id}][%d] updateFabricOrganizationOK %s", 200, payload)
}

func (o *UpdateFabricOrganizationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{id}][%d] updateFabricOrganizationOK %s", 200, payload)
}

func (o *UpdateFabricOrganizationOK) GetPayload() *models.HandlerOrganizationResponse {
	return o.Payload
}

func (o *UpdateFabricOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HandlerOrganizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewUpdateFabricOrganizationBadRequest creates a UpdateFabricOrganizationBadRequest with default headers values
func NewUpdateFabricOrganizationBadRequest() *UpdateFabricOrganizationBadRequest {
	return &UpdateFabricOrganizationBadRequest{}
}

/*
UpdateFabricOrganizationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateFabricOrganizationBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this update fabric organization bad request response has a 2xx status code
func (o *UpdateFabricOrganizationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update fabric organization bad request response has a 3xx status code
func (o *UpdateFabricOrganizationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update fabric organization bad request response has a 4xx status code
func (o *UpdateFabricOrganizationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update fabric organization bad request response has a 5xx status code
func (o *UpdateFabricOrganizationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update fabric organization bad request response a status code equal to that given
func (o *UpdateFabricOrganizationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update fabric organization bad request response
func (o *UpdateFabricOrganizationBadRequest) Code() int {
	return 400
}

func (o *UpdateFabricOrganizationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{id}][%d] updateFabricOrganizationBadRequest %s", 400, payload)
}

func (o *UpdateFabricOrganizationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{id}][%d] updateFabricOrganizationBadRequest %s", 400, payload)
}

func (o *UpdateFabricOrganizationBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *UpdateFabricOrganizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewUpdateFabricOrganizationNotFound creates a UpdateFabricOrganizationNotFound with default headers values
func NewUpdateFabricOrganizationNotFound() *UpdateFabricOrganizationNotFound {
	return &UpdateFabricOrganizationNotFound{}
}

/*
UpdateFabricOrganizationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateFabricOrganizationNotFound struct {
	Payload map[string]string
}

// IsSuccess returns true when this update fabric organization not found response has a 2xx status code
func (o *UpdateFabricOrganizationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update fabric organization not found response has a 3xx status code
func (o *UpdateFabricOrganizationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update fabric organization not found response has a 4xx status code
func (o *UpdateFabricOrganizationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update fabric organization not found response has a 5xx status code
func (o *UpdateFabricOrganizationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update fabric organization not found response a status code equal to that given
func (o *UpdateFabricOrganizationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update fabric organization not found response
func (o *UpdateFabricOrganizationNotFound) Code() int {
	return 404
}

func (o *UpdateFabricOrganizationNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{id}][%d] updateFabricOrganizationNotFound %s", 404, payload)
}

func (o *UpdateFabricOrganizationNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{id}][%d] updateFabricOrganizationNotFound %s", 404, payload)
}

func (o *UpdateFabricOrganizationNotFound) GetPayload() map[string]string {
	return o.Payload
}

func (o *UpdateFabricOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewUpdateFabricOrganizationInternalServerError creates a UpdateFabricOrganizationInternalServerError with default headers values
func NewUpdateFabricOrganizationInternalServerError() *UpdateFabricOrganizationInternalServerError {
	return &UpdateFabricOrganizationInternalServerError{}
}

/*
UpdateFabricOrganizationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateFabricOrganizationInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this update fabric organization internal server error response has a 2xx status code
func (o *UpdateFabricOrganizationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update fabric organization internal server error response has a 3xx status code
func (o *UpdateFabricOrganizationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update fabric organization internal server error response has a 4xx status code
func (o *UpdateFabricOrganizationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update fabric organization internal server error response has a 5xx status code
func (o *UpdateFabricOrganizationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update fabric organization internal server error response a status code equal to that given
func (o *UpdateFabricOrganizationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update fabric organization internal server error response
func (o *UpdateFabricOrganizationInternalServerError) Code() int {
	return 500
}

func (o *UpdateFabricOrganizationInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{id}][%d] updateFabricOrganizationInternalServerError %s", 500, payload)
}

func (o *UpdateFabricOrganizationInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{id}][%d] updateFabricOrganizationInternalServerError %s", 500, payload)
}

func (o *UpdateFabricOrganizationInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *UpdateFabricOrganizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
