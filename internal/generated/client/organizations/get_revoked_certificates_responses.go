// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetRevokedCertificatesReader is a Reader for the GetRevokedCertificates structure.
type GetRevokedCertificatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRevokedCertificatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetRevokedCertificatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRevokedCertificatesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRevokedCertificatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{id}/revoked-certificates] getRevokedCertificates", response, response.Code())
	}
}

// NewGetRevokedCertificatesOK creates a GetRevokedCertificatesOK with default headers values
func NewGetRevokedCertificatesOK() *GetRevokedCertificatesOK {
	return &GetRevokedCertificatesOK{}
}

/*
GetRevokedCertificatesOK describes a response with status code 200, with default header values.

OK
*/
type GetRevokedCertificatesOK struct {
	Payload []*models.HandlerRevokedCertificateResponse
}

// IsSuccess returns true when this get revoked certificates o k response has a 2xx status code
func (o *GetRevokedCertificatesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get revoked certificates o k response has a 3xx status code
func (o *GetRevokedCertificatesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get revoked certificates o k response has a 4xx status code
func (o *GetRevokedCertificatesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get revoked certificates o k response has a 5xx status code
func (o *GetRevokedCertificatesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get revoked certificates o k response a status code equal to that given
func (o *GetRevokedCertificatesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get revoked certificates o k response
func (o *GetRevokedCertificatesOK) Code() int {
	return 200
}

func (o *GetRevokedCertificatesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/revoked-certificates][%d] getRevokedCertificatesOK %s", 200, payload)
}

func (o *GetRevokedCertificatesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/revoked-certificates][%d] getRevokedCertificatesOK %s", 200, payload)
}

func (o *GetRevokedCertificatesOK) GetPayload() []*models.HandlerRevokedCertificateResponse {
	return o.Payload
}

func (o *GetRevokedCertificatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetRevokedCertificatesBadRequest creates a GetRevokedCertificatesBadRequest with default headers values
func NewGetRevokedCertificatesBadRequest() *GetRevokedCertificatesBadRequest {
	return &GetRevokedCertificatesBadRequest{}
}

/*
GetRevokedCertificatesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRevokedCertificatesBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this get revoked certificates bad request response has a 2xx status code
func (o *GetRevokedCertificatesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get revoked certificates bad request response has a 3xx status code
func (o *GetRevokedCertificatesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get revoked certificates bad request response has a 4xx status code
func (o *GetRevokedCertificatesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get revoked certificates bad request response has a 5xx status code
func (o *GetRevokedCertificatesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get revoked certificates bad request response a status code equal to that given
func (o *GetRevokedCertificatesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get revoked certificates bad request response
func (o *GetRevokedCertificatesBadRequest) Code() int {
	return 400
}

func (o *GetRevokedCertificatesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/revoked-certificates][%d] getRevokedCertificatesBadRequest %s", 400, payload)
}

func (o *GetRevokedCertificatesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/revoked-certificates][%d] getRevokedCertificatesBadRequest %s", 400, payload)
}

func (o *GetRevokedCertificatesBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetRevokedCertificatesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetRevokedCertificatesInternalServerError creates a GetRevokedCertificatesInternalServerError with default headers values
func NewGetRevokedCertificatesInternalServerError() *GetRevokedCertificatesInternalServerError {
	return &GetRevokedCertificatesInternalServerError{}
}

/*
GetRevokedCertificatesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRevokedCertificatesInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this get revoked certificates internal server error response has a 2xx status code
func (o *GetRevokedCertificatesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get revoked certificates internal server error response has a 3xx status code
func (o *GetRevokedCertificatesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get revoked certificates internal server error response has a 4xx status code
func (o *GetRevokedCertificatesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get revoked certificates internal server error response has a 5xx status code
func (o *GetRevokedCertificatesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get revoked certificates internal server error response a status code equal to that given
func (o *GetRevokedCertificatesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get revoked certificates internal server error response
func (o *GetRevokedCertificatesInternalServerError) Code() int {
	return 500
}

func (o *GetRevokedCertificatesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/revoked-certificates][%d] getRevokedCertificatesInternalServerError %s", 500, payload)
}

func (o *GetRevokedCertificatesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/revoked-certificates][%d] getRevokedCertificatesInternalServerError %s", 500, payload)
}

func (o *GetRevokedCertificatesInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetRevokedCertificatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
