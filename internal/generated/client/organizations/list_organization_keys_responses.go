// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListOrganizationKeysReader is a Reader for the ListOrganizationKeys structure.
type ListOrganizationKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOrganizationKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListOrganizationKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListOrganizationKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListOrganizationKeysNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListOrganizationKeysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{id}/keys] listOrganizationKeys", response, response.Code())
	}
}

// NewListOrganizationKeysOK creates a ListOrganizationKeysOK with default headers values
func NewListOrganizationKeysOK() *ListOrganizationKeysOK {
	return &ListOrganizationKeysOK{}
}

/*
ListOrganizationKeysOK describes a response with status code 200, with default header values.

OK
*/
type ListOrganizationKeysOK struct {
	Payload []*models.ServiceOrganizationKeyDTO
}

// IsSuccess returns true when this list organization keys o k response has a 2xx status code
func (o *ListOrganizationKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list organization keys o k response has a 3xx status code
func (o *ListOrganizationKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization keys o k response has a 4xx status code
func (o *ListOrganizationKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list organization keys o k response has a 5xx status code
func (o *ListOrganizationKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization keys o k response a status code equal to that given
func (o *ListOrganizationKeysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list organization keys o k response
func (o *ListOrganizationKeysOK) Code() int {
	return 200
}

func (o *ListOrganizationKeysOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys][%d] listOrganizationKeysOK %s", 200, payload)
}

func (o *ListOrganizationKeysOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys][%d] listOrganizationKeysOK %s", 200, payload)
}

func (o *ListOrganizationKeysOK) GetPayload() []*models.ServiceOrganizationKeyDTO {
	return o.Payload
}

func (o *ListOrganizationKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListOrganizationKeysBadRequest creates a ListOrganizationKeysBadRequest with default headers values
func NewListOrganizationKeysBadRequest() *ListOrganizationKeysBadRequest {
	return &ListOrganizationKeysBadRequest{}
}

/*
ListOrganizationKeysBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListOrganizationKeysBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this list organization keys bad request response has a 2xx status code
func (o *ListOrganizationKeysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list organization keys bad request response has a 3xx status code
func (o *ListOrganizationKeysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization keys bad request response has a 4xx status code
func (o *ListOrganizationKeysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list organization keys bad request response has a 5xx status code
func (o *ListOrganizationKeysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization keys bad request response a status code equal to that given
func (o *ListOrganizationKeysBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list organization keys bad request response
func (o *ListOrganizationKeysBadRequest) Code() int {
	return 400
}

func (o *ListOrganizationKeysBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys][%d] listOrganizationKeysBadRequest %s", 400, payload)
}

func (o *ListOrganizationKeysBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys][%d] listOrganizationKeysBadRequest %s", 400, payload)
}

func (o *ListOrganizationKeysBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *ListOrganizationKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListOrganizationKeysNotFound creates a ListOrganizationKeysNotFound with default headers values
func NewListOrganizationKeysNotFound() *ListOrganizationKeysNotFound {
	return &ListOrganizationKeysNotFound{}
}

/*
ListOrganizationKeysNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListOrganizationKeysNotFound struct {
	Payload map[string]string
}

// IsSuccess returns true when this list organization keys not found response has a 2xx status code
func (o *ListOrganizationKeysNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list organization keys not found response has a 3xx status code
func (o *ListOrganizationKeysNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization keys not found response has a 4xx status code
func (o *ListOrganizationKeysNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list organization keys not found response has a 5xx status code
func (o *ListOrganizationKeysNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization keys not found response a status code equal to that given
func (o *ListOrganizationKeysNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list organization keys not found response
func (o *ListOrganizationKeysNotFound) Code() int {
	return 404
}

func (o *ListOrganizationKeysNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys][%d] listOrganizationKeysNotFound %s", 404, payload)
}

func (o *ListOrganizationKeysNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys][%d] listOrganizationKeysNotFound %s", 404, payload)
}

func (o *ListOrganizationKeysNotFound) GetPayload() map[string]string {
	return o.Payload
}

func (o *ListOrganizationKeysNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListOrganizationKeysInternalServerError creates a ListOrganizationKeysInternalServerError with default headers values
func NewListOrganizationKeysInternalServerError() *ListOrganizationKeysInternalServerError {
	return &ListOrganizationKeysInternalServerError{}
}

/*
ListOrganizationKeysInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListOrganizationKeysInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this list organization keys internal server error response has a 2xx status code
func (o *ListOrganizationKeysInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list organization keys internal server error response has a 3xx status code
func (o *ListOrganizationKeysInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization keys internal server error response has a 4xx status code
func (o *ListOrganizationKeysInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list organization keys internal server error response has a 5xx status code
func (o *ListOrganizationKeysInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list organization keys internal server error response a status code equal to that given
func (o *ListOrganizationKeysInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list organization keys internal server error response
func (o *ListOrganizationKeysInternalServerError) Code() int {
	return 500
}

func (o *ListOrganizationKeysInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys][%d] listOrganizationKeysInternalServerError %s", 500, payload)
}

func (o *ListOrganizationKeysInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{id}/keys][%d] listOrganizationKeysInternalServerError %s", 500, payload)
}

func (o *ListOrganizationKeysInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *ListOrganizationKeysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
