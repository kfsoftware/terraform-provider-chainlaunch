// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetFabricBlocksReader is a Reader for the GetFabricBlocks structure.
type GetFabricBlocksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricBlocksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricBlocksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFabricBlocksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFabricBlocksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFabricBlocksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/fabric/{id}/blocks] getFabricBlocks", response, response.Code())
	}
}

// NewGetFabricBlocksOK creates a GetFabricBlocksOK with default headers values
func NewGetFabricBlocksOK() *GetFabricBlocksOK {
	return &GetFabricBlocksOK{}
}

/*
GetFabricBlocksOK describes a response with status code 200, with default header values.

OK
*/
type GetFabricBlocksOK struct {
	Payload *models.HTTPBlockListResponse
}

// IsSuccess returns true when this get fabric blocks o k response has a 2xx status code
func (o *GetFabricBlocksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric blocks o k response has a 3xx status code
func (o *GetFabricBlocksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric blocks o k response has a 4xx status code
func (o *GetFabricBlocksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric blocks o k response has a 5xx status code
func (o *GetFabricBlocksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric blocks o k response a status code equal to that given
func (o *GetFabricBlocksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fabric blocks o k response
func (o *GetFabricBlocksOK) Code() int {
	return 200
}

func (o *GetFabricBlocksOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks][%d] getFabricBlocksOK %s", 200, payload)
}

func (o *GetFabricBlocksOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks][%d] getFabricBlocksOK %s", 200, payload)
}

func (o *GetFabricBlocksOK) GetPayload() *models.HTTPBlockListResponse {
	return o.Payload
}

func (o *GetFabricBlocksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPBlockListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricBlocksBadRequest creates a GetFabricBlocksBadRequest with default headers values
func NewGetFabricBlocksBadRequest() *GetFabricBlocksBadRequest {
	return &GetFabricBlocksBadRequest{}
}

/*
GetFabricBlocksBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFabricBlocksBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric blocks bad request response has a 2xx status code
func (o *GetFabricBlocksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric blocks bad request response has a 3xx status code
func (o *GetFabricBlocksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric blocks bad request response has a 4xx status code
func (o *GetFabricBlocksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric blocks bad request response has a 5xx status code
func (o *GetFabricBlocksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric blocks bad request response a status code equal to that given
func (o *GetFabricBlocksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fabric blocks bad request response
func (o *GetFabricBlocksBadRequest) Code() int {
	return 400
}

func (o *GetFabricBlocksBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks][%d] getFabricBlocksBadRequest %s", 400, payload)
}

func (o *GetFabricBlocksBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks][%d] getFabricBlocksBadRequest %s", 400, payload)
}

func (o *GetFabricBlocksBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricBlocksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricBlocksNotFound creates a GetFabricBlocksNotFound with default headers values
func NewGetFabricBlocksNotFound() *GetFabricBlocksNotFound {
	return &GetFabricBlocksNotFound{}
}

/*
GetFabricBlocksNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFabricBlocksNotFound struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric blocks not found response has a 2xx status code
func (o *GetFabricBlocksNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric blocks not found response has a 3xx status code
func (o *GetFabricBlocksNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric blocks not found response has a 4xx status code
func (o *GetFabricBlocksNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric blocks not found response has a 5xx status code
func (o *GetFabricBlocksNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric blocks not found response a status code equal to that given
func (o *GetFabricBlocksNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get fabric blocks not found response
func (o *GetFabricBlocksNotFound) Code() int {
	return 404
}

func (o *GetFabricBlocksNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks][%d] getFabricBlocksNotFound %s", 404, payload)
}

func (o *GetFabricBlocksNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks][%d] getFabricBlocksNotFound %s", 404, payload)
}

func (o *GetFabricBlocksNotFound) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricBlocksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricBlocksInternalServerError creates a GetFabricBlocksInternalServerError with default headers values
func NewGetFabricBlocksInternalServerError() *GetFabricBlocksInternalServerError {
	return &GetFabricBlocksInternalServerError{}
}

/*
GetFabricBlocksInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFabricBlocksInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric blocks internal server error response has a 2xx status code
func (o *GetFabricBlocksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric blocks internal server error response has a 3xx status code
func (o *GetFabricBlocksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric blocks internal server error response has a 4xx status code
func (o *GetFabricBlocksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric blocks internal server error response has a 5xx status code
func (o *GetFabricBlocksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fabric blocks internal server error response a status code equal to that given
func (o *GetFabricBlocksInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fabric blocks internal server error response
func (o *GetFabricBlocksInternalServerError) Code() int {
	return 500
}

func (o *GetFabricBlocksInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks][%d] getFabricBlocksInternalServerError %s", 500, payload)
}

func (o *GetFabricBlocksInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks][%d] getFabricBlocksInternalServerError %s", 500, payload)
}

func (o *GetFabricBlocksInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricBlocksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
