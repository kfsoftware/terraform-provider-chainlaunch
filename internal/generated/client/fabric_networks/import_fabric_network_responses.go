// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ImportFabricNetworkReader is a Reader for the ImportFabricNetwork structure.
type ImportFabricNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportFabricNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewImportFabricNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportFabricNetworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImportFabricNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /networks/fabric/import] importFabricNetwork", response, response.Code())
	}
}

// NewImportFabricNetworkOK creates a ImportFabricNetworkOK with default headers values
func NewImportFabricNetworkOK() *ImportFabricNetworkOK {
	return &ImportFabricNetworkOK{}
}

/*
ImportFabricNetworkOK describes a response with status code 200, with default header values.

OK
*/
type ImportFabricNetworkOK struct {
	Payload *models.HTTPImportNetworkResponse
}

// IsSuccess returns true when this import fabric network o k response has a 2xx status code
func (o *ImportFabricNetworkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import fabric network o k response has a 3xx status code
func (o *ImportFabricNetworkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import fabric network o k response has a 4xx status code
func (o *ImportFabricNetworkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this import fabric network o k response has a 5xx status code
func (o *ImportFabricNetworkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this import fabric network o k response a status code equal to that given
func (o *ImportFabricNetworkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the import fabric network o k response
func (o *ImportFabricNetworkOK) Code() int {
	return 200
}

func (o *ImportFabricNetworkOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import][%d] importFabricNetworkOK %s", 200, payload)
}

func (o *ImportFabricNetworkOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import][%d] importFabricNetworkOK %s", 200, payload)
}

func (o *ImportFabricNetworkOK) GetPayload() *models.HTTPImportNetworkResponse {
	return o.Payload
}

func (o *ImportFabricNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPImportNetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewImportFabricNetworkBadRequest creates a ImportFabricNetworkBadRequest with default headers values
func NewImportFabricNetworkBadRequest() *ImportFabricNetworkBadRequest {
	return &ImportFabricNetworkBadRequest{}
}

/*
ImportFabricNetworkBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ImportFabricNetworkBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this import fabric network bad request response has a 2xx status code
func (o *ImportFabricNetworkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import fabric network bad request response has a 3xx status code
func (o *ImportFabricNetworkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import fabric network bad request response has a 4xx status code
func (o *ImportFabricNetworkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this import fabric network bad request response has a 5xx status code
func (o *ImportFabricNetworkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this import fabric network bad request response a status code equal to that given
func (o *ImportFabricNetworkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the import fabric network bad request response
func (o *ImportFabricNetworkBadRequest) Code() int {
	return 400
}

func (o *ImportFabricNetworkBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import][%d] importFabricNetworkBadRequest %s", 400, payload)
}

func (o *ImportFabricNetworkBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import][%d] importFabricNetworkBadRequest %s", 400, payload)
}

func (o *ImportFabricNetworkBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *ImportFabricNetworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewImportFabricNetworkInternalServerError creates a ImportFabricNetworkInternalServerError with default headers values
func NewImportFabricNetworkInternalServerError() *ImportFabricNetworkInternalServerError {
	return &ImportFabricNetworkInternalServerError{}
}

/*
ImportFabricNetworkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ImportFabricNetworkInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this import fabric network internal server error response has a 2xx status code
func (o *ImportFabricNetworkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import fabric network internal server error response has a 3xx status code
func (o *ImportFabricNetworkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import fabric network internal server error response has a 4xx status code
func (o *ImportFabricNetworkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this import fabric network internal server error response has a 5xx status code
func (o *ImportFabricNetworkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this import fabric network internal server error response a status code equal to that given
func (o *ImportFabricNetworkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the import fabric network internal server error response
func (o *ImportFabricNetworkInternalServerError) Code() int {
	return 500
}

func (o *ImportFabricNetworkInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import][%d] importFabricNetworkInternalServerError %s", 500, payload)
}

func (o *ImportFabricNetworkInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import][%d] importFabricNetworkInternalServerError %s", 500, payload)
}

func (o *ImportFabricNetworkInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *ImportFabricNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
