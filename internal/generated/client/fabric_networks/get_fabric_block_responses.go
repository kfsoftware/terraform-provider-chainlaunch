// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetFabricBlockReader is a Reader for the GetFabricBlock structure.
type GetFabricBlockReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricBlockReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricBlockOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFabricBlockBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFabricBlockNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFabricBlockInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/fabric/{id}/blocks/{blockNum}] getFabricBlock", response, response.Code())
	}
}

// NewGetFabricBlockOK creates a GetFabricBlockOK with default headers values
func NewGetFabricBlockOK() *GetFabricBlockOK {
	return &GetFabricBlockOK{}
}

/*
GetFabricBlockOK describes a response with status code 200, with default header values.

OK
*/
type GetFabricBlockOK struct {
	Payload *models.HTTPBlockTransactionsResponse
}

// IsSuccess returns true when this get fabric block o k response has a 2xx status code
func (o *GetFabricBlockOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric block o k response has a 3xx status code
func (o *GetFabricBlockOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric block o k response has a 4xx status code
func (o *GetFabricBlockOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric block o k response has a 5xx status code
func (o *GetFabricBlockOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric block o k response a status code equal to that given
func (o *GetFabricBlockOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fabric block o k response
func (o *GetFabricBlockOK) Code() int {
	return 200
}

func (o *GetFabricBlockOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks/{blockNum}][%d] getFabricBlockOK %s", 200, payload)
}

func (o *GetFabricBlockOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks/{blockNum}][%d] getFabricBlockOK %s", 200, payload)
}

func (o *GetFabricBlockOK) GetPayload() *models.HTTPBlockTransactionsResponse {
	return o.Payload
}

func (o *GetFabricBlockOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPBlockTransactionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricBlockBadRequest creates a GetFabricBlockBadRequest with default headers values
func NewGetFabricBlockBadRequest() *GetFabricBlockBadRequest {
	return &GetFabricBlockBadRequest{}
}

/*
GetFabricBlockBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFabricBlockBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric block bad request response has a 2xx status code
func (o *GetFabricBlockBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric block bad request response has a 3xx status code
func (o *GetFabricBlockBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric block bad request response has a 4xx status code
func (o *GetFabricBlockBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric block bad request response has a 5xx status code
func (o *GetFabricBlockBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric block bad request response a status code equal to that given
func (o *GetFabricBlockBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fabric block bad request response
func (o *GetFabricBlockBadRequest) Code() int {
	return 400
}

func (o *GetFabricBlockBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks/{blockNum}][%d] getFabricBlockBadRequest %s", 400, payload)
}

func (o *GetFabricBlockBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks/{blockNum}][%d] getFabricBlockBadRequest %s", 400, payload)
}

func (o *GetFabricBlockBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricBlockBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricBlockNotFound creates a GetFabricBlockNotFound with default headers values
func NewGetFabricBlockNotFound() *GetFabricBlockNotFound {
	return &GetFabricBlockNotFound{}
}

/*
GetFabricBlockNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFabricBlockNotFound struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric block not found response has a 2xx status code
func (o *GetFabricBlockNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric block not found response has a 3xx status code
func (o *GetFabricBlockNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric block not found response has a 4xx status code
func (o *GetFabricBlockNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric block not found response has a 5xx status code
func (o *GetFabricBlockNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric block not found response a status code equal to that given
func (o *GetFabricBlockNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get fabric block not found response
func (o *GetFabricBlockNotFound) Code() int {
	return 404
}

func (o *GetFabricBlockNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks/{blockNum}][%d] getFabricBlockNotFound %s", 404, payload)
}

func (o *GetFabricBlockNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks/{blockNum}][%d] getFabricBlockNotFound %s", 404, payload)
}

func (o *GetFabricBlockNotFound) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricBlockNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricBlockInternalServerError creates a GetFabricBlockInternalServerError with default headers values
func NewGetFabricBlockInternalServerError() *GetFabricBlockInternalServerError {
	return &GetFabricBlockInternalServerError{}
}

/*
GetFabricBlockInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFabricBlockInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric block internal server error response has a 2xx status code
func (o *GetFabricBlockInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric block internal server error response has a 3xx status code
func (o *GetFabricBlockInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric block internal server error response has a 4xx status code
func (o *GetFabricBlockInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric block internal server error response has a 5xx status code
func (o *GetFabricBlockInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fabric block internal server error response a status code equal to that given
func (o *GetFabricBlockInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fabric block internal server error response
func (o *GetFabricBlockInternalServerError) Code() int {
	return 500
}

func (o *GetFabricBlockInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks/{blockNum}][%d] getFabricBlockInternalServerError %s", 500, payload)
}

func (o *GetFabricBlockInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/blocks/{blockNum}][%d] getFabricBlockInternalServerError %s", 500, payload)
}

func (o *GetFabricBlockInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricBlockInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
