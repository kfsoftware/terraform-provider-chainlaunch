// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// UnjoinFabricPeerReader is a Reader for the UnjoinFabricPeer structure.
type UnjoinFabricPeerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnjoinFabricPeerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewUnjoinFabricPeerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnjoinFabricPeerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUnjoinFabricPeerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /networks/fabric/{id}/peers/{peerId}/unjoin] unjoinFabricPeer", response, response.Code())
	}
}

// NewUnjoinFabricPeerOK creates a UnjoinFabricPeerOK with default headers values
func NewUnjoinFabricPeerOK() *UnjoinFabricPeerOK {
	return &UnjoinFabricPeerOK{}
}

/*
UnjoinFabricPeerOK describes a response with status code 200, with default header values.

OK
*/
type UnjoinFabricPeerOK struct {
	Payload *models.HTTPNetworkResponse
}

// IsSuccess returns true when this unjoin fabric peer o k response has a 2xx status code
func (o *UnjoinFabricPeerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this unjoin fabric peer o k response has a 3xx status code
func (o *UnjoinFabricPeerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unjoin fabric peer o k response has a 4xx status code
func (o *UnjoinFabricPeerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this unjoin fabric peer o k response has a 5xx status code
func (o *UnjoinFabricPeerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this unjoin fabric peer o k response a status code equal to that given
func (o *UnjoinFabricPeerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the unjoin fabric peer o k response
func (o *UnjoinFabricPeerOK) Code() int {
	return 200
}

func (o *UnjoinFabricPeerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/peers/{peerId}/unjoin][%d] unjoinFabricPeerOK %s", 200, payload)
}

func (o *UnjoinFabricPeerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/peers/{peerId}/unjoin][%d] unjoinFabricPeerOK %s", 200, payload)
}

func (o *UnjoinFabricPeerOK) GetPayload() *models.HTTPNetworkResponse {
	return o.Payload
}

func (o *UnjoinFabricPeerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPNetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewUnjoinFabricPeerBadRequest creates a UnjoinFabricPeerBadRequest with default headers values
func NewUnjoinFabricPeerBadRequest() *UnjoinFabricPeerBadRequest {
	return &UnjoinFabricPeerBadRequest{}
}

/*
UnjoinFabricPeerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UnjoinFabricPeerBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this unjoin fabric peer bad request response has a 2xx status code
func (o *UnjoinFabricPeerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unjoin fabric peer bad request response has a 3xx status code
func (o *UnjoinFabricPeerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unjoin fabric peer bad request response has a 4xx status code
func (o *UnjoinFabricPeerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this unjoin fabric peer bad request response has a 5xx status code
func (o *UnjoinFabricPeerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this unjoin fabric peer bad request response a status code equal to that given
func (o *UnjoinFabricPeerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the unjoin fabric peer bad request response
func (o *UnjoinFabricPeerBadRequest) Code() int {
	return 400
}

func (o *UnjoinFabricPeerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/peers/{peerId}/unjoin][%d] unjoinFabricPeerBadRequest %s", 400, payload)
}

func (o *UnjoinFabricPeerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/peers/{peerId}/unjoin][%d] unjoinFabricPeerBadRequest %s", 400, payload)
}

func (o *UnjoinFabricPeerBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *UnjoinFabricPeerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewUnjoinFabricPeerInternalServerError creates a UnjoinFabricPeerInternalServerError with default headers values
func NewUnjoinFabricPeerInternalServerError() *UnjoinFabricPeerInternalServerError {
	return &UnjoinFabricPeerInternalServerError{}
}

/*
UnjoinFabricPeerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UnjoinFabricPeerInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this unjoin fabric peer internal server error response has a 2xx status code
func (o *UnjoinFabricPeerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unjoin fabric peer internal server error response has a 3xx status code
func (o *UnjoinFabricPeerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unjoin fabric peer internal server error response has a 4xx status code
func (o *UnjoinFabricPeerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this unjoin fabric peer internal server error response has a 5xx status code
func (o *UnjoinFabricPeerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this unjoin fabric peer internal server error response a status code equal to that given
func (o *UnjoinFabricPeerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the unjoin fabric peer internal server error response
func (o *UnjoinFabricPeerInternalServerError) Code() int {
	return 500
}

func (o *UnjoinFabricPeerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/peers/{peerId}/unjoin][%d] unjoinFabricPeerInternalServerError %s", 500, payload)
}

func (o *UnjoinFabricPeerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/peers/{peerId}/unjoin][%d] unjoinFabricPeerInternalServerError %s", 500, payload)
}

func (o *UnjoinFabricPeerInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *UnjoinFabricPeerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
