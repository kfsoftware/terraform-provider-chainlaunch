// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetFabricTransactionReader is a Reader for the GetFabricTransaction structure.
type GetFabricTransactionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricTransactionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricTransactionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFabricTransactionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFabricTransactionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFabricTransactionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/fabric/{id}/transactions/{txId}] getFabricTransaction", response, response.Code())
	}
}

// NewGetFabricTransactionOK creates a GetFabricTransactionOK with default headers values
func NewGetFabricTransactionOK() *GetFabricTransactionOK {
	return &GetFabricTransactionOK{}
}

/*
GetFabricTransactionOK describes a response with status code 200, with default header values.

OK
*/
type GetFabricTransactionOK struct {
	Payload *models.HTTPTransactionResponse
}

// IsSuccess returns true when this get fabric transaction o k response has a 2xx status code
func (o *GetFabricTransactionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric transaction o k response has a 3xx status code
func (o *GetFabricTransactionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric transaction o k response has a 4xx status code
func (o *GetFabricTransactionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric transaction o k response has a 5xx status code
func (o *GetFabricTransactionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric transaction o k response a status code equal to that given
func (o *GetFabricTransactionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fabric transaction o k response
func (o *GetFabricTransactionOK) Code() int {
	return 200
}

func (o *GetFabricTransactionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/transactions/{txId}][%d] getFabricTransactionOK %s", 200, payload)
}

func (o *GetFabricTransactionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/transactions/{txId}][%d] getFabricTransactionOK %s", 200, payload)
}

func (o *GetFabricTransactionOK) GetPayload() *models.HTTPTransactionResponse {
	return o.Payload
}

func (o *GetFabricTransactionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPTransactionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricTransactionBadRequest creates a GetFabricTransactionBadRequest with default headers values
func NewGetFabricTransactionBadRequest() *GetFabricTransactionBadRequest {
	return &GetFabricTransactionBadRequest{}
}

/*
GetFabricTransactionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFabricTransactionBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric transaction bad request response has a 2xx status code
func (o *GetFabricTransactionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric transaction bad request response has a 3xx status code
func (o *GetFabricTransactionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric transaction bad request response has a 4xx status code
func (o *GetFabricTransactionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric transaction bad request response has a 5xx status code
func (o *GetFabricTransactionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric transaction bad request response a status code equal to that given
func (o *GetFabricTransactionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fabric transaction bad request response
func (o *GetFabricTransactionBadRequest) Code() int {
	return 400
}

func (o *GetFabricTransactionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/transactions/{txId}][%d] getFabricTransactionBadRequest %s", 400, payload)
}

func (o *GetFabricTransactionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/transactions/{txId}][%d] getFabricTransactionBadRequest %s", 400, payload)
}

func (o *GetFabricTransactionBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricTransactionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricTransactionNotFound creates a GetFabricTransactionNotFound with default headers values
func NewGetFabricTransactionNotFound() *GetFabricTransactionNotFound {
	return &GetFabricTransactionNotFound{}
}

/*
GetFabricTransactionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFabricTransactionNotFound struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric transaction not found response has a 2xx status code
func (o *GetFabricTransactionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric transaction not found response has a 3xx status code
func (o *GetFabricTransactionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric transaction not found response has a 4xx status code
func (o *GetFabricTransactionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric transaction not found response has a 5xx status code
func (o *GetFabricTransactionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric transaction not found response a status code equal to that given
func (o *GetFabricTransactionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get fabric transaction not found response
func (o *GetFabricTransactionNotFound) Code() int {
	return 404
}

func (o *GetFabricTransactionNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/transactions/{txId}][%d] getFabricTransactionNotFound %s", 404, payload)
}

func (o *GetFabricTransactionNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/transactions/{txId}][%d] getFabricTransactionNotFound %s", 404, payload)
}

func (o *GetFabricTransactionNotFound) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricTransactionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricTransactionInternalServerError creates a GetFabricTransactionInternalServerError with default headers values
func NewGetFabricTransactionInternalServerError() *GetFabricTransactionInternalServerError {
	return &GetFabricTransactionInternalServerError{}
}

/*
GetFabricTransactionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFabricTransactionInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric transaction internal server error response has a 2xx status code
func (o *GetFabricTransactionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric transaction internal server error response has a 3xx status code
func (o *GetFabricTransactionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric transaction internal server error response has a 4xx status code
func (o *GetFabricTransactionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric transaction internal server error response has a 5xx status code
func (o *GetFabricTransactionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fabric transaction internal server error response a status code equal to that given
func (o *GetFabricTransactionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fabric transaction internal server error response
func (o *GetFabricTransactionInternalServerError) Code() int {
	return 500
}

func (o *GetFabricTransactionInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/transactions/{txId}][%d] getFabricTransactionInternalServerError %s", 500, payload)
}

func (o *GetFabricTransactionInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/transactions/{txId}][%d] getFabricTransactionInternalServerError %s", 500, payload)
}

func (o *GetFabricTransactionInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricTransactionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
