// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListFabricNetworksReader is a Reader for the ListFabricNetworks structure.
type ListFabricNetworksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListFabricNetworksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListFabricNetworksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListFabricNetworksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListFabricNetworksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/fabric] listFabricNetworks", response, response.Code())
	}
}

// NewListFabricNetworksOK creates a ListFabricNetworksOK with default headers values
func NewListFabricNetworksOK() *ListFabricNetworksOK {
	return &ListFabricNetworksOK{}
}

/*
ListFabricNetworksOK describes a response with status code 200, with default header values.

OK
*/
type ListFabricNetworksOK struct {
	Payload *models.HTTPListNetworksResponse
}

// IsSuccess returns true when this list fabric networks o k response has a 2xx status code
func (o *ListFabricNetworksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list fabric networks o k response has a 3xx status code
func (o *ListFabricNetworksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list fabric networks o k response has a 4xx status code
func (o *ListFabricNetworksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list fabric networks o k response has a 5xx status code
func (o *ListFabricNetworksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list fabric networks o k response a status code equal to that given
func (o *ListFabricNetworksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list fabric networks o k response
func (o *ListFabricNetworksOK) Code() int {
	return 200
}

func (o *ListFabricNetworksOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric][%d] listFabricNetworksOK %s", 200, payload)
}

func (o *ListFabricNetworksOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric][%d] listFabricNetworksOK %s", 200, payload)
}

func (o *ListFabricNetworksOK) GetPayload() *models.HTTPListNetworksResponse {
	return o.Payload
}

func (o *ListFabricNetworksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPListNetworksResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListFabricNetworksBadRequest creates a ListFabricNetworksBadRequest with default headers values
func NewListFabricNetworksBadRequest() *ListFabricNetworksBadRequest {
	return &ListFabricNetworksBadRequest{}
}

/*
ListFabricNetworksBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListFabricNetworksBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this list fabric networks bad request response has a 2xx status code
func (o *ListFabricNetworksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list fabric networks bad request response has a 3xx status code
func (o *ListFabricNetworksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list fabric networks bad request response has a 4xx status code
func (o *ListFabricNetworksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list fabric networks bad request response has a 5xx status code
func (o *ListFabricNetworksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list fabric networks bad request response a status code equal to that given
func (o *ListFabricNetworksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list fabric networks bad request response
func (o *ListFabricNetworksBadRequest) Code() int {
	return 400
}

func (o *ListFabricNetworksBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric][%d] listFabricNetworksBadRequest %s", 400, payload)
}

func (o *ListFabricNetworksBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric][%d] listFabricNetworksBadRequest %s", 400, payload)
}

func (o *ListFabricNetworksBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *ListFabricNetworksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListFabricNetworksInternalServerError creates a ListFabricNetworksInternalServerError with default headers values
func NewListFabricNetworksInternalServerError() *ListFabricNetworksInternalServerError {
	return &ListFabricNetworksInternalServerError{}
}

/*
ListFabricNetworksInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListFabricNetworksInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this list fabric networks internal server error response has a 2xx status code
func (o *ListFabricNetworksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list fabric networks internal server error response has a 3xx status code
func (o *ListFabricNetworksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list fabric networks internal server error response has a 4xx status code
func (o *ListFabricNetworksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list fabric networks internal server error response has a 5xx status code
func (o *ListFabricNetworksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list fabric networks internal server error response a status code equal to that given
func (o *ListFabricNetworksInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list fabric networks internal server error response
func (o *ListFabricNetworksInternalServerError) Code() int {
	return 500
}

func (o *ListFabricNetworksInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric][%d] listFabricNetworksInternalServerError %s", 500, payload)
}

func (o *ListFabricNetworksInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric][%d] listFabricNetworksInternalServerError %s", 500, payload)
}

func (o *ListFabricNetworksInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *ListFabricNetworksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
