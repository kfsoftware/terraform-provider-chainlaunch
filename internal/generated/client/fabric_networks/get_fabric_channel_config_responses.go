// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetFabricChannelConfigReader is a Reader for the GetFabricChannelConfig structure.
type GetFabricChannelConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricChannelConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricChannelConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFabricChannelConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFabricChannelConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/fabric/{id}/channel-config] getFabricChannelConfig", response, response.Code())
	}
}

// NewGetFabricChannelConfigOK creates a GetFabricChannelConfigOK with default headers values
func NewGetFabricChannelConfigOK() *GetFabricChannelConfigOK {
	return &GetFabricChannelConfigOK{}
}

/*
GetFabricChannelConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetFabricChannelConfigOK struct {
	Payload *models.HTTPChannelConfigResponse
}

// IsSuccess returns true when this get fabric channel config o k response has a 2xx status code
func (o *GetFabricChannelConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric channel config o k response has a 3xx status code
func (o *GetFabricChannelConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric channel config o k response has a 4xx status code
func (o *GetFabricChannelConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric channel config o k response has a 5xx status code
func (o *GetFabricChannelConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric channel config o k response a status code equal to that given
func (o *GetFabricChannelConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fabric channel config o k response
func (o *GetFabricChannelConfigOK) Code() int {
	return 200
}

func (o *GetFabricChannelConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/channel-config][%d] getFabricChannelConfigOK %s", 200, payload)
}

func (o *GetFabricChannelConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/channel-config][%d] getFabricChannelConfigOK %s", 200, payload)
}

func (o *GetFabricChannelConfigOK) GetPayload() *models.HTTPChannelConfigResponse {
	return o.Payload
}

func (o *GetFabricChannelConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPChannelConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricChannelConfigBadRequest creates a GetFabricChannelConfigBadRequest with default headers values
func NewGetFabricChannelConfigBadRequest() *GetFabricChannelConfigBadRequest {
	return &GetFabricChannelConfigBadRequest{}
}

/*
GetFabricChannelConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFabricChannelConfigBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric channel config bad request response has a 2xx status code
func (o *GetFabricChannelConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric channel config bad request response has a 3xx status code
func (o *GetFabricChannelConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric channel config bad request response has a 4xx status code
func (o *GetFabricChannelConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric channel config bad request response has a 5xx status code
func (o *GetFabricChannelConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric channel config bad request response a status code equal to that given
func (o *GetFabricChannelConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fabric channel config bad request response
func (o *GetFabricChannelConfigBadRequest) Code() int {
	return 400
}

func (o *GetFabricChannelConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/channel-config][%d] getFabricChannelConfigBadRequest %s", 400, payload)
}

func (o *GetFabricChannelConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/channel-config][%d] getFabricChannelConfigBadRequest %s", 400, payload)
}

func (o *GetFabricChannelConfigBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricChannelConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricChannelConfigInternalServerError creates a GetFabricChannelConfigInternalServerError with default headers values
func NewGetFabricChannelConfigInternalServerError() *GetFabricChannelConfigInternalServerError {
	return &GetFabricChannelConfigInternalServerError{}
}

/*
GetFabricChannelConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFabricChannelConfigInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric channel config internal server error response has a 2xx status code
func (o *GetFabricChannelConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric channel config internal server error response has a 3xx status code
func (o *GetFabricChannelConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric channel config internal server error response has a 4xx status code
func (o *GetFabricChannelConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric channel config internal server error response has a 5xx status code
func (o *GetFabricChannelConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fabric channel config internal server error response a status code equal to that given
func (o *GetFabricChannelConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fabric channel config internal server error response
func (o *GetFabricChannelConfigInternalServerError) Code() int {
	return 500
}

func (o *GetFabricChannelConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/channel-config][%d] getFabricChannelConfigInternalServerError %s", 500, payload)
}

func (o *GetFabricChannelConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/channel-config][%d] getFabricChannelConfigInternalServerError %s", 500, payload)
}

func (o *GetFabricChannelConfigInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricChannelConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
