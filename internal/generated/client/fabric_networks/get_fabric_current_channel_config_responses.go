// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetFabricCurrentChannelConfigReader is a Reader for the GetFabricCurrentChannelConfig structure.
type GetFabricCurrentChannelConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricCurrentChannelConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricCurrentChannelConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFabricCurrentChannelConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFabricCurrentChannelConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/fabric/{id}/current-channel-config] getFabricCurrentChannelConfig", response, response.Code())
	}
}

// NewGetFabricCurrentChannelConfigOK creates a GetFabricCurrentChannelConfigOK with default headers values
func NewGetFabricCurrentChannelConfigOK() *GetFabricCurrentChannelConfigOK {
	return &GetFabricCurrentChannelConfigOK{}
}

/*
GetFabricCurrentChannelConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetFabricCurrentChannelConfigOK struct {
	Payload *models.HTTPChannelConfigResponse
}

// IsSuccess returns true when this get fabric current channel config o k response has a 2xx status code
func (o *GetFabricCurrentChannelConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric current channel config o k response has a 3xx status code
func (o *GetFabricCurrentChannelConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric current channel config o k response has a 4xx status code
func (o *GetFabricCurrentChannelConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric current channel config o k response has a 5xx status code
func (o *GetFabricCurrentChannelConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric current channel config o k response a status code equal to that given
func (o *GetFabricCurrentChannelConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fabric current channel config o k response
func (o *GetFabricCurrentChannelConfigOK) Code() int {
	return 200
}

func (o *GetFabricCurrentChannelConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/current-channel-config][%d] getFabricCurrentChannelConfigOK %s", 200, payload)
}

func (o *GetFabricCurrentChannelConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/current-channel-config][%d] getFabricCurrentChannelConfigOK %s", 200, payload)
}

func (o *GetFabricCurrentChannelConfigOK) GetPayload() *models.HTTPChannelConfigResponse {
	return o.Payload
}

func (o *GetFabricCurrentChannelConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPChannelConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricCurrentChannelConfigBadRequest creates a GetFabricCurrentChannelConfigBadRequest with default headers values
func NewGetFabricCurrentChannelConfigBadRequest() *GetFabricCurrentChannelConfigBadRequest {
	return &GetFabricCurrentChannelConfigBadRequest{}
}

/*
GetFabricCurrentChannelConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFabricCurrentChannelConfigBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric current channel config bad request response has a 2xx status code
func (o *GetFabricCurrentChannelConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric current channel config bad request response has a 3xx status code
func (o *GetFabricCurrentChannelConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric current channel config bad request response has a 4xx status code
func (o *GetFabricCurrentChannelConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric current channel config bad request response has a 5xx status code
func (o *GetFabricCurrentChannelConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric current channel config bad request response a status code equal to that given
func (o *GetFabricCurrentChannelConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fabric current channel config bad request response
func (o *GetFabricCurrentChannelConfigBadRequest) Code() int {
	return 400
}

func (o *GetFabricCurrentChannelConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/current-channel-config][%d] getFabricCurrentChannelConfigBadRequest %s", 400, payload)
}

func (o *GetFabricCurrentChannelConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/current-channel-config][%d] getFabricCurrentChannelConfigBadRequest %s", 400, payload)
}

func (o *GetFabricCurrentChannelConfigBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricCurrentChannelConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricCurrentChannelConfigInternalServerError creates a GetFabricCurrentChannelConfigInternalServerError with default headers values
func NewGetFabricCurrentChannelConfigInternalServerError() *GetFabricCurrentChannelConfigInternalServerError {
	return &GetFabricCurrentChannelConfigInternalServerError{}
}

/*
GetFabricCurrentChannelConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFabricCurrentChannelConfigInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric current channel config internal server error response has a 2xx status code
func (o *GetFabricCurrentChannelConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric current channel config internal server error response has a 3xx status code
func (o *GetFabricCurrentChannelConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric current channel config internal server error response has a 4xx status code
func (o *GetFabricCurrentChannelConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric current channel config internal server error response has a 5xx status code
func (o *GetFabricCurrentChannelConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fabric current channel config internal server error response a status code equal to that given
func (o *GetFabricCurrentChannelConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fabric current channel config internal server error response
func (o *GetFabricCurrentChannelConfigInternalServerError) Code() int {
	return 500
}

func (o *GetFabricCurrentChannelConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/current-channel-config][%d] getFabricCurrentChannelConfigInternalServerError %s", 500, payload)
}

func (o *GetFabricCurrentChannelConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/current-channel-config][%d] getFabricCurrentChannelConfigInternalServerError %s", 500, payload)
}

func (o *GetFabricCurrentChannelConfigInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricCurrentChannelConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
