// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetFabricNetworkByNameReader is a Reader for the GetFabricNetworkByName structure.
type GetFabricNetworkByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricNetworkByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricNetworkByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFabricNetworkByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFabricNetworkByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFabricNetworkByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/fabric/by-name/{name}] getFabricNetworkByName", response, response.Code())
	}
}

// NewGetFabricNetworkByNameOK creates a GetFabricNetworkByNameOK with default headers values
func NewGetFabricNetworkByNameOK() *GetFabricNetworkByNameOK {
	return &GetFabricNetworkByNameOK{}
}

/*
GetFabricNetworkByNameOK describes a response with status code 200, with default header values.

OK
*/
type GetFabricNetworkByNameOK struct {
	Payload *models.HTTPNetworkResponse
}

// IsSuccess returns true when this get fabric network by name o k response has a 2xx status code
func (o *GetFabricNetworkByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric network by name o k response has a 3xx status code
func (o *GetFabricNetworkByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric network by name o k response has a 4xx status code
func (o *GetFabricNetworkByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric network by name o k response has a 5xx status code
func (o *GetFabricNetworkByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric network by name o k response a status code equal to that given
func (o *GetFabricNetworkByNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fabric network by name o k response
func (o *GetFabricNetworkByNameOK) Code() int {
	return 200
}

func (o *GetFabricNetworkByNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/by-name/{name}][%d] getFabricNetworkByNameOK %s", 200, payload)
}

func (o *GetFabricNetworkByNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/by-name/{name}][%d] getFabricNetworkByNameOK %s", 200, payload)
}

func (o *GetFabricNetworkByNameOK) GetPayload() *models.HTTPNetworkResponse {
	return o.Payload
}

func (o *GetFabricNetworkByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPNetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricNetworkByNameBadRequest creates a GetFabricNetworkByNameBadRequest with default headers values
func NewGetFabricNetworkByNameBadRequest() *GetFabricNetworkByNameBadRequest {
	return &GetFabricNetworkByNameBadRequest{}
}

/*
GetFabricNetworkByNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFabricNetworkByNameBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric network by name bad request response has a 2xx status code
func (o *GetFabricNetworkByNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric network by name bad request response has a 3xx status code
func (o *GetFabricNetworkByNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric network by name bad request response has a 4xx status code
func (o *GetFabricNetworkByNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric network by name bad request response has a 5xx status code
func (o *GetFabricNetworkByNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric network by name bad request response a status code equal to that given
func (o *GetFabricNetworkByNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fabric network by name bad request response
func (o *GetFabricNetworkByNameBadRequest) Code() int {
	return 400
}

func (o *GetFabricNetworkByNameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/by-name/{name}][%d] getFabricNetworkByNameBadRequest %s", 400, payload)
}

func (o *GetFabricNetworkByNameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/by-name/{name}][%d] getFabricNetworkByNameBadRequest %s", 400, payload)
}

func (o *GetFabricNetworkByNameBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricNetworkByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricNetworkByNameNotFound creates a GetFabricNetworkByNameNotFound with default headers values
func NewGetFabricNetworkByNameNotFound() *GetFabricNetworkByNameNotFound {
	return &GetFabricNetworkByNameNotFound{}
}

/*
GetFabricNetworkByNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFabricNetworkByNameNotFound struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric network by name not found response has a 2xx status code
func (o *GetFabricNetworkByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric network by name not found response has a 3xx status code
func (o *GetFabricNetworkByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric network by name not found response has a 4xx status code
func (o *GetFabricNetworkByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric network by name not found response has a 5xx status code
func (o *GetFabricNetworkByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric network by name not found response a status code equal to that given
func (o *GetFabricNetworkByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get fabric network by name not found response
func (o *GetFabricNetworkByNameNotFound) Code() int {
	return 404
}

func (o *GetFabricNetworkByNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/by-name/{name}][%d] getFabricNetworkByNameNotFound %s", 404, payload)
}

func (o *GetFabricNetworkByNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/by-name/{name}][%d] getFabricNetworkByNameNotFound %s", 404, payload)
}

func (o *GetFabricNetworkByNameNotFound) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricNetworkByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricNetworkByNameInternalServerError creates a GetFabricNetworkByNameInternalServerError with default headers values
func NewGetFabricNetworkByNameInternalServerError() *GetFabricNetworkByNameInternalServerError {
	return &GetFabricNetworkByNameInternalServerError{}
}

/*
GetFabricNetworkByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFabricNetworkByNameInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric network by name internal server error response has a 2xx status code
func (o *GetFabricNetworkByNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric network by name internal server error response has a 3xx status code
func (o *GetFabricNetworkByNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric network by name internal server error response has a 4xx status code
func (o *GetFabricNetworkByNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric network by name internal server error response has a 5xx status code
func (o *GetFabricNetworkByNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fabric network by name internal server error response a status code equal to that given
func (o *GetFabricNetworkByNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fabric network by name internal server error response
func (o *GetFabricNetworkByNameInternalServerError) Code() int {
	return 500
}

func (o *GetFabricNetworkByNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/by-name/{name}][%d] getFabricNetworkByNameInternalServerError %s", 500, payload)
}

func (o *GetFabricNetworkByNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/by-name/{name}][%d] getFabricNetworkByNameInternalServerError %s", 500, payload)
}

func (o *GetFabricNetworkByNameInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricNetworkByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
