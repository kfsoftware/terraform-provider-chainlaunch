// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ImportFabricNetworkWithOrgReader is a Reader for the ImportFabricNetworkWithOrg structure.
type ImportFabricNetworkWithOrgReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportFabricNetworkWithOrgReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewImportFabricNetworkWithOrgOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportFabricNetworkWithOrgBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImportFabricNetworkWithOrgInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /networks/fabric/import-with-org] importFabricNetworkWithOrg", response, response.Code())
	}
}

// NewImportFabricNetworkWithOrgOK creates a ImportFabricNetworkWithOrgOK with default headers values
func NewImportFabricNetworkWithOrgOK() *ImportFabricNetworkWithOrgOK {
	return &ImportFabricNetworkWithOrgOK{}
}

/*
ImportFabricNetworkWithOrgOK describes a response with status code 200, with default header values.

OK
*/
type ImportFabricNetworkWithOrgOK struct {
	Payload *models.HTTPImportNetworkResponse
}

// IsSuccess returns true when this import fabric network with org o k response has a 2xx status code
func (o *ImportFabricNetworkWithOrgOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import fabric network with org o k response has a 3xx status code
func (o *ImportFabricNetworkWithOrgOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import fabric network with org o k response has a 4xx status code
func (o *ImportFabricNetworkWithOrgOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this import fabric network with org o k response has a 5xx status code
func (o *ImportFabricNetworkWithOrgOK) IsServerError() bool {
	return false
}

// IsCode returns true when this import fabric network with org o k response a status code equal to that given
func (o *ImportFabricNetworkWithOrgOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the import fabric network with org o k response
func (o *ImportFabricNetworkWithOrgOK) Code() int {
	return 200
}

func (o *ImportFabricNetworkWithOrgOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import-with-org][%d] importFabricNetworkWithOrgOK %s", 200, payload)
}

func (o *ImportFabricNetworkWithOrgOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import-with-org][%d] importFabricNetworkWithOrgOK %s", 200, payload)
}

func (o *ImportFabricNetworkWithOrgOK) GetPayload() *models.HTTPImportNetworkResponse {
	return o.Payload
}

func (o *ImportFabricNetworkWithOrgOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPImportNetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewImportFabricNetworkWithOrgBadRequest creates a ImportFabricNetworkWithOrgBadRequest with default headers values
func NewImportFabricNetworkWithOrgBadRequest() *ImportFabricNetworkWithOrgBadRequest {
	return &ImportFabricNetworkWithOrgBadRequest{}
}

/*
ImportFabricNetworkWithOrgBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ImportFabricNetworkWithOrgBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this import fabric network with org bad request response has a 2xx status code
func (o *ImportFabricNetworkWithOrgBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import fabric network with org bad request response has a 3xx status code
func (o *ImportFabricNetworkWithOrgBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import fabric network with org bad request response has a 4xx status code
func (o *ImportFabricNetworkWithOrgBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this import fabric network with org bad request response has a 5xx status code
func (o *ImportFabricNetworkWithOrgBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this import fabric network with org bad request response a status code equal to that given
func (o *ImportFabricNetworkWithOrgBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the import fabric network with org bad request response
func (o *ImportFabricNetworkWithOrgBadRequest) Code() int {
	return 400
}

func (o *ImportFabricNetworkWithOrgBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import-with-org][%d] importFabricNetworkWithOrgBadRequest %s", 400, payload)
}

func (o *ImportFabricNetworkWithOrgBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import-with-org][%d] importFabricNetworkWithOrgBadRequest %s", 400, payload)
}

func (o *ImportFabricNetworkWithOrgBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *ImportFabricNetworkWithOrgBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewImportFabricNetworkWithOrgInternalServerError creates a ImportFabricNetworkWithOrgInternalServerError with default headers values
func NewImportFabricNetworkWithOrgInternalServerError() *ImportFabricNetworkWithOrgInternalServerError {
	return &ImportFabricNetworkWithOrgInternalServerError{}
}

/*
ImportFabricNetworkWithOrgInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ImportFabricNetworkWithOrgInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this import fabric network with org internal server error response has a 2xx status code
func (o *ImportFabricNetworkWithOrgInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import fabric network with org internal server error response has a 3xx status code
func (o *ImportFabricNetworkWithOrgInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import fabric network with org internal server error response has a 4xx status code
func (o *ImportFabricNetworkWithOrgInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this import fabric network with org internal server error response has a 5xx status code
func (o *ImportFabricNetworkWithOrgInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this import fabric network with org internal server error response a status code equal to that given
func (o *ImportFabricNetworkWithOrgInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the import fabric network with org internal server error response
func (o *ImportFabricNetworkWithOrgInternalServerError) Code() int {
	return 500
}

func (o *ImportFabricNetworkWithOrgInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import-with-org][%d] importFabricNetworkWithOrgInternalServerError %s", 500, payload)
}

func (o *ImportFabricNetworkWithOrgInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/import-with-org][%d] importFabricNetworkWithOrgInternalServerError %s", 500, payload)
}

func (o *ImportFabricNetworkWithOrgInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *ImportFabricNetworkWithOrgInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
