// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DummyHandlerReader is a Reader for the DummyHandler structure.
type DummyHandlerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DummyHandlerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewDummyHandlerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewDummyHandlerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewDummyHandlerAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 203:
		result := NewDummyHandlerRequestProcessed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDummyHandlerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 205:
		result := NewDummyHandlerResetContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 206:
		result := NewDummyHandlerPartialContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 207:
		result := NewDummyHandlerMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 208:
		result := NewDummyHandlerAlreadyReported()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 209:
		result := NewDummyHandlerStatus209()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 210:
		result := NewDummyHandlerStatus210()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 211:
		result := NewDummyHandlerStatus211()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 212:
		result := NewDummyHandlerStatus212()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 213:
		result := NewDummyHandlerStatus213()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 214:
		result := NewDummyHandlerStatus214()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 215:
		result := NewDummyHandlerStatus215()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 216:
		result := NewDummyHandlerStatus216()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 217:
		result := NewDummyHandlerStatus217()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[POST /dummy] dummyHandler", response, response.Code())
	}
}

// NewDummyHandlerOK creates a DummyHandlerOK with default headers values
func NewDummyHandlerOK() *DummyHandlerOK {
	return &DummyHandlerOK{}
}

/*
DummyHandlerOK describes a response with status code 200, with default header values.

OK
*/
type DummyHandlerOK struct {
	Payload *models.HTTPRemoveOrgPayload
}

// IsSuccess returns true when this dummy handler o k response has a 2xx status code
func (o *DummyHandlerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler o k response has a 3xx status code
func (o *DummyHandlerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler o k response has a 4xx status code
func (o *DummyHandlerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler o k response has a 5xx status code
func (o *DummyHandlerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler o k response a status code equal to that given
func (o *DummyHandlerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the dummy handler o k response
func (o *DummyHandlerOK) Code() int {
	return 200
}

func (o *DummyHandlerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerOK %s", 200, payload)
}

func (o *DummyHandlerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerOK %s", 200, payload)
}

func (o *DummyHandlerOK) GetPayload() *models.HTTPRemoveOrgPayload {
	return o.Payload
}

func (o *DummyHandlerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPRemoveOrgPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerCreated creates a DummyHandlerCreated with default headers values
func NewDummyHandlerCreated() *DummyHandlerCreated {
	return &DummyHandlerCreated{}
}

/*
DummyHandlerCreated describes a response with status code 201, with default header values.

Created
*/
type DummyHandlerCreated struct {
	Payload *models.HTTPUpdateOrgMSPPayload
}

// IsSuccess returns true when this dummy handler created response has a 2xx status code
func (o *DummyHandlerCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler created response has a 3xx status code
func (o *DummyHandlerCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler created response has a 4xx status code
func (o *DummyHandlerCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler created response has a 5xx status code
func (o *DummyHandlerCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler created response a status code equal to that given
func (o *DummyHandlerCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the dummy handler created response
func (o *DummyHandlerCreated) Code() int {
	return 201
}

func (o *DummyHandlerCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerCreated %s", 201, payload)
}

func (o *DummyHandlerCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerCreated %s", 201, payload)
}

func (o *DummyHandlerCreated) GetPayload() *models.HTTPUpdateOrgMSPPayload {
	return o.Payload
}

func (o *DummyHandlerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateOrgMSPPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerAccepted creates a DummyHandlerAccepted with default headers values
func NewDummyHandlerAccepted() *DummyHandlerAccepted {
	return &DummyHandlerAccepted{}
}

/*
DummyHandlerAccepted describes a response with status code 202, with default header values.

Accepted
*/
type DummyHandlerAccepted struct {
	Payload *models.HTTPSetAnchorPeersPayload
}

// IsSuccess returns true when this dummy handler accepted response has a 2xx status code
func (o *DummyHandlerAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler accepted response has a 3xx status code
func (o *DummyHandlerAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler accepted response has a 4xx status code
func (o *DummyHandlerAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler accepted response has a 5xx status code
func (o *DummyHandlerAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler accepted response a status code equal to that given
func (o *DummyHandlerAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the dummy handler accepted response
func (o *DummyHandlerAccepted) Code() int {
	return 202
}

func (o *DummyHandlerAccepted) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerAccepted %s", 202, payload)
}

func (o *DummyHandlerAccepted) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerAccepted %s", 202, payload)
}

func (o *DummyHandlerAccepted) GetPayload() *models.HTTPSetAnchorPeersPayload {
	return o.Payload
}

func (o *DummyHandlerAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPSetAnchorPeersPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerRequestProcessed creates a DummyHandlerRequestProcessed with default headers values
func NewDummyHandlerRequestProcessed() *DummyHandlerRequestProcessed {
	return &DummyHandlerRequestProcessed{}
}

/*
DummyHandlerRequestProcessed describes a response with status code 203, with default header values.

Non-Authoritative Information
*/
type DummyHandlerRequestProcessed struct {
	Payload *models.HTTPAddConsenterPayload
}

// IsSuccess returns true when this dummy handler request processed response has a 2xx status code
func (o *DummyHandlerRequestProcessed) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler request processed response has a 3xx status code
func (o *DummyHandlerRequestProcessed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler request processed response has a 4xx status code
func (o *DummyHandlerRequestProcessed) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler request processed response has a 5xx status code
func (o *DummyHandlerRequestProcessed) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler request processed response a status code equal to that given
func (o *DummyHandlerRequestProcessed) IsCode(code int) bool {
	return code == 203
}

// Code gets the status code for the dummy handler request processed response
func (o *DummyHandlerRequestProcessed) Code() int {
	return 203
}

func (o *DummyHandlerRequestProcessed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerRequestProcessed %s", 203, payload)
}

func (o *DummyHandlerRequestProcessed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerRequestProcessed %s", 203, payload)
}

func (o *DummyHandlerRequestProcessed) GetPayload() *models.HTTPAddConsenterPayload {
	return o.Payload
}

func (o *DummyHandlerRequestProcessed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAddConsenterPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerNoContent creates a DummyHandlerNoContent with default headers values
func NewDummyHandlerNoContent() *DummyHandlerNoContent {
	return &DummyHandlerNoContent{}
}

/*
DummyHandlerNoContent describes a response with status code 204, with default header values.

No Content
*/
type DummyHandlerNoContent struct {
	Payload *models.HTTPRemoveConsenterPayload
}

// IsSuccess returns true when this dummy handler no content response has a 2xx status code
func (o *DummyHandlerNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler no content response has a 3xx status code
func (o *DummyHandlerNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler no content response has a 4xx status code
func (o *DummyHandlerNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler no content response has a 5xx status code
func (o *DummyHandlerNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler no content response a status code equal to that given
func (o *DummyHandlerNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the dummy handler no content response
func (o *DummyHandlerNoContent) Code() int {
	return 204
}

func (o *DummyHandlerNoContent) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerNoContent %s", 204, payload)
}

func (o *DummyHandlerNoContent) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerNoContent %s", 204, payload)
}

func (o *DummyHandlerNoContent) GetPayload() *models.HTTPRemoveConsenterPayload {
	return o.Payload
}

func (o *DummyHandlerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPRemoveConsenterPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerResetContent creates a DummyHandlerResetContent with default headers values
func NewDummyHandlerResetContent() *DummyHandlerResetContent {
	return &DummyHandlerResetContent{}
}

/*
DummyHandlerResetContent describes a response with status code 205, with default header values.

Reset Content
*/
type DummyHandlerResetContent struct {
	Payload *models.HTTPUpdateConsenterPayload
}

// IsSuccess returns true when this dummy handler reset content response has a 2xx status code
func (o *DummyHandlerResetContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler reset content response has a 3xx status code
func (o *DummyHandlerResetContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler reset content response has a 4xx status code
func (o *DummyHandlerResetContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler reset content response has a 5xx status code
func (o *DummyHandlerResetContent) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler reset content response a status code equal to that given
func (o *DummyHandlerResetContent) IsCode(code int) bool {
	return code == 205
}

// Code gets the status code for the dummy handler reset content response
func (o *DummyHandlerResetContent) Code() int {
	return 205
}

func (o *DummyHandlerResetContent) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerResetContent %s", 205, payload)
}

func (o *DummyHandlerResetContent) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerResetContent %s", 205, payload)
}

func (o *DummyHandlerResetContent) GetPayload() *models.HTTPUpdateConsenterPayload {
	return o.Payload
}

func (o *DummyHandlerResetContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateConsenterPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerPartialContent creates a DummyHandlerPartialContent with default headers values
func NewDummyHandlerPartialContent() *DummyHandlerPartialContent {
	return &DummyHandlerPartialContent{}
}

/*
DummyHandlerPartialContent describes a response with status code 206, with default header values.

Partial Content
*/
type DummyHandlerPartialContent struct {
	Payload *models.HTTPUpdateEtcdRaftOptionsPayload
}

// IsSuccess returns true when this dummy handler partial content response has a 2xx status code
func (o *DummyHandlerPartialContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler partial content response has a 3xx status code
func (o *DummyHandlerPartialContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler partial content response has a 4xx status code
func (o *DummyHandlerPartialContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler partial content response has a 5xx status code
func (o *DummyHandlerPartialContent) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler partial content response a status code equal to that given
func (o *DummyHandlerPartialContent) IsCode(code int) bool {
	return code == 206
}

// Code gets the status code for the dummy handler partial content response
func (o *DummyHandlerPartialContent) Code() int {
	return 206
}

func (o *DummyHandlerPartialContent) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerPartialContent %s", 206, payload)
}

func (o *DummyHandlerPartialContent) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerPartialContent %s", 206, payload)
}

func (o *DummyHandlerPartialContent) GetPayload() *models.HTTPUpdateEtcdRaftOptionsPayload {
	return o.Payload
}

func (o *DummyHandlerPartialContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateEtcdRaftOptionsPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerMultiStatus creates a DummyHandlerMultiStatus with default headers values
func NewDummyHandlerMultiStatus() *DummyHandlerMultiStatus {
	return &DummyHandlerMultiStatus{}
}

/*
DummyHandlerMultiStatus describes a response with status code 207, with default header values.

Multi-Status
*/
type DummyHandlerMultiStatus struct {
	Payload *models.HTTPUpdateBatchSizePayload
}

// IsSuccess returns true when this dummy handler multi status response has a 2xx status code
func (o *DummyHandlerMultiStatus) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler multi status response has a 3xx status code
func (o *DummyHandlerMultiStatus) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler multi status response has a 4xx status code
func (o *DummyHandlerMultiStatus) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler multi status response has a 5xx status code
func (o *DummyHandlerMultiStatus) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler multi status response a status code equal to that given
func (o *DummyHandlerMultiStatus) IsCode(code int) bool {
	return code == 207
}

// Code gets the status code for the dummy handler multi status response
func (o *DummyHandlerMultiStatus) Code() int {
	return 207
}

func (o *DummyHandlerMultiStatus) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerMultiStatus %s", 207, payload)
}

func (o *DummyHandlerMultiStatus) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerMultiStatus %s", 207, payload)
}

func (o *DummyHandlerMultiStatus) GetPayload() *models.HTTPUpdateBatchSizePayload {
	return o.Payload
}

func (o *DummyHandlerMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateBatchSizePayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerAlreadyReported creates a DummyHandlerAlreadyReported with default headers values
func NewDummyHandlerAlreadyReported() *DummyHandlerAlreadyReported {
	return &DummyHandlerAlreadyReported{}
}

/*
DummyHandlerAlreadyReported describes a response with status code 208, with default header values.

Already Reported
*/
type DummyHandlerAlreadyReported struct {
	Payload *models.HTTPUpdateBatchTimeoutPayload
}

// IsSuccess returns true when this dummy handler already reported response has a 2xx status code
func (o *DummyHandlerAlreadyReported) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler already reported response has a 3xx status code
func (o *DummyHandlerAlreadyReported) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler already reported response has a 4xx status code
func (o *DummyHandlerAlreadyReported) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler already reported response has a 5xx status code
func (o *DummyHandlerAlreadyReported) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler already reported response a status code equal to that given
func (o *DummyHandlerAlreadyReported) IsCode(code int) bool {
	return code == 208
}

// Code gets the status code for the dummy handler already reported response
func (o *DummyHandlerAlreadyReported) Code() int {
	return 208
}

func (o *DummyHandlerAlreadyReported) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerAlreadyReported %s", 208, payload)
}

func (o *DummyHandlerAlreadyReported) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerAlreadyReported %s", 208, payload)
}

func (o *DummyHandlerAlreadyReported) GetPayload() *models.HTTPUpdateBatchTimeoutPayload {
	return o.Payload
}

func (o *DummyHandlerAlreadyReported) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateBatchTimeoutPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerStatus209 creates a DummyHandlerStatus209 with default headers values
func NewDummyHandlerStatus209() *DummyHandlerStatus209 {
	return &DummyHandlerStatus209{}
}

/*
DummyHandlerStatus209 describes a response with status code 209, with default header values.

DummyHandlerStatus209 dummy handler status209
*/
type DummyHandlerStatus209 struct {
	Payload *models.HTTPUpdateApplicationPolicyPayload
}

// IsSuccess returns true when this dummy handler status209 response has a 2xx status code
func (o *DummyHandlerStatus209) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler status209 response has a 3xx status code
func (o *DummyHandlerStatus209) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler status209 response has a 4xx status code
func (o *DummyHandlerStatus209) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler status209 response has a 5xx status code
func (o *DummyHandlerStatus209) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler status209 response a status code equal to that given
func (o *DummyHandlerStatus209) IsCode(code int) bool {
	return code == 209
}

// Code gets the status code for the dummy handler status209 response
func (o *DummyHandlerStatus209) Code() int {
	return 209
}

func (o *DummyHandlerStatus209) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus209 %s", 209, payload)
}

func (o *DummyHandlerStatus209) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus209 %s", 209, payload)
}

func (o *DummyHandlerStatus209) GetPayload() *models.HTTPUpdateApplicationPolicyPayload {
	return o.Payload
}

func (o *DummyHandlerStatus209) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateApplicationPolicyPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerStatus210 creates a DummyHandlerStatus210 with default headers values
func NewDummyHandlerStatus210() *DummyHandlerStatus210 {
	return &DummyHandlerStatus210{}
}

/*
DummyHandlerStatus210 describes a response with status code 210, with default header values.

DummyHandlerStatus210 dummy handler status210
*/
type DummyHandlerStatus210 struct {
	Payload *models.HTTPUpdateOrdererPolicyPayload
}

// IsSuccess returns true when this dummy handler status210 response has a 2xx status code
func (o *DummyHandlerStatus210) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler status210 response has a 3xx status code
func (o *DummyHandlerStatus210) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler status210 response has a 4xx status code
func (o *DummyHandlerStatus210) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler status210 response has a 5xx status code
func (o *DummyHandlerStatus210) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler status210 response a status code equal to that given
func (o *DummyHandlerStatus210) IsCode(code int) bool {
	return code == 210
}

// Code gets the status code for the dummy handler status210 response
func (o *DummyHandlerStatus210) Code() int {
	return 210
}

func (o *DummyHandlerStatus210) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus210 %s", 210, payload)
}

func (o *DummyHandlerStatus210) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus210 %s", 210, payload)
}

func (o *DummyHandlerStatus210) GetPayload() *models.HTTPUpdateOrdererPolicyPayload {
	return o.Payload
}

func (o *DummyHandlerStatus210) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateOrdererPolicyPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerStatus211 creates a DummyHandlerStatus211 with default headers values
func NewDummyHandlerStatus211() *DummyHandlerStatus211 {
	return &DummyHandlerStatus211{}
}

/*
DummyHandlerStatus211 describes a response with status code 211, with default header values.

DummyHandlerStatus211 dummy handler status211
*/
type DummyHandlerStatus211 struct {
	Payload *models.HTTPUpdateChannelPolicyPayload
}

// IsSuccess returns true when this dummy handler status211 response has a 2xx status code
func (o *DummyHandlerStatus211) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler status211 response has a 3xx status code
func (o *DummyHandlerStatus211) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler status211 response has a 4xx status code
func (o *DummyHandlerStatus211) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler status211 response has a 5xx status code
func (o *DummyHandlerStatus211) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler status211 response a status code equal to that given
func (o *DummyHandlerStatus211) IsCode(code int) bool {
	return code == 211
}

// Code gets the status code for the dummy handler status211 response
func (o *DummyHandlerStatus211) Code() int {
	return 211
}

func (o *DummyHandlerStatus211) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus211 %s", 211, payload)
}

func (o *DummyHandlerStatus211) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus211 %s", 211, payload)
}

func (o *DummyHandlerStatus211) GetPayload() *models.HTTPUpdateChannelPolicyPayload {
	return o.Payload
}

func (o *DummyHandlerStatus211) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateChannelPolicyPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerStatus212 creates a DummyHandlerStatus212 with default headers values
func NewDummyHandlerStatus212() *DummyHandlerStatus212 {
	return &DummyHandlerStatus212{}
}

/*
DummyHandlerStatus212 describes a response with status code 212, with default header values.

DummyHandlerStatus212 dummy handler status212
*/
type DummyHandlerStatus212 struct {
	Payload *models.HTTPUpdateChannelCapabilityOperation
}

// IsSuccess returns true when this dummy handler status212 response has a 2xx status code
func (o *DummyHandlerStatus212) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler status212 response has a 3xx status code
func (o *DummyHandlerStatus212) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler status212 response has a 4xx status code
func (o *DummyHandlerStatus212) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler status212 response has a 5xx status code
func (o *DummyHandlerStatus212) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler status212 response a status code equal to that given
func (o *DummyHandlerStatus212) IsCode(code int) bool {
	return code == 212
}

// Code gets the status code for the dummy handler status212 response
func (o *DummyHandlerStatus212) Code() int {
	return 212
}

func (o *DummyHandlerStatus212) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus212 %s", 212, payload)
}

func (o *DummyHandlerStatus212) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus212 %s", 212, payload)
}

func (o *DummyHandlerStatus212) GetPayload() *models.HTTPUpdateChannelCapabilityOperation {
	return o.Payload
}

func (o *DummyHandlerStatus212) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateChannelCapabilityOperation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerStatus213 creates a DummyHandlerStatus213 with default headers values
func NewDummyHandlerStatus213() *DummyHandlerStatus213 {
	return &DummyHandlerStatus213{}
}

/*
DummyHandlerStatus213 describes a response with status code 213, with default header values.

DummyHandlerStatus213 dummy handler status213
*/
type DummyHandlerStatus213 struct {
	Payload *models.HTTPUpdateOrdererCapabilityOperation
}

// IsSuccess returns true when this dummy handler status213 response has a 2xx status code
func (o *DummyHandlerStatus213) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler status213 response has a 3xx status code
func (o *DummyHandlerStatus213) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler status213 response has a 4xx status code
func (o *DummyHandlerStatus213) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler status213 response has a 5xx status code
func (o *DummyHandlerStatus213) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler status213 response a status code equal to that given
func (o *DummyHandlerStatus213) IsCode(code int) bool {
	return code == 213
}

// Code gets the status code for the dummy handler status213 response
func (o *DummyHandlerStatus213) Code() int {
	return 213
}

func (o *DummyHandlerStatus213) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus213 %s", 213, payload)
}

func (o *DummyHandlerStatus213) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus213 %s", 213, payload)
}

func (o *DummyHandlerStatus213) GetPayload() *models.HTTPUpdateOrdererCapabilityOperation {
	return o.Payload
}

func (o *DummyHandlerStatus213) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateOrdererCapabilityOperation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerStatus214 creates a DummyHandlerStatus214 with default headers values
func NewDummyHandlerStatus214() *DummyHandlerStatus214 {
	return &DummyHandlerStatus214{}
}

/*
DummyHandlerStatus214 describes a response with status code 214, with default header values.

DummyHandlerStatus214 dummy handler status214
*/
type DummyHandlerStatus214 struct {
	Payload *models.HTTPUpdateApplicationCapabilityOperation
}

// IsSuccess returns true when this dummy handler status214 response has a 2xx status code
func (o *DummyHandlerStatus214) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler status214 response has a 3xx status code
func (o *DummyHandlerStatus214) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler status214 response has a 4xx status code
func (o *DummyHandlerStatus214) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler status214 response has a 5xx status code
func (o *DummyHandlerStatus214) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler status214 response a status code equal to that given
func (o *DummyHandlerStatus214) IsCode(code int) bool {
	return code == 214
}

// Code gets the status code for the dummy handler status214 response
func (o *DummyHandlerStatus214) Code() int {
	return 214
}

func (o *DummyHandlerStatus214) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus214 %s", 214, payload)
}

func (o *DummyHandlerStatus214) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus214 %s", 214, payload)
}

func (o *DummyHandlerStatus214) GetPayload() *models.HTTPUpdateApplicationCapabilityOperation {
	return o.Payload
}

func (o *DummyHandlerStatus214) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateApplicationCapabilityOperation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerStatus215 creates a DummyHandlerStatus215 with default headers values
func NewDummyHandlerStatus215() *DummyHandlerStatus215 {
	return &DummyHandlerStatus215{}
}

/*
DummyHandlerStatus215 describes a response with status code 215, with default header values.

DummyHandlerStatus215 dummy handler status215
*/
type DummyHandlerStatus215 struct {
	Payload *models.HTTPAddOrdererOrgPayload
}

// IsSuccess returns true when this dummy handler status215 response has a 2xx status code
func (o *DummyHandlerStatus215) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler status215 response has a 3xx status code
func (o *DummyHandlerStatus215) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler status215 response has a 4xx status code
func (o *DummyHandlerStatus215) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler status215 response has a 5xx status code
func (o *DummyHandlerStatus215) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler status215 response a status code equal to that given
func (o *DummyHandlerStatus215) IsCode(code int) bool {
	return code == 215
}

// Code gets the status code for the dummy handler status215 response
func (o *DummyHandlerStatus215) Code() int {
	return 215
}

func (o *DummyHandlerStatus215) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus215 %s", 215, payload)
}

func (o *DummyHandlerStatus215) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus215 %s", 215, payload)
}

func (o *DummyHandlerStatus215) GetPayload() *models.HTTPAddOrdererOrgPayload {
	return o.Payload
}

func (o *DummyHandlerStatus215) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAddOrdererOrgPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerStatus216 creates a DummyHandlerStatus216 with default headers values
func NewDummyHandlerStatus216() *DummyHandlerStatus216 {
	return &DummyHandlerStatus216{}
}

/*
DummyHandlerStatus216 describes a response with status code 216, with default header values.

DummyHandlerStatus216 dummy handler status216
*/
type DummyHandlerStatus216 struct {
	Payload *models.HTTPRemoveOrdererOrgPayload
}

// IsSuccess returns true when this dummy handler status216 response has a 2xx status code
func (o *DummyHandlerStatus216) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler status216 response has a 3xx status code
func (o *DummyHandlerStatus216) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler status216 response has a 4xx status code
func (o *DummyHandlerStatus216) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler status216 response has a 5xx status code
func (o *DummyHandlerStatus216) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler status216 response a status code equal to that given
func (o *DummyHandlerStatus216) IsCode(code int) bool {
	return code == 216
}

// Code gets the status code for the dummy handler status216 response
func (o *DummyHandlerStatus216) Code() int {
	return 216
}

func (o *DummyHandlerStatus216) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus216 %s", 216, payload)
}

func (o *DummyHandlerStatus216) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus216 %s", 216, payload)
}

func (o *DummyHandlerStatus216) GetPayload() *models.HTTPRemoveOrdererOrgPayload {
	return o.Payload
}

func (o *DummyHandlerStatus216) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPRemoveOrdererOrgPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDummyHandlerStatus217 creates a DummyHandlerStatus217 with default headers values
func NewDummyHandlerStatus217() *DummyHandlerStatus217 {
	return &DummyHandlerStatus217{}
}

/*
DummyHandlerStatus217 describes a response with status code 217, with default header values.

DummyHandlerStatus217 dummy handler status217
*/
type DummyHandlerStatus217 struct {
	Payload *models.HTTPUpdateOrdererOrgMSPPayload
}

// IsSuccess returns true when this dummy handler status217 response has a 2xx status code
func (o *DummyHandlerStatus217) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dummy handler status217 response has a 3xx status code
func (o *DummyHandlerStatus217) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dummy handler status217 response has a 4xx status code
func (o *DummyHandlerStatus217) IsClientError() bool {
	return false
}

// IsServerError returns true when this dummy handler status217 response has a 5xx status code
func (o *DummyHandlerStatus217) IsServerError() bool {
	return false
}

// IsCode returns true when this dummy handler status217 response a status code equal to that given
func (o *DummyHandlerStatus217) IsCode(code int) bool {
	return code == 217
}

// Code gets the status code for the dummy handler status217 response
func (o *DummyHandlerStatus217) Code() int {
	return 217
}

func (o *DummyHandlerStatus217) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus217 %s", 217, payload)
}

func (o *DummyHandlerStatus217) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /dummy][%d] dummyHandlerStatus217 %s", 217, payload)
}

func (o *DummyHandlerStatus217) GetPayload() *models.HTTPUpdateOrdererOrgMSPPayload {
	return o.Payload
}

func (o *DummyHandlerStatus217) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPUpdateOrdererOrgMSPPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
