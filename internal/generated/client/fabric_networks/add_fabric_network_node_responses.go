// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// AddFabricNetworkNodeReader is a Reader for the AddFabricNetworkNode structure.
type AddFabricNetworkNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddFabricNetworkNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewAddFabricNetworkNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddFabricNetworkNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddFabricNetworkNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /networks/fabric/{id}/nodes] addFabricNetworkNode", response, response.Code())
	}
}

// NewAddFabricNetworkNodeOK creates a AddFabricNetworkNodeOK with default headers values
func NewAddFabricNetworkNodeOK() *AddFabricNetworkNodeOK {
	return &AddFabricNetworkNodeOK{}
}

/*
AddFabricNetworkNodeOK describes a response with status code 200, with default header values.

OK
*/
type AddFabricNetworkNodeOK struct {
	Payload *models.HTTPNetworkResponse
}

// IsSuccess returns true when this add fabric network node o k response has a 2xx status code
func (o *AddFabricNetworkNodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add fabric network node o k response has a 3xx status code
func (o *AddFabricNetworkNodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add fabric network node o k response has a 4xx status code
func (o *AddFabricNetworkNodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add fabric network node o k response has a 5xx status code
func (o *AddFabricNetworkNodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add fabric network node o k response a status code equal to that given
func (o *AddFabricNetworkNodeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add fabric network node o k response
func (o *AddFabricNetworkNodeOK) Code() int {
	return 200
}

func (o *AddFabricNetworkNodeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/nodes][%d] addFabricNetworkNodeOK %s", 200, payload)
}

func (o *AddFabricNetworkNodeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/nodes][%d] addFabricNetworkNodeOK %s", 200, payload)
}

func (o *AddFabricNetworkNodeOK) GetPayload() *models.HTTPNetworkResponse {
	return o.Payload
}

func (o *AddFabricNetworkNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPNetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddFabricNetworkNodeBadRequest creates a AddFabricNetworkNodeBadRequest with default headers values
func NewAddFabricNetworkNodeBadRequest() *AddFabricNetworkNodeBadRequest {
	return &AddFabricNetworkNodeBadRequest{}
}

/*
AddFabricNetworkNodeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddFabricNetworkNodeBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this add fabric network node bad request response has a 2xx status code
func (o *AddFabricNetworkNodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add fabric network node bad request response has a 3xx status code
func (o *AddFabricNetworkNodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add fabric network node bad request response has a 4xx status code
func (o *AddFabricNetworkNodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add fabric network node bad request response has a 5xx status code
func (o *AddFabricNetworkNodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add fabric network node bad request response a status code equal to that given
func (o *AddFabricNetworkNodeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add fabric network node bad request response
func (o *AddFabricNetworkNodeBadRequest) Code() int {
	return 400
}

func (o *AddFabricNetworkNodeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/nodes][%d] addFabricNetworkNodeBadRequest %s", 400, payload)
}

func (o *AddFabricNetworkNodeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/nodes][%d] addFabricNetworkNodeBadRequest %s", 400, payload)
}

func (o *AddFabricNetworkNodeBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *AddFabricNetworkNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddFabricNetworkNodeInternalServerError creates a AddFabricNetworkNodeInternalServerError with default headers values
func NewAddFabricNetworkNodeInternalServerError() *AddFabricNetworkNodeInternalServerError {
	return &AddFabricNetworkNodeInternalServerError{}
}

/*
AddFabricNetworkNodeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AddFabricNetworkNodeInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this add fabric network node internal server error response has a 2xx status code
func (o *AddFabricNetworkNodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add fabric network node internal server error response has a 3xx status code
func (o *AddFabricNetworkNodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add fabric network node internal server error response has a 4xx status code
func (o *AddFabricNetworkNodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add fabric network node internal server error response has a 5xx status code
func (o *AddFabricNetworkNodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add fabric network node internal server error response a status code equal to that given
func (o *AddFabricNetworkNodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add fabric network node internal server error response
func (o *AddFabricNetworkNodeInternalServerError) Code() int {
	return 500
}

func (o *AddFabricNetworkNodeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/nodes][%d] addFabricNetworkNodeInternalServerError %s", 500, payload)
}

func (o *AddFabricNetworkNodeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/fabric/{id}/nodes][%d] addFabricNetworkNodeInternalServerError %s", 500, payload)
}

func (o *AddFabricNetworkNodeInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *AddFabricNetworkNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
