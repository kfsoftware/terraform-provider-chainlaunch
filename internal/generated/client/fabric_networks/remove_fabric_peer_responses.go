// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// RemoveFabricPeerReader is a Reader for the RemoveFabricPeer structure.
type RemoveFabricPeerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveFabricPeerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveFabricPeerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveFabricPeerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveFabricPeerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /networks/fabric/{id}/peers/{peerId}] removeFabricPeer", response, response.Code())
	}
}

// NewRemoveFabricPeerOK creates a RemoveFabricPeerOK with default headers values
func NewRemoveFabricPeerOK() *RemoveFabricPeerOK {
	return &RemoveFabricPeerOK{}
}

/*
RemoveFabricPeerOK describes a response with status code 200, with default header values.

OK
*/
type RemoveFabricPeerOK struct {
	Payload *models.HTTPNetworkResponse
}

// IsSuccess returns true when this remove fabric peer o k response has a 2xx status code
func (o *RemoveFabricPeerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove fabric peer o k response has a 3xx status code
func (o *RemoveFabricPeerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove fabric peer o k response has a 4xx status code
func (o *RemoveFabricPeerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove fabric peer o k response has a 5xx status code
func (o *RemoveFabricPeerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove fabric peer o k response a status code equal to that given
func (o *RemoveFabricPeerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remove fabric peer o k response
func (o *RemoveFabricPeerOK) Code() int {
	return 200
}

func (o *RemoveFabricPeerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /networks/fabric/{id}/peers/{peerId}][%d] removeFabricPeerOK %s", 200, payload)
}

func (o *RemoveFabricPeerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /networks/fabric/{id}/peers/{peerId}][%d] removeFabricPeerOK %s", 200, payload)
}

func (o *RemoveFabricPeerOK) GetPayload() *models.HTTPNetworkResponse {
	return o.Payload
}

func (o *RemoveFabricPeerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPNetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewRemoveFabricPeerBadRequest creates a RemoveFabricPeerBadRequest with default headers values
func NewRemoveFabricPeerBadRequest() *RemoveFabricPeerBadRequest {
	return &RemoveFabricPeerBadRequest{}
}

/*
RemoveFabricPeerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RemoveFabricPeerBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this remove fabric peer bad request response has a 2xx status code
func (o *RemoveFabricPeerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove fabric peer bad request response has a 3xx status code
func (o *RemoveFabricPeerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove fabric peer bad request response has a 4xx status code
func (o *RemoveFabricPeerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove fabric peer bad request response has a 5xx status code
func (o *RemoveFabricPeerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove fabric peer bad request response a status code equal to that given
func (o *RemoveFabricPeerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove fabric peer bad request response
func (o *RemoveFabricPeerBadRequest) Code() int {
	return 400
}

func (o *RemoveFabricPeerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /networks/fabric/{id}/peers/{peerId}][%d] removeFabricPeerBadRequest %s", 400, payload)
}

func (o *RemoveFabricPeerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /networks/fabric/{id}/peers/{peerId}][%d] removeFabricPeerBadRequest %s", 400, payload)
}

func (o *RemoveFabricPeerBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *RemoveFabricPeerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewRemoveFabricPeerInternalServerError creates a RemoveFabricPeerInternalServerError with default headers values
func NewRemoveFabricPeerInternalServerError() *RemoveFabricPeerInternalServerError {
	return &RemoveFabricPeerInternalServerError{}
}

/*
RemoveFabricPeerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RemoveFabricPeerInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this remove fabric peer internal server error response has a 2xx status code
func (o *RemoveFabricPeerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove fabric peer internal server error response has a 3xx status code
func (o *RemoveFabricPeerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove fabric peer internal server error response has a 4xx status code
func (o *RemoveFabricPeerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove fabric peer internal server error response has a 5xx status code
func (o *RemoveFabricPeerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove fabric peer internal server error response a status code equal to that given
func (o *RemoveFabricPeerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove fabric peer internal server error response
func (o *RemoveFabricPeerInternalServerError) Code() int {
	return 500
}

func (o *RemoveFabricPeerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /networks/fabric/{id}/peers/{peerId}][%d] removeFabricPeerInternalServerError %s", 500, payload)
}

func (o *RemoveFabricPeerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /networks/fabric/{id}/peers/{peerId}][%d] removeFabricPeerInternalServerError %s", 500, payload)
}

func (o *RemoveFabricPeerInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *RemoveFabricPeerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
