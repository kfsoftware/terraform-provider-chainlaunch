// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetFabricOrgConfigReader is a Reader for the GetFabricOrgConfig structure.
type GetFabricOrgConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricOrgConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricOrgConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFabricOrgConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFabricOrgConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFabricOrgConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/fabric/{id}/organizations/{orgId}/config] getFabricOrgConfig", response, response.Code())
	}
}

// NewGetFabricOrgConfigOK creates a GetFabricOrgConfigOK with default headers values
func NewGetFabricOrgConfigOK() *GetFabricOrgConfigOK {
	return &GetFabricOrgConfigOK{}
}

/*
GetFabricOrgConfigOK describes a response with status code 200, with default header values.

Network configuration YAML
*/
type GetFabricOrgConfigOK struct {
	Payload string
}

// IsSuccess returns true when this get fabric org config o k response has a 2xx status code
func (o *GetFabricOrgConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric org config o k response has a 3xx status code
func (o *GetFabricOrgConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric org config o k response has a 4xx status code
func (o *GetFabricOrgConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric org config o k response has a 5xx status code
func (o *GetFabricOrgConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric org config o k response a status code equal to that given
func (o *GetFabricOrgConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fabric org config o k response
func (o *GetFabricOrgConfigOK) Code() int {
	return 200
}

func (o *GetFabricOrgConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/organizations/{orgId}/config][%d] getFabricOrgConfigOK %s", 200, payload)
}

func (o *GetFabricOrgConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/organizations/{orgId}/config][%d] getFabricOrgConfigOK %s", 200, payload)
}

func (o *GetFabricOrgConfigOK) GetPayload() string {
	return o.Payload
}

func (o *GetFabricOrgConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricOrgConfigBadRequest creates a GetFabricOrgConfigBadRequest with default headers values
func NewGetFabricOrgConfigBadRequest() *GetFabricOrgConfigBadRequest {
	return &GetFabricOrgConfigBadRequest{}
}

/*
GetFabricOrgConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFabricOrgConfigBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric org config bad request response has a 2xx status code
func (o *GetFabricOrgConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric org config bad request response has a 3xx status code
func (o *GetFabricOrgConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric org config bad request response has a 4xx status code
func (o *GetFabricOrgConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric org config bad request response has a 5xx status code
func (o *GetFabricOrgConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric org config bad request response a status code equal to that given
func (o *GetFabricOrgConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fabric org config bad request response
func (o *GetFabricOrgConfigBadRequest) Code() int {
	return 400
}

func (o *GetFabricOrgConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/organizations/{orgId}/config][%d] getFabricOrgConfigBadRequest %s", 400, payload)
}

func (o *GetFabricOrgConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/organizations/{orgId}/config][%d] getFabricOrgConfigBadRequest %s", 400, payload)
}

func (o *GetFabricOrgConfigBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricOrgConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricOrgConfigNotFound creates a GetFabricOrgConfigNotFound with default headers values
func NewGetFabricOrgConfigNotFound() *GetFabricOrgConfigNotFound {
	return &GetFabricOrgConfigNotFound{}
}

/*
GetFabricOrgConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFabricOrgConfigNotFound struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric org config not found response has a 2xx status code
func (o *GetFabricOrgConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric org config not found response has a 3xx status code
func (o *GetFabricOrgConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric org config not found response has a 4xx status code
func (o *GetFabricOrgConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric org config not found response has a 5xx status code
func (o *GetFabricOrgConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric org config not found response a status code equal to that given
func (o *GetFabricOrgConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get fabric org config not found response
func (o *GetFabricOrgConfigNotFound) Code() int {
	return 404
}

func (o *GetFabricOrgConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/organizations/{orgId}/config][%d] getFabricOrgConfigNotFound %s", 404, payload)
}

func (o *GetFabricOrgConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/organizations/{orgId}/config][%d] getFabricOrgConfigNotFound %s", 404, payload)
}

func (o *GetFabricOrgConfigNotFound) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricOrgConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricOrgConfigInternalServerError creates a GetFabricOrgConfigInternalServerError with default headers values
func NewGetFabricOrgConfigInternalServerError() *GetFabricOrgConfigInternalServerError {
	return &GetFabricOrgConfigInternalServerError{}
}

/*
GetFabricOrgConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFabricOrgConfigInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric org config internal server error response has a 2xx status code
func (o *GetFabricOrgConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric org config internal server error response has a 3xx status code
func (o *GetFabricOrgConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric org config internal server error response has a 4xx status code
func (o *GetFabricOrgConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric org config internal server error response has a 5xx status code
func (o *GetFabricOrgConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fabric org config internal server error response a status code equal to that given
func (o *GetFabricOrgConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fabric org config internal server error response
func (o *GetFabricOrgConfigInternalServerError) Code() int {
	return 500
}

func (o *GetFabricOrgConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/organizations/{orgId}/config][%d] getFabricOrgConfigInternalServerError %s", 500, payload)
}

func (o *GetFabricOrgConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/organizations/{orgId}/config][%d] getFabricOrgConfigInternalServerError %s", 500, payload)
}

func (o *GetFabricOrgConfigInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricOrgConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
