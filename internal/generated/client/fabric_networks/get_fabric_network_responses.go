// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetFabricNetworkReader is a Reader for the GetFabricNetwork structure.
type GetFabricNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFabricNetworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFabricNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFabricNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/fabric/{id}] getFabricNetwork", response, response.Code())
	}
}

// NewGetFabricNetworkOK creates a GetFabricNetworkOK with default headers values
func NewGetFabricNetworkOK() *GetFabricNetworkOK {
	return &GetFabricNetworkOK{}
}

/*
GetFabricNetworkOK describes a response with status code 200, with default header values.

OK
*/
type GetFabricNetworkOK struct {
	Payload *models.HTTPNetworkResponse
}

// IsSuccess returns true when this get fabric network o k response has a 2xx status code
func (o *GetFabricNetworkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric network o k response has a 3xx status code
func (o *GetFabricNetworkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric network o k response has a 4xx status code
func (o *GetFabricNetworkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric network o k response has a 5xx status code
func (o *GetFabricNetworkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric network o k response a status code equal to that given
func (o *GetFabricNetworkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fabric network o k response
func (o *GetFabricNetworkOK) Code() int {
	return 200
}

func (o *GetFabricNetworkOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}][%d] getFabricNetworkOK %s", 200, payload)
}

func (o *GetFabricNetworkOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}][%d] getFabricNetworkOK %s", 200, payload)
}

func (o *GetFabricNetworkOK) GetPayload() *models.HTTPNetworkResponse {
	return o.Payload
}

func (o *GetFabricNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPNetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricNetworkBadRequest creates a GetFabricNetworkBadRequest with default headers values
func NewGetFabricNetworkBadRequest() *GetFabricNetworkBadRequest {
	return &GetFabricNetworkBadRequest{}
}

/*
GetFabricNetworkBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFabricNetworkBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric network bad request response has a 2xx status code
func (o *GetFabricNetworkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric network bad request response has a 3xx status code
func (o *GetFabricNetworkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric network bad request response has a 4xx status code
func (o *GetFabricNetworkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric network bad request response has a 5xx status code
func (o *GetFabricNetworkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric network bad request response a status code equal to that given
func (o *GetFabricNetworkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fabric network bad request response
func (o *GetFabricNetworkBadRequest) Code() int {
	return 400
}

func (o *GetFabricNetworkBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}][%d] getFabricNetworkBadRequest %s", 400, payload)
}

func (o *GetFabricNetworkBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}][%d] getFabricNetworkBadRequest %s", 400, payload)
}

func (o *GetFabricNetworkBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricNetworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricNetworkNotFound creates a GetFabricNetworkNotFound with default headers values
func NewGetFabricNetworkNotFound() *GetFabricNetworkNotFound {
	return &GetFabricNetworkNotFound{}
}

/*
GetFabricNetworkNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFabricNetworkNotFound struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric network not found response has a 2xx status code
func (o *GetFabricNetworkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric network not found response has a 3xx status code
func (o *GetFabricNetworkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric network not found response has a 4xx status code
func (o *GetFabricNetworkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric network not found response has a 5xx status code
func (o *GetFabricNetworkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric network not found response a status code equal to that given
func (o *GetFabricNetworkNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get fabric network not found response
func (o *GetFabricNetworkNotFound) Code() int {
	return 404
}

func (o *GetFabricNetworkNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}][%d] getFabricNetworkNotFound %s", 404, payload)
}

func (o *GetFabricNetworkNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}][%d] getFabricNetworkNotFound %s", 404, payload)
}

func (o *GetFabricNetworkNotFound) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricNetworkInternalServerError creates a GetFabricNetworkInternalServerError with default headers values
func NewGetFabricNetworkInternalServerError() *GetFabricNetworkInternalServerError {
	return &GetFabricNetworkInternalServerError{}
}

/*
GetFabricNetworkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFabricNetworkInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get fabric network internal server error response has a 2xx status code
func (o *GetFabricNetworkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric network internal server error response has a 3xx status code
func (o *GetFabricNetworkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric network internal server error response has a 4xx status code
func (o *GetFabricNetworkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric network internal server error response has a 5xx status code
func (o *GetFabricNetworkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fabric network internal server error response a status code equal to that given
func (o *GetFabricNetworkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fabric network internal server error response
func (o *GetFabricNetworkInternalServerError) Code() int {
	return 500
}

func (o *GetFabricNetworkInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}][%d] getFabricNetworkInternalServerError %s", 500, payload)
}

func (o *GetFabricNetworkInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}][%d] getFabricNetworkInternalServerError %s", 500, payload)
}

func (o *GetFabricNetworkInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetFabricNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
