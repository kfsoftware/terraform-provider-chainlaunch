// Code generated by go-swagger; DO NOT EDIT.

package fabric_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNetworkMapReader is a Reader for the GetNetworkMap structure.
type GetNetworkMapReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkMapReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkMapOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNetworkMapBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNetworkMapNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNetworkMapInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/fabric/{id}/map] getNetworkMap", response, response.Code())
	}
}

// NewGetNetworkMapOK creates a GetNetworkMapOK with default headers values
func NewGetNetworkMapOK() *GetNetworkMapOK {
	return &GetNetworkMapOK{}
}

/*
GetNetworkMapOK describes a response with status code 200, with default header values.

OK
*/
type GetNetworkMapOK struct {
	Payload *models.ServiceNetworkMap
}

// IsSuccess returns true when this get network map o k response has a 2xx status code
func (o *GetNetworkMapOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get network map o k response has a 3xx status code
func (o *GetNetworkMapOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network map o k response has a 4xx status code
func (o *GetNetworkMapOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network map o k response has a 5xx status code
func (o *GetNetworkMapOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get network map o k response a status code equal to that given
func (o *GetNetworkMapOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get network map o k response
func (o *GetNetworkMapOK) Code() int {
	return 200
}

func (o *GetNetworkMapOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/map][%d] getNetworkMapOK %s", 200, payload)
}

func (o *GetNetworkMapOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/map][%d] getNetworkMapOK %s", 200, payload)
}

func (o *GetNetworkMapOK) GetPayload() *models.ServiceNetworkMap {
	return o.Payload
}

func (o *GetNetworkMapOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceNetworkMap)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNetworkMapBadRequest creates a GetNetworkMapBadRequest with default headers values
func NewGetNetworkMapBadRequest() *GetNetworkMapBadRequest {
	return &GetNetworkMapBadRequest{}
}

/*
GetNetworkMapBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetNetworkMapBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get network map bad request response has a 2xx status code
func (o *GetNetworkMapBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network map bad request response has a 3xx status code
func (o *GetNetworkMapBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network map bad request response has a 4xx status code
func (o *GetNetworkMapBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network map bad request response has a 5xx status code
func (o *GetNetworkMapBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get network map bad request response a status code equal to that given
func (o *GetNetworkMapBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get network map bad request response
func (o *GetNetworkMapBadRequest) Code() int {
	return 400
}

func (o *GetNetworkMapBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/map][%d] getNetworkMapBadRequest %s", 400, payload)
}

func (o *GetNetworkMapBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/map][%d] getNetworkMapBadRequest %s", 400, payload)
}

func (o *GetNetworkMapBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetNetworkMapBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNetworkMapNotFound creates a GetNetworkMapNotFound with default headers values
func NewGetNetworkMapNotFound() *GetNetworkMapNotFound {
	return &GetNetworkMapNotFound{}
}

/*
GetNetworkMapNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetNetworkMapNotFound struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get network map not found response has a 2xx status code
func (o *GetNetworkMapNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network map not found response has a 3xx status code
func (o *GetNetworkMapNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network map not found response has a 4xx status code
func (o *GetNetworkMapNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network map not found response has a 5xx status code
func (o *GetNetworkMapNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get network map not found response a status code equal to that given
func (o *GetNetworkMapNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get network map not found response
func (o *GetNetworkMapNotFound) Code() int {
	return 404
}

func (o *GetNetworkMapNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/map][%d] getNetworkMapNotFound %s", 404, payload)
}

func (o *GetNetworkMapNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/map][%d] getNetworkMapNotFound %s", 404, payload)
}

func (o *GetNetworkMapNotFound) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetNetworkMapNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNetworkMapInternalServerError creates a GetNetworkMapInternalServerError with default headers values
func NewGetNetworkMapInternalServerError() *GetNetworkMapInternalServerError {
	return &GetNetworkMapInternalServerError{}
}

/*
GetNetworkMapInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetNetworkMapInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get network map internal server error response has a 2xx status code
func (o *GetNetworkMapInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network map internal server error response has a 3xx status code
func (o *GetNetworkMapInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network map internal server error response has a 4xx status code
func (o *GetNetworkMapInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network map internal server error response has a 5xx status code
func (o *GetNetworkMapInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get network map internal server error response a status code equal to that given
func (o *GetNetworkMapInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get network map internal server error response
func (o *GetNetworkMapInternalServerError) Code() int {
	return 500
}

func (o *GetNetworkMapInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/map][%d] getNetworkMapInternalServerError %s", 500, payload)
}

func (o *GetNetworkMapInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/fabric/{id}/map][%d] getNetworkMapInternalServerError %s", 500, payload)
}

func (o *GetNetworkMapInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetNetworkMapInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
