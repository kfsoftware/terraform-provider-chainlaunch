// Code generated by go-swagger; DO NOT EDIT.

package external_nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteExternalFabricPeerReader is a Reader for the DeleteExternalFabricPeer structure.
type DeleteExternalFabricPeerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteExternalFabricPeerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteExternalFabricPeerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteExternalFabricPeerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteExternalFabricPeerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteExternalFabricPeerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /external-nodes/fabric-peers/{id}] deleteExternalFabricPeer", response, response.Code())
	}
}

// NewDeleteExternalFabricPeerOK creates a DeleteExternalFabricPeerOK with default headers values
func NewDeleteExternalFabricPeerOK() *DeleteExternalFabricPeerOK {
	return &DeleteExternalFabricPeerOK{}
}

/*
DeleteExternalFabricPeerOK describes a response with status code 200, with default header values.

OK
*/
type DeleteExternalFabricPeerOK struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete external fabric peer o k response has a 2xx status code
func (o *DeleteExternalFabricPeerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete external fabric peer o k response has a 3xx status code
func (o *DeleteExternalFabricPeerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete external fabric peer o k response has a 4xx status code
func (o *DeleteExternalFabricPeerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete external fabric peer o k response has a 5xx status code
func (o *DeleteExternalFabricPeerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete external fabric peer o k response a status code equal to that given
func (o *DeleteExternalFabricPeerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete external fabric peer o k response
func (o *DeleteExternalFabricPeerOK) Code() int {
	return 200
}

func (o *DeleteExternalFabricPeerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/fabric-peers/{id}][%d] deleteExternalFabricPeerOK %s", 200, payload)
}

func (o *DeleteExternalFabricPeerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/fabric-peers/{id}][%d] deleteExternalFabricPeerOK %s", 200, payload)
}

func (o *DeleteExternalFabricPeerOK) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteExternalFabricPeerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteExternalFabricPeerBadRequest creates a DeleteExternalFabricPeerBadRequest with default headers values
func NewDeleteExternalFabricPeerBadRequest() *DeleteExternalFabricPeerBadRequest {
	return &DeleteExternalFabricPeerBadRequest{}
}

/*
DeleteExternalFabricPeerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteExternalFabricPeerBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete external fabric peer bad request response has a 2xx status code
func (o *DeleteExternalFabricPeerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete external fabric peer bad request response has a 3xx status code
func (o *DeleteExternalFabricPeerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete external fabric peer bad request response has a 4xx status code
func (o *DeleteExternalFabricPeerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete external fabric peer bad request response has a 5xx status code
func (o *DeleteExternalFabricPeerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete external fabric peer bad request response a status code equal to that given
func (o *DeleteExternalFabricPeerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete external fabric peer bad request response
func (o *DeleteExternalFabricPeerBadRequest) Code() int {
	return 400
}

func (o *DeleteExternalFabricPeerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/fabric-peers/{id}][%d] deleteExternalFabricPeerBadRequest %s", 400, payload)
}

func (o *DeleteExternalFabricPeerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/fabric-peers/{id}][%d] deleteExternalFabricPeerBadRequest %s", 400, payload)
}

func (o *DeleteExternalFabricPeerBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteExternalFabricPeerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteExternalFabricPeerNotFound creates a DeleteExternalFabricPeerNotFound with default headers values
func NewDeleteExternalFabricPeerNotFound() *DeleteExternalFabricPeerNotFound {
	return &DeleteExternalFabricPeerNotFound{}
}

/*
DeleteExternalFabricPeerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteExternalFabricPeerNotFound struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete external fabric peer not found response has a 2xx status code
func (o *DeleteExternalFabricPeerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete external fabric peer not found response has a 3xx status code
func (o *DeleteExternalFabricPeerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete external fabric peer not found response has a 4xx status code
func (o *DeleteExternalFabricPeerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete external fabric peer not found response has a 5xx status code
func (o *DeleteExternalFabricPeerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete external fabric peer not found response a status code equal to that given
func (o *DeleteExternalFabricPeerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete external fabric peer not found response
func (o *DeleteExternalFabricPeerNotFound) Code() int {
	return 404
}

func (o *DeleteExternalFabricPeerNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/fabric-peers/{id}][%d] deleteExternalFabricPeerNotFound %s", 404, payload)
}

func (o *DeleteExternalFabricPeerNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/fabric-peers/{id}][%d] deleteExternalFabricPeerNotFound %s", 404, payload)
}

func (o *DeleteExternalFabricPeerNotFound) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteExternalFabricPeerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteExternalFabricPeerInternalServerError creates a DeleteExternalFabricPeerInternalServerError with default headers values
func NewDeleteExternalFabricPeerInternalServerError() *DeleteExternalFabricPeerInternalServerError {
	return &DeleteExternalFabricPeerInternalServerError{}
}

/*
DeleteExternalFabricPeerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteExternalFabricPeerInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete external fabric peer internal server error response has a 2xx status code
func (o *DeleteExternalFabricPeerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete external fabric peer internal server error response has a 3xx status code
func (o *DeleteExternalFabricPeerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete external fabric peer internal server error response has a 4xx status code
func (o *DeleteExternalFabricPeerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete external fabric peer internal server error response has a 5xx status code
func (o *DeleteExternalFabricPeerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete external fabric peer internal server error response a status code equal to that given
func (o *DeleteExternalFabricPeerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete external fabric peer internal server error response
func (o *DeleteExternalFabricPeerInternalServerError) Code() int {
	return 500
}

func (o *DeleteExternalFabricPeerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/fabric-peers/{id}][%d] deleteExternalFabricPeerInternalServerError %s", 500, payload)
}

func (o *DeleteExternalFabricPeerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/fabric-peers/{id}][%d] deleteExternalFabricPeerInternalServerError %s", 500, payload)
}

func (o *DeleteExternalFabricPeerInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteExternalFabricPeerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
