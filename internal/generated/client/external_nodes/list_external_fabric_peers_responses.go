// Code generated by go-swagger; DO NOT EDIT.

package external_nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListExternalFabricPeersReader is a Reader for the ListExternalFabricPeers structure.
type ListExternalFabricPeersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListExternalFabricPeersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListExternalFabricPeersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListExternalFabricPeersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /external-nodes/fabric-peers] listExternalFabricPeers", response, response.Code())
	}
}

// NewListExternalFabricPeersOK creates a ListExternalFabricPeersOK with default headers values
func NewListExternalFabricPeersOK() *ListExternalFabricPeersOK {
	return &ListExternalFabricPeersOK{}
}

/*
ListExternalFabricPeersOK describes a response with status code 200, with default header values.

OK
*/
type ListExternalFabricPeersOK struct {
	Payload []*models.ServiceExternalFabricPeerDTO
}

// IsSuccess returns true when this list external fabric peers o k response has a 2xx status code
func (o *ListExternalFabricPeersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list external fabric peers o k response has a 3xx status code
func (o *ListExternalFabricPeersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list external fabric peers o k response has a 4xx status code
func (o *ListExternalFabricPeersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list external fabric peers o k response has a 5xx status code
func (o *ListExternalFabricPeersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list external fabric peers o k response a status code equal to that given
func (o *ListExternalFabricPeersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list external fabric peers o k response
func (o *ListExternalFabricPeersOK) Code() int {
	return 200
}

func (o *ListExternalFabricPeersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-nodes/fabric-peers][%d] listExternalFabricPeersOK %s", 200, payload)
}

func (o *ListExternalFabricPeersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-nodes/fabric-peers][%d] listExternalFabricPeersOK %s", 200, payload)
}

func (o *ListExternalFabricPeersOK) GetPayload() []*models.ServiceExternalFabricPeerDTO {
	return o.Payload
}

func (o *ListExternalFabricPeersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListExternalFabricPeersInternalServerError creates a ListExternalFabricPeersInternalServerError with default headers values
func NewListExternalFabricPeersInternalServerError() *ListExternalFabricPeersInternalServerError {
	return &ListExternalFabricPeersInternalServerError{}
}

/*
ListExternalFabricPeersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListExternalFabricPeersInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this list external fabric peers internal server error response has a 2xx status code
func (o *ListExternalFabricPeersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list external fabric peers internal server error response has a 3xx status code
func (o *ListExternalFabricPeersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list external fabric peers internal server error response has a 4xx status code
func (o *ListExternalFabricPeersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list external fabric peers internal server error response has a 5xx status code
func (o *ListExternalFabricPeersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list external fabric peers internal server error response a status code equal to that given
func (o *ListExternalFabricPeersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list external fabric peers internal server error response
func (o *ListExternalFabricPeersInternalServerError) Code() int {
	return 500
}

func (o *ListExternalFabricPeersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-nodes/fabric-peers][%d] listExternalFabricPeersInternalServerError %s", 500, payload)
}

func (o *ListExternalFabricPeersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-nodes/fabric-peers][%d] listExternalFabricPeersInternalServerError %s", 500, payload)
}

func (o *ListExternalFabricPeersInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *ListExternalFabricPeersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
