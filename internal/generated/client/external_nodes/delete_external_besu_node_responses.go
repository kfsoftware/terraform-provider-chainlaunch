// Code generated by go-swagger; DO NOT EDIT.

package external_nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteExternalBesuNodeReader is a Reader for the DeleteExternalBesuNode structure.
type DeleteExternalBesuNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteExternalBesuNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteExternalBesuNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteExternalBesuNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteExternalBesuNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteExternalBesuNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /external-nodes/besu-nodes/{id}] deleteExternalBesuNode", response, response.Code())
	}
}

// NewDeleteExternalBesuNodeOK creates a DeleteExternalBesuNodeOK with default headers values
func NewDeleteExternalBesuNodeOK() *DeleteExternalBesuNodeOK {
	return &DeleteExternalBesuNodeOK{}
}

/*
DeleteExternalBesuNodeOK describes a response with status code 200, with default header values.

OK
*/
type DeleteExternalBesuNodeOK struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete external besu node o k response has a 2xx status code
func (o *DeleteExternalBesuNodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete external besu node o k response has a 3xx status code
func (o *DeleteExternalBesuNodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete external besu node o k response has a 4xx status code
func (o *DeleteExternalBesuNodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete external besu node o k response has a 5xx status code
func (o *DeleteExternalBesuNodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete external besu node o k response a status code equal to that given
func (o *DeleteExternalBesuNodeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete external besu node o k response
func (o *DeleteExternalBesuNodeOK) Code() int {
	return 200
}

func (o *DeleteExternalBesuNodeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/besu-nodes/{id}][%d] deleteExternalBesuNodeOK %s", 200, payload)
}

func (o *DeleteExternalBesuNodeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/besu-nodes/{id}][%d] deleteExternalBesuNodeOK %s", 200, payload)
}

func (o *DeleteExternalBesuNodeOK) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteExternalBesuNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteExternalBesuNodeBadRequest creates a DeleteExternalBesuNodeBadRequest with default headers values
func NewDeleteExternalBesuNodeBadRequest() *DeleteExternalBesuNodeBadRequest {
	return &DeleteExternalBesuNodeBadRequest{}
}

/*
DeleteExternalBesuNodeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteExternalBesuNodeBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete external besu node bad request response has a 2xx status code
func (o *DeleteExternalBesuNodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete external besu node bad request response has a 3xx status code
func (o *DeleteExternalBesuNodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete external besu node bad request response has a 4xx status code
func (o *DeleteExternalBesuNodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete external besu node bad request response has a 5xx status code
func (o *DeleteExternalBesuNodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete external besu node bad request response a status code equal to that given
func (o *DeleteExternalBesuNodeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete external besu node bad request response
func (o *DeleteExternalBesuNodeBadRequest) Code() int {
	return 400
}

func (o *DeleteExternalBesuNodeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/besu-nodes/{id}][%d] deleteExternalBesuNodeBadRequest %s", 400, payload)
}

func (o *DeleteExternalBesuNodeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/besu-nodes/{id}][%d] deleteExternalBesuNodeBadRequest %s", 400, payload)
}

func (o *DeleteExternalBesuNodeBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteExternalBesuNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteExternalBesuNodeNotFound creates a DeleteExternalBesuNodeNotFound with default headers values
func NewDeleteExternalBesuNodeNotFound() *DeleteExternalBesuNodeNotFound {
	return &DeleteExternalBesuNodeNotFound{}
}

/*
DeleteExternalBesuNodeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteExternalBesuNodeNotFound struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete external besu node not found response has a 2xx status code
func (o *DeleteExternalBesuNodeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete external besu node not found response has a 3xx status code
func (o *DeleteExternalBesuNodeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete external besu node not found response has a 4xx status code
func (o *DeleteExternalBesuNodeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete external besu node not found response has a 5xx status code
func (o *DeleteExternalBesuNodeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete external besu node not found response a status code equal to that given
func (o *DeleteExternalBesuNodeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete external besu node not found response
func (o *DeleteExternalBesuNodeNotFound) Code() int {
	return 404
}

func (o *DeleteExternalBesuNodeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/besu-nodes/{id}][%d] deleteExternalBesuNodeNotFound %s", 404, payload)
}

func (o *DeleteExternalBesuNodeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/besu-nodes/{id}][%d] deleteExternalBesuNodeNotFound %s", 404, payload)
}

func (o *DeleteExternalBesuNodeNotFound) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteExternalBesuNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteExternalBesuNodeInternalServerError creates a DeleteExternalBesuNodeInternalServerError with default headers values
func NewDeleteExternalBesuNodeInternalServerError() *DeleteExternalBesuNodeInternalServerError {
	return &DeleteExternalBesuNodeInternalServerError{}
}

/*
DeleteExternalBesuNodeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteExternalBesuNodeInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete external besu node internal server error response has a 2xx status code
func (o *DeleteExternalBesuNodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete external besu node internal server error response has a 3xx status code
func (o *DeleteExternalBesuNodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete external besu node internal server error response has a 4xx status code
func (o *DeleteExternalBesuNodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete external besu node internal server error response has a 5xx status code
func (o *DeleteExternalBesuNodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete external besu node internal server error response a status code equal to that given
func (o *DeleteExternalBesuNodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete external besu node internal server error response
func (o *DeleteExternalBesuNodeInternalServerError) Code() int {
	return 500
}

func (o *DeleteExternalBesuNodeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/besu-nodes/{id}][%d] deleteExternalBesuNodeInternalServerError %s", 500, payload)
}

func (o *DeleteExternalBesuNodeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /external-nodes/besu-nodes/{id}][%d] deleteExternalBesuNodeInternalServerError %s", 500, payload)
}

func (o *DeleteExternalBesuNodeInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteExternalBesuNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
