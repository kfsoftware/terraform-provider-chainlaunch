// Code generated by go-swagger; DO NOT EDIT.

package pro

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetSharedNetworkReader is a Reader for the GetSharedNetwork structure.
type GetSharedNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSharedNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetSharedNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSharedNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /pro/shared-networks/{networkId}] getSharedNetwork", response, response.Code())
	}
}

// NewGetSharedNetworkOK creates a GetSharedNetworkOK with default headers values
func NewGetSharedNetworkOK() *GetSharedNetworkOK {
	return &GetSharedNetworkOK{}
}

/*
GetSharedNetworkOK describes a response with status code 200, with default header values.

OK
*/
type GetSharedNetworkOK struct {
	Payload *models.ProSharedNetworkDetailResponse
}

// IsSuccess returns true when this get shared network o k response has a 2xx status code
func (o *GetSharedNetworkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get shared network o k response has a 3xx status code
func (o *GetSharedNetworkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get shared network o k response has a 4xx status code
func (o *GetSharedNetworkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get shared network o k response has a 5xx status code
func (o *GetSharedNetworkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get shared network o k response a status code equal to that given
func (o *GetSharedNetworkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get shared network o k response
func (o *GetSharedNetworkOK) Code() int {
	return 200
}

func (o *GetSharedNetworkOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/shared-networks/{networkId}][%d] getSharedNetworkOK %s", 200, payload)
}

func (o *GetSharedNetworkOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/shared-networks/{networkId}][%d] getSharedNetworkOK %s", 200, payload)
}

func (o *GetSharedNetworkOK) GetPayload() *models.ProSharedNetworkDetailResponse {
	return o.Payload
}

func (o *GetSharedNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProSharedNetworkDetailResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetSharedNetworkNotFound creates a GetSharedNetworkNotFound with default headers values
func NewGetSharedNetworkNotFound() *GetSharedNetworkNotFound {
	return &GetSharedNetworkNotFound{}
}

/*
GetSharedNetworkNotFound describes a response with status code 404, with default header values.

not found
*/
type GetSharedNetworkNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get shared network not found response has a 2xx status code
func (o *GetSharedNetworkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get shared network not found response has a 3xx status code
func (o *GetSharedNetworkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get shared network not found response has a 4xx status code
func (o *GetSharedNetworkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get shared network not found response has a 5xx status code
func (o *GetSharedNetworkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get shared network not found response a status code equal to that given
func (o *GetSharedNetworkNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get shared network not found response
func (o *GetSharedNetworkNotFound) Code() int {
	return 404
}

func (o *GetSharedNetworkNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/shared-networks/{networkId}][%d] getSharedNetworkNotFound %s", 404, payload)
}

func (o *GetSharedNetworkNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/shared-networks/{networkId}][%d] getSharedNetworkNotFound %s", 404, payload)
}

func (o *GetSharedNetworkNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetSharedNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
