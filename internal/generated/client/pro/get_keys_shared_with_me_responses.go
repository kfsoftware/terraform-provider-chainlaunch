// Code generated by go-swagger; DO NOT EDIT.

package pro

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetKeysSharedWithMeReader is a Reader for the GetKeysSharedWithMe structure.
type GetKeysSharedWithMeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKeysSharedWithMeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetKeysSharedWithMeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKeysSharedWithMeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKeysSharedWithMeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /pro/keys/shared-with-me] getKeysSharedWithMe", response, response.Code())
	}
}

// NewGetKeysSharedWithMeOK creates a GetKeysSharedWithMeOK with default headers values
func NewGetKeysSharedWithMeOK() *GetKeysSharedWithMeOK {
	return &GetKeysSharedWithMeOK{}
}

/*
GetKeysSharedWithMeOK describes a response with status code 200, with default header values.

OK
*/
type GetKeysSharedWithMeOK struct {
	Payload *models.ProGetKeysSharedWithMeResponse
}

// IsSuccess returns true when this get keys shared with me o k response has a 2xx status code
func (o *GetKeysSharedWithMeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get keys shared with me o k response has a 3xx status code
func (o *GetKeysSharedWithMeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get keys shared with me o k response has a 4xx status code
func (o *GetKeysSharedWithMeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get keys shared with me o k response has a 5xx status code
func (o *GetKeysSharedWithMeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get keys shared with me o k response a status code equal to that given
func (o *GetKeysSharedWithMeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get keys shared with me o k response
func (o *GetKeysSharedWithMeOK) Code() int {
	return 200
}

func (o *GetKeysSharedWithMeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/keys/shared-with-me][%d] getKeysSharedWithMeOK %s", 200, payload)
}

func (o *GetKeysSharedWithMeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/keys/shared-with-me][%d] getKeysSharedWithMeOK %s", 200, payload)
}

func (o *GetKeysSharedWithMeOK) GetPayload() *models.ProGetKeysSharedWithMeResponse {
	return o.Payload
}

func (o *GetKeysSharedWithMeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProGetKeysSharedWithMeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetKeysSharedWithMeBadRequest creates a GetKeysSharedWithMeBadRequest with default headers values
func NewGetKeysSharedWithMeBadRequest() *GetKeysSharedWithMeBadRequest {
	return &GetKeysSharedWithMeBadRequest{}
}

/*
GetKeysSharedWithMeBadRequest describes a response with status code 400, with default header values.

invalid request parameters
*/
type GetKeysSharedWithMeBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get keys shared with me bad request response has a 2xx status code
func (o *GetKeysSharedWithMeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get keys shared with me bad request response has a 3xx status code
func (o *GetKeysSharedWithMeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get keys shared with me bad request response has a 4xx status code
func (o *GetKeysSharedWithMeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get keys shared with me bad request response has a 5xx status code
func (o *GetKeysSharedWithMeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get keys shared with me bad request response a status code equal to that given
func (o *GetKeysSharedWithMeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get keys shared with me bad request response
func (o *GetKeysSharedWithMeBadRequest) Code() int {
	return 400
}

func (o *GetKeysSharedWithMeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/keys/shared-with-me][%d] getKeysSharedWithMeBadRequest %s", 400, payload)
}

func (o *GetKeysSharedWithMeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/keys/shared-with-me][%d] getKeysSharedWithMeBadRequest %s", 400, payload)
}

func (o *GetKeysSharedWithMeBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetKeysSharedWithMeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetKeysSharedWithMeInternalServerError creates a GetKeysSharedWithMeInternalServerError with default headers values
func NewGetKeysSharedWithMeInternalServerError() *GetKeysSharedWithMeInternalServerError {
	return &GetKeysSharedWithMeInternalServerError{}
}

/*
GetKeysSharedWithMeInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetKeysSharedWithMeInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get keys shared with me internal server error response has a 2xx status code
func (o *GetKeysSharedWithMeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get keys shared with me internal server error response has a 3xx status code
func (o *GetKeysSharedWithMeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get keys shared with me internal server error response has a 4xx status code
func (o *GetKeysSharedWithMeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get keys shared with me internal server error response has a 5xx status code
func (o *GetKeysSharedWithMeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get keys shared with me internal server error response a status code equal to that given
func (o *GetKeysSharedWithMeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get keys shared with me internal server error response
func (o *GetKeysSharedWithMeInternalServerError) Code() int {
	return 500
}

func (o *GetKeysSharedWithMeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/keys/shared-with-me][%d] getKeysSharedWithMeInternalServerError %s", 500, payload)
}

func (o *GetKeysSharedWithMeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/keys/shared-with-me][%d] getKeysSharedWithMeInternalServerError %s", 500, payload)
}

func (o *GetKeysSharedWithMeInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetKeysSharedWithMeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
