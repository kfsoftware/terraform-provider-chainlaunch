// Code generated by go-swagger; DO NOT EDIT.

package pro

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ReceiveConfigUpdateShareReader is a Reader for the ReceiveConfigUpdateShare structure.
type ReceiveConfigUpdateShareReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReceiveConfigUpdateShareReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewReceiveConfigUpdateShareOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReceiveConfigUpdateShareBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReceiveConfigUpdateShareInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /pro/receive/config-update] receiveConfigUpdateShare", response, response.Code())
	}
}

// NewReceiveConfigUpdateShareOK creates a ReceiveConfigUpdateShareOK with default headers values
func NewReceiveConfigUpdateShareOK() *ReceiveConfigUpdateShareOK {
	return &ReceiveConfigUpdateShareOK{}
}

/*
ReceiveConfigUpdateShareOK describes a response with status code 200, with default header values.

OK
*/
type ReceiveConfigUpdateShareOK struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this receive config update share o k response has a 2xx status code
func (o *ReceiveConfigUpdateShareOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this receive config update share o k response has a 3xx status code
func (o *ReceiveConfigUpdateShareOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this receive config update share o k response has a 4xx status code
func (o *ReceiveConfigUpdateShareOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this receive config update share o k response has a 5xx status code
func (o *ReceiveConfigUpdateShareOK) IsServerError() bool {
	return false
}

// IsCode returns true when this receive config update share o k response a status code equal to that given
func (o *ReceiveConfigUpdateShareOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the receive config update share o k response
func (o *ReceiveConfigUpdateShareOK) Code() int {
	return 200
}

func (o *ReceiveConfigUpdateShareOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive/config-update][%d] receiveConfigUpdateShareOK %s", 200, payload)
}

func (o *ReceiveConfigUpdateShareOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive/config-update][%d] receiveConfigUpdateShareOK %s", 200, payload)
}

func (o *ReceiveConfigUpdateShareOK) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *ReceiveConfigUpdateShareOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewReceiveConfigUpdateShareBadRequest creates a ReceiveConfigUpdateShareBadRequest with default headers values
func NewReceiveConfigUpdateShareBadRequest() *ReceiveConfigUpdateShareBadRequest {
	return &ReceiveConfigUpdateShareBadRequest{}
}

/*
ReceiveConfigUpdateShareBadRequest describes a response with status code 400, with default header values.

invalid request body
*/
type ReceiveConfigUpdateShareBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this receive config update share bad request response has a 2xx status code
func (o *ReceiveConfigUpdateShareBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this receive config update share bad request response has a 3xx status code
func (o *ReceiveConfigUpdateShareBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this receive config update share bad request response has a 4xx status code
func (o *ReceiveConfigUpdateShareBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this receive config update share bad request response has a 5xx status code
func (o *ReceiveConfigUpdateShareBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this receive config update share bad request response a status code equal to that given
func (o *ReceiveConfigUpdateShareBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the receive config update share bad request response
func (o *ReceiveConfigUpdateShareBadRequest) Code() int {
	return 400
}

func (o *ReceiveConfigUpdateShareBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive/config-update][%d] receiveConfigUpdateShareBadRequest %s", 400, payload)
}

func (o *ReceiveConfigUpdateShareBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive/config-update][%d] receiveConfigUpdateShareBadRequest %s", 400, payload)
}

func (o *ReceiveConfigUpdateShareBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ReceiveConfigUpdateShareBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewReceiveConfigUpdateShareInternalServerError creates a ReceiveConfigUpdateShareInternalServerError with default headers values
func NewReceiveConfigUpdateShareInternalServerError() *ReceiveConfigUpdateShareInternalServerError {
	return &ReceiveConfigUpdateShareInternalServerError{}
}

/*
ReceiveConfigUpdateShareInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type ReceiveConfigUpdateShareInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this receive config update share internal server error response has a 2xx status code
func (o *ReceiveConfigUpdateShareInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this receive config update share internal server error response has a 3xx status code
func (o *ReceiveConfigUpdateShareInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this receive config update share internal server error response has a 4xx status code
func (o *ReceiveConfigUpdateShareInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this receive config update share internal server error response has a 5xx status code
func (o *ReceiveConfigUpdateShareInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this receive config update share internal server error response a status code equal to that given
func (o *ReceiveConfigUpdateShareInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the receive config update share internal server error response
func (o *ReceiveConfigUpdateShareInternalServerError) Code() int {
	return 500
}

func (o *ReceiveConfigUpdateShareInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive/config-update][%d] receiveConfigUpdateShareInternalServerError %s", 500, payload)
}

func (o *ReceiveConfigUpdateShareInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive/config-update][%d] receiveConfigUpdateShareInternalServerError %s", 500, payload)
}

func (o *ReceiveConfigUpdateShareInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ReceiveConfigUpdateShareInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
