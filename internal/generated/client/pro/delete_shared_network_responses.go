// Code generated by go-swagger; DO NOT EDIT.

package pro

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DeleteSharedNetworkReader is a Reader for the DeleteSharedNetwork structure.
type DeleteSharedNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSharedNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteSharedNetworkNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSharedNetworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSharedNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSharedNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /pro/shared-networks/{shareId}] deleteSharedNetwork", response, response.Code())
	}
}

// NewDeleteSharedNetworkNoContent creates a DeleteSharedNetworkNoContent with default headers values
func NewDeleteSharedNetworkNoContent() *DeleteSharedNetworkNoContent {
	return &DeleteSharedNetworkNoContent{}
}

/*
DeleteSharedNetworkNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteSharedNetworkNoContent struct {
}

// IsSuccess returns true when this delete shared network no content response has a 2xx status code
func (o *DeleteSharedNetworkNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete shared network no content response has a 3xx status code
func (o *DeleteSharedNetworkNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete shared network no content response has a 4xx status code
func (o *DeleteSharedNetworkNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete shared network no content response has a 5xx status code
func (o *DeleteSharedNetworkNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete shared network no content response a status code equal to that given
func (o *DeleteSharedNetworkNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete shared network no content response
func (o *DeleteSharedNetworkNoContent) Code() int {
	return 204
}

func (o *DeleteSharedNetworkNoContent) Error() string {
	return fmt.Sprintf("[DELETE /pro/shared-networks/{shareId}][%d] deleteSharedNetworkNoContent", 204)
}

func (o *DeleteSharedNetworkNoContent) String() string {
	return fmt.Sprintf("[DELETE /pro/shared-networks/{shareId}][%d] deleteSharedNetworkNoContent", 204)
}

func (o *DeleteSharedNetworkNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSharedNetworkBadRequest creates a DeleteSharedNetworkBadRequest with default headers values
func NewDeleteSharedNetworkBadRequest() *DeleteSharedNetworkBadRequest {
	return &DeleteSharedNetworkBadRequest{}
}

/*
DeleteSharedNetworkBadRequest describes a response with status code 400, with default header values.

invalid share ID
*/
type DeleteSharedNetworkBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete shared network bad request response has a 2xx status code
func (o *DeleteSharedNetworkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete shared network bad request response has a 3xx status code
func (o *DeleteSharedNetworkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete shared network bad request response has a 4xx status code
func (o *DeleteSharedNetworkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete shared network bad request response has a 5xx status code
func (o *DeleteSharedNetworkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete shared network bad request response a status code equal to that given
func (o *DeleteSharedNetworkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete shared network bad request response
func (o *DeleteSharedNetworkBadRequest) Code() int {
	return 400
}

func (o *DeleteSharedNetworkBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /pro/shared-networks/{shareId}][%d] deleteSharedNetworkBadRequest %s", 400, payload)
}

func (o *DeleteSharedNetworkBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /pro/shared-networks/{shareId}][%d] deleteSharedNetworkBadRequest %s", 400, payload)
}

func (o *DeleteSharedNetworkBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteSharedNetworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteSharedNetworkNotFound creates a DeleteSharedNetworkNotFound with default headers values
func NewDeleteSharedNetworkNotFound() *DeleteSharedNetworkNotFound {
	return &DeleteSharedNetworkNotFound{}
}

/*
DeleteSharedNetworkNotFound describes a response with status code 404, with default header values.

share not found
*/
type DeleteSharedNetworkNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete shared network not found response has a 2xx status code
func (o *DeleteSharedNetworkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete shared network not found response has a 3xx status code
func (o *DeleteSharedNetworkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete shared network not found response has a 4xx status code
func (o *DeleteSharedNetworkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete shared network not found response has a 5xx status code
func (o *DeleteSharedNetworkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete shared network not found response a status code equal to that given
func (o *DeleteSharedNetworkNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete shared network not found response
func (o *DeleteSharedNetworkNotFound) Code() int {
	return 404
}

func (o *DeleteSharedNetworkNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /pro/shared-networks/{shareId}][%d] deleteSharedNetworkNotFound %s", 404, payload)
}

func (o *DeleteSharedNetworkNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /pro/shared-networks/{shareId}][%d] deleteSharedNetworkNotFound %s", 404, payload)
}

func (o *DeleteSharedNetworkNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteSharedNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteSharedNetworkInternalServerError creates a DeleteSharedNetworkInternalServerError with default headers values
func NewDeleteSharedNetworkInternalServerError() *DeleteSharedNetworkInternalServerError {
	return &DeleteSharedNetworkInternalServerError{}
}

/*
DeleteSharedNetworkInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type DeleteSharedNetworkInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete shared network internal server error response has a 2xx status code
func (o *DeleteSharedNetworkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete shared network internal server error response has a 3xx status code
func (o *DeleteSharedNetworkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete shared network internal server error response has a 4xx status code
func (o *DeleteSharedNetworkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete shared network internal server error response has a 5xx status code
func (o *DeleteSharedNetworkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete shared network internal server error response a status code equal to that given
func (o *DeleteSharedNetworkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete shared network internal server error response
func (o *DeleteSharedNetworkInternalServerError) Code() int {
	return 500
}

func (o *DeleteSharedNetworkInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /pro/shared-networks/{shareId}][%d] deleteSharedNetworkInternalServerError %s", 500, payload)
}

func (o *DeleteSharedNetworkInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /pro/shared-networks/{shareId}][%d] deleteSharedNetworkInternalServerError %s", 500, payload)
}

func (o *DeleteSharedNetworkInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteSharedNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
