// Code generated by go-swagger; DO NOT EDIT.

package pro

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ReceiveKeyReader is a Reader for the ReceiveKey structure.
type ReceiveKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReceiveKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewReceiveKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReceiveKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReceiveKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /pro/key/receive] receiveKey", response, response.Code())
	}
}

// NewReceiveKeyOK creates a ReceiveKeyOK with default headers values
func NewReceiveKeyOK() *ReceiveKeyOK {
	return &ReceiveKeyOK{}
}

/*
ReceiveKeyOK describes a response with status code 200, with default header values.

OK
*/
type ReceiveKeyOK struct {
	Payload *models.ProReceiveKeyResponse
}

// IsSuccess returns true when this receive key o k response has a 2xx status code
func (o *ReceiveKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this receive key o k response has a 3xx status code
func (o *ReceiveKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this receive key o k response has a 4xx status code
func (o *ReceiveKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this receive key o k response has a 5xx status code
func (o *ReceiveKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this receive key o k response a status code equal to that given
func (o *ReceiveKeyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the receive key o k response
func (o *ReceiveKeyOK) Code() int {
	return 200
}

func (o *ReceiveKeyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/key/receive][%d] receiveKeyOK %s", 200, payload)
}

func (o *ReceiveKeyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/key/receive][%d] receiveKeyOK %s", 200, payload)
}

func (o *ReceiveKeyOK) GetPayload() *models.ProReceiveKeyResponse {
	return o.Payload
}

func (o *ReceiveKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProReceiveKeyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewReceiveKeyBadRequest creates a ReceiveKeyBadRequest with default headers values
func NewReceiveKeyBadRequest() *ReceiveKeyBadRequest {
	return &ReceiveKeyBadRequest{}
}

/*
ReceiveKeyBadRequest describes a response with status code 400, with default header values.

invalid request body
*/
type ReceiveKeyBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this receive key bad request response has a 2xx status code
func (o *ReceiveKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this receive key bad request response has a 3xx status code
func (o *ReceiveKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this receive key bad request response has a 4xx status code
func (o *ReceiveKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this receive key bad request response has a 5xx status code
func (o *ReceiveKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this receive key bad request response a status code equal to that given
func (o *ReceiveKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the receive key bad request response
func (o *ReceiveKeyBadRequest) Code() int {
	return 400
}

func (o *ReceiveKeyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/key/receive][%d] receiveKeyBadRequest %s", 400, payload)
}

func (o *ReceiveKeyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/key/receive][%d] receiveKeyBadRequest %s", 400, payload)
}

func (o *ReceiveKeyBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ReceiveKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewReceiveKeyInternalServerError creates a ReceiveKeyInternalServerError with default headers values
func NewReceiveKeyInternalServerError() *ReceiveKeyInternalServerError {
	return &ReceiveKeyInternalServerError{}
}

/*
ReceiveKeyInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type ReceiveKeyInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this receive key internal server error response has a 2xx status code
func (o *ReceiveKeyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this receive key internal server error response has a 3xx status code
func (o *ReceiveKeyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this receive key internal server error response has a 4xx status code
func (o *ReceiveKeyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this receive key internal server error response has a 5xx status code
func (o *ReceiveKeyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this receive key internal server error response a status code equal to that given
func (o *ReceiveKeyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the receive key internal server error response
func (o *ReceiveKeyInternalServerError) Code() int {
	return 500
}

func (o *ReceiveKeyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/key/receive][%d] receiveKeyInternalServerError %s", 500, payload)
}

func (o *ReceiveKeyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/key/receive][%d] receiveKeyInternalServerError %s", 500, payload)
}

func (o *ReceiveKeyInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ReceiveKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
