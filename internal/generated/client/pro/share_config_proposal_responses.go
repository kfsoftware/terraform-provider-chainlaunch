// Code generated by go-swagger; DO NOT EDIT.

package pro

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ShareConfigProposalReader is a Reader for the ShareConfigProposal structure.
type ShareConfigProposalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShareConfigProposalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 201:
		result := NewShareConfigProposalCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewShareConfigProposalBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewShareConfigProposalInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /pro/sharing/config-proposal] shareConfigProposal", response, response.Code())
	}
}

// NewShareConfigProposalCreated creates a ShareConfigProposalCreated with default headers values
func NewShareConfigProposalCreated() *ShareConfigProposalCreated {
	return &ShareConfigProposalCreated{}
}

/*
ShareConfigProposalCreated describes a response with status code 201, with default header values.

Created
*/
type ShareConfigProposalCreated struct {
	Payload *models.ProConfigProposalShareResponse
}

// IsSuccess returns true when this share config proposal created response has a 2xx status code
func (o *ShareConfigProposalCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this share config proposal created response has a 3xx status code
func (o *ShareConfigProposalCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share config proposal created response has a 4xx status code
func (o *ShareConfigProposalCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this share config proposal created response has a 5xx status code
func (o *ShareConfigProposalCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this share config proposal created response a status code equal to that given
func (o *ShareConfigProposalCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the share config proposal created response
func (o *ShareConfigProposalCreated) Code() int {
	return 201
}

func (o *ShareConfigProposalCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/config-proposal][%d] shareConfigProposalCreated %s", 201, payload)
}

func (o *ShareConfigProposalCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/config-proposal][%d] shareConfigProposalCreated %s", 201, payload)
}

func (o *ShareConfigProposalCreated) GetPayload() *models.ProConfigProposalShareResponse {
	return o.Payload
}

func (o *ShareConfigProposalCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProConfigProposalShareResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewShareConfigProposalBadRequest creates a ShareConfigProposalBadRequest with default headers values
func NewShareConfigProposalBadRequest() *ShareConfigProposalBadRequest {
	return &ShareConfigProposalBadRequest{}
}

/*
ShareConfigProposalBadRequest describes a response with status code 400, with default header values.

invalid request body
*/
type ShareConfigProposalBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this share config proposal bad request response has a 2xx status code
func (o *ShareConfigProposalBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share config proposal bad request response has a 3xx status code
func (o *ShareConfigProposalBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share config proposal bad request response has a 4xx status code
func (o *ShareConfigProposalBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this share config proposal bad request response has a 5xx status code
func (o *ShareConfigProposalBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this share config proposal bad request response a status code equal to that given
func (o *ShareConfigProposalBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the share config proposal bad request response
func (o *ShareConfigProposalBadRequest) Code() int {
	return 400
}

func (o *ShareConfigProposalBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/config-proposal][%d] shareConfigProposalBadRequest %s", 400, payload)
}

func (o *ShareConfigProposalBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/config-proposal][%d] shareConfigProposalBadRequest %s", 400, payload)
}

func (o *ShareConfigProposalBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ShareConfigProposalBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewShareConfigProposalInternalServerError creates a ShareConfigProposalInternalServerError with default headers values
func NewShareConfigProposalInternalServerError() *ShareConfigProposalInternalServerError {
	return &ShareConfigProposalInternalServerError{}
}

/*
ShareConfigProposalInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type ShareConfigProposalInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this share config proposal internal server error response has a 2xx status code
func (o *ShareConfigProposalInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share config proposal internal server error response has a 3xx status code
func (o *ShareConfigProposalInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share config proposal internal server error response has a 4xx status code
func (o *ShareConfigProposalInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this share config proposal internal server error response has a 5xx status code
func (o *ShareConfigProposalInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this share config proposal internal server error response a status code equal to that given
func (o *ShareConfigProposalInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the share config proposal internal server error response
func (o *ShareConfigProposalInternalServerError) Code() int {
	return 500
}

func (o *ShareConfigProposalInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/config-proposal][%d] shareConfigProposalInternalServerError %s", 500, payload)
}

func (o *ShareConfigProposalInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/config-proposal][%d] shareConfigProposalInternalServerError %s", 500, payload)
}

func (o *ShareConfigProposalInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ShareConfigProposalInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
