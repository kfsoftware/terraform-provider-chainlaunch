// Code generated by go-swagger; DO NOT EDIT.

package pro

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetSharedChaincodeReader is a Reader for the GetSharedChaincode structure.
type GetSharedChaincodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSharedChaincodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetSharedChaincodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSharedChaincodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /pro/shared-chaincodes/{chaincodeId}] getSharedChaincode", response, response.Code())
	}
}

// NewGetSharedChaincodeOK creates a GetSharedChaincodeOK with default headers values
func NewGetSharedChaincodeOK() *GetSharedChaincodeOK {
	return &GetSharedChaincodeOK{}
}

/*
GetSharedChaincodeOK describes a response with status code 200, with default header values.

OK
*/
type GetSharedChaincodeOK struct {
	Payload *models.ProSharedChaincodeDetailResponse
}

// IsSuccess returns true when this get shared chaincode o k response has a 2xx status code
func (o *GetSharedChaincodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get shared chaincode o k response has a 3xx status code
func (o *GetSharedChaincodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get shared chaincode o k response has a 4xx status code
func (o *GetSharedChaincodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get shared chaincode o k response has a 5xx status code
func (o *GetSharedChaincodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get shared chaincode o k response a status code equal to that given
func (o *GetSharedChaincodeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get shared chaincode o k response
func (o *GetSharedChaincodeOK) Code() int {
	return 200
}

func (o *GetSharedChaincodeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/shared-chaincodes/{chaincodeId}][%d] getSharedChaincodeOK %s", 200, payload)
}

func (o *GetSharedChaincodeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/shared-chaincodes/{chaincodeId}][%d] getSharedChaincodeOK %s", 200, payload)
}

func (o *GetSharedChaincodeOK) GetPayload() *models.ProSharedChaincodeDetailResponse {
	return o.Payload
}

func (o *GetSharedChaincodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProSharedChaincodeDetailResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetSharedChaincodeNotFound creates a GetSharedChaincodeNotFound with default headers values
func NewGetSharedChaincodeNotFound() *GetSharedChaincodeNotFound {
	return &GetSharedChaincodeNotFound{}
}

/*
GetSharedChaincodeNotFound describes a response with status code 404, with default header values.

share not found
*/
type GetSharedChaincodeNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get shared chaincode not found response has a 2xx status code
func (o *GetSharedChaincodeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get shared chaincode not found response has a 3xx status code
func (o *GetSharedChaincodeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get shared chaincode not found response has a 4xx status code
func (o *GetSharedChaincodeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get shared chaincode not found response has a 5xx status code
func (o *GetSharedChaincodeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get shared chaincode not found response a status code equal to that given
func (o *GetSharedChaincodeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get shared chaincode not found response
func (o *GetSharedChaincodeNotFound) Code() int {
	return 404
}

func (o *GetSharedChaincodeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/shared-chaincodes/{chaincodeId}][%d] getSharedChaincodeNotFound %s", 404, payload)
}

func (o *GetSharedChaincodeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/shared-chaincodes/{chaincodeId}][%d] getSharedChaincodeNotFound %s", 404, payload)
}

func (o *GetSharedChaincodeNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetSharedChaincodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
