// Code generated by go-swagger; DO NOT EDIT.

package pro

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ShareBesuNetworkReader is a Reader for the ShareBesuNetwork structure.
type ShareBesuNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShareBesuNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 201:
		result := NewShareBesuNetworkCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewShareBesuNetworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewShareBesuNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /pro/sharing/besu-network] shareBesuNetwork", response, response.Code())
	}
}

// NewShareBesuNetworkCreated creates a ShareBesuNetworkCreated with default headers values
func NewShareBesuNetworkCreated() *ShareBesuNetworkCreated {
	return &ShareBesuNetworkCreated{}
}

/*
ShareBesuNetworkCreated describes a response with status code 201, with default header values.

Created
*/
type ShareBesuNetworkCreated struct {
	Payload *models.ProNetworkShareResponse
}

// IsSuccess returns true when this share besu network created response has a 2xx status code
func (o *ShareBesuNetworkCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this share besu network created response has a 3xx status code
func (o *ShareBesuNetworkCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share besu network created response has a 4xx status code
func (o *ShareBesuNetworkCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this share besu network created response has a 5xx status code
func (o *ShareBesuNetworkCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this share besu network created response a status code equal to that given
func (o *ShareBesuNetworkCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the share besu network created response
func (o *ShareBesuNetworkCreated) Code() int {
	return 201
}

func (o *ShareBesuNetworkCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/besu-network][%d] shareBesuNetworkCreated %s", 201, payload)
}

func (o *ShareBesuNetworkCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/besu-network][%d] shareBesuNetworkCreated %s", 201, payload)
}

func (o *ShareBesuNetworkCreated) GetPayload() *models.ProNetworkShareResponse {
	return o.Payload
}

func (o *ShareBesuNetworkCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProNetworkShareResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewShareBesuNetworkBadRequest creates a ShareBesuNetworkBadRequest with default headers values
func NewShareBesuNetworkBadRequest() *ShareBesuNetworkBadRequest {
	return &ShareBesuNetworkBadRequest{}
}

/*
ShareBesuNetworkBadRequest describes a response with status code 400, with default header values.

invalid request body
*/
type ShareBesuNetworkBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this share besu network bad request response has a 2xx status code
func (o *ShareBesuNetworkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share besu network bad request response has a 3xx status code
func (o *ShareBesuNetworkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share besu network bad request response has a 4xx status code
func (o *ShareBesuNetworkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this share besu network bad request response has a 5xx status code
func (o *ShareBesuNetworkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this share besu network bad request response a status code equal to that given
func (o *ShareBesuNetworkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the share besu network bad request response
func (o *ShareBesuNetworkBadRequest) Code() int {
	return 400
}

func (o *ShareBesuNetworkBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/besu-network][%d] shareBesuNetworkBadRequest %s", 400, payload)
}

func (o *ShareBesuNetworkBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/besu-network][%d] shareBesuNetworkBadRequest %s", 400, payload)
}

func (o *ShareBesuNetworkBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ShareBesuNetworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewShareBesuNetworkInternalServerError creates a ShareBesuNetworkInternalServerError with default headers values
func NewShareBesuNetworkInternalServerError() *ShareBesuNetworkInternalServerError {
	return &ShareBesuNetworkInternalServerError{}
}

/*
ShareBesuNetworkInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type ShareBesuNetworkInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this share besu network internal server error response has a 2xx status code
func (o *ShareBesuNetworkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share besu network internal server error response has a 3xx status code
func (o *ShareBesuNetworkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share besu network internal server error response has a 4xx status code
func (o *ShareBesuNetworkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this share besu network internal server error response has a 5xx status code
func (o *ShareBesuNetworkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this share besu network internal server error response a status code equal to that given
func (o *ShareBesuNetworkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the share besu network internal server error response
func (o *ShareBesuNetworkInternalServerError) Code() int {
	return 500
}

func (o *ShareBesuNetworkInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/besu-network][%d] shareBesuNetworkInternalServerError %s", 500, payload)
}

func (o *ShareBesuNetworkInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/sharing/besu-network][%d] shareBesuNetworkInternalServerError %s", 500, payload)
}

func (o *ShareBesuNetworkInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ShareBesuNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
