// Code generated by go-swagger; DO NOT EDIT.

package user_notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DeleteUserNotificationsIDReader is a Reader for the DeleteUserNotificationsID structure.
type DeleteUserNotificationsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserNotificationsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUserNotificationsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUserNotificationsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUserNotificationsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /user-notifications/{id}] DeleteUserNotificationsID", response, response.Code())
	}
}

// NewDeleteUserNotificationsIDOK creates a DeleteUserNotificationsIDOK with default headers values
func NewDeleteUserNotificationsIDOK() *DeleteUserNotificationsIDOK {
	return &DeleteUserNotificationsIDOK{}
}

/*
DeleteUserNotificationsIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteUserNotificationsIDOK struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this delete user notifications Id o k response has a 2xx status code
func (o *DeleteUserNotificationsIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete user notifications Id o k response has a 3xx status code
func (o *DeleteUserNotificationsIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user notifications Id o k response has a 4xx status code
func (o *DeleteUserNotificationsIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user notifications Id o k response has a 5xx status code
func (o *DeleteUserNotificationsIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user notifications Id o k response a status code equal to that given
func (o *DeleteUserNotificationsIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete user notifications Id o k response
func (o *DeleteUserNotificationsIDOK) Code() int {
	return 200
}

func (o *DeleteUserNotificationsIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /user-notifications/{id}][%d] deleteUserNotificationsIdOK %s", 200, payload)
}

func (o *DeleteUserNotificationsIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /user-notifications/{id}][%d] deleteUserNotificationsIdOK %s", 200, payload)
}

func (o *DeleteUserNotificationsIDOK) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeleteUserNotificationsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteUserNotificationsIDBadRequest creates a DeleteUserNotificationsIDBadRequest with default headers values
func NewDeleteUserNotificationsIDBadRequest() *DeleteUserNotificationsIDBadRequest {
	return &DeleteUserNotificationsIDBadRequest{}
}

/*
DeleteUserNotificationsIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteUserNotificationsIDBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete user notifications Id bad request response has a 2xx status code
func (o *DeleteUserNotificationsIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user notifications Id bad request response has a 3xx status code
func (o *DeleteUserNotificationsIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user notifications Id bad request response has a 4xx status code
func (o *DeleteUserNotificationsIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user notifications Id bad request response has a 5xx status code
func (o *DeleteUserNotificationsIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user notifications Id bad request response a status code equal to that given
func (o *DeleteUserNotificationsIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete user notifications Id bad request response
func (o *DeleteUserNotificationsIDBadRequest) Code() int {
	return 400
}

func (o *DeleteUserNotificationsIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /user-notifications/{id}][%d] deleteUserNotificationsIdBadRequest %s", 400, payload)
}

func (o *DeleteUserNotificationsIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /user-notifications/{id}][%d] deleteUserNotificationsIdBadRequest %s", 400, payload)
}

func (o *DeleteUserNotificationsIDBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteUserNotificationsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteUserNotificationsIDInternalServerError creates a DeleteUserNotificationsIDInternalServerError with default headers values
func NewDeleteUserNotificationsIDInternalServerError() *DeleteUserNotificationsIDInternalServerError {
	return &DeleteUserNotificationsIDInternalServerError{}
}

/*
DeleteUserNotificationsIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteUserNotificationsIDInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete user notifications Id internal server error response has a 2xx status code
func (o *DeleteUserNotificationsIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user notifications Id internal server error response has a 3xx status code
func (o *DeleteUserNotificationsIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user notifications Id internal server error response has a 4xx status code
func (o *DeleteUserNotificationsIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user notifications Id internal server error response has a 5xx status code
func (o *DeleteUserNotificationsIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user notifications Id internal server error response a status code equal to that given
func (o *DeleteUserNotificationsIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete user notifications Id internal server error response
func (o *DeleteUserNotificationsIDInternalServerError) Code() int {
	return 500
}

func (o *DeleteUserNotificationsIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /user-notifications/{id}][%d] deleteUserNotificationsIdInternalServerError %s", 500, payload)
}

func (o *DeleteUserNotificationsIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /user-notifications/{id}][%d] deleteUserNotificationsIdInternalServerError %s", 500, payload)
}

func (o *DeleteUserNotificationsIDInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteUserNotificationsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
