// Code generated by go-swagger; DO NOT EDIT.

package user_notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetUserNotificationsUnreadCountReader is a Reader for the GetUserNotificationsUnreadCount structure.
type GetUserNotificationsUnreadCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserNotificationsUnreadCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserNotificationsUnreadCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetUserNotificationsUnreadCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /user-notifications/unread/count] GetUserNotificationsUnreadCount", response, response.Code())
	}
}

// NewGetUserNotificationsUnreadCountOK creates a GetUserNotificationsUnreadCountOK with default headers values
func NewGetUserNotificationsUnreadCountOK() *GetUserNotificationsUnreadCountOK {
	return &GetUserNotificationsUnreadCountOK{}
}

/*
GetUserNotificationsUnreadCountOK describes a response with status code 200, with default header values.

OK
*/
type GetUserNotificationsUnreadCountOK struct {
	Payload *GetUserNotificationsUnreadCountOKBody
}

// IsSuccess returns true when this get user notifications unread count o k response has a 2xx status code
func (o *GetUserNotificationsUnreadCountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user notifications unread count o k response has a 3xx status code
func (o *GetUserNotificationsUnreadCountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user notifications unread count o k response has a 4xx status code
func (o *GetUserNotificationsUnreadCountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user notifications unread count o k response has a 5xx status code
func (o *GetUserNotificationsUnreadCountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user notifications unread count o k response a status code equal to that given
func (o *GetUserNotificationsUnreadCountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user notifications unread count o k response
func (o *GetUserNotificationsUnreadCountOK) Code() int {
	return 200
}

func (o *GetUserNotificationsUnreadCountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user-notifications/unread/count][%d] getUserNotificationsUnreadCountOK %s", 200, payload)
}

func (o *GetUserNotificationsUnreadCountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user-notifications/unread/count][%d] getUserNotificationsUnreadCountOK %s", 200, payload)
}

func (o *GetUserNotificationsUnreadCountOK) GetPayload() *GetUserNotificationsUnreadCountOKBody {
	return o.Payload
}

func (o *GetUserNotificationsUnreadCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserNotificationsUnreadCountOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetUserNotificationsUnreadCountInternalServerError creates a GetUserNotificationsUnreadCountInternalServerError with default headers values
func NewGetUserNotificationsUnreadCountInternalServerError() *GetUserNotificationsUnreadCountInternalServerError {
	return &GetUserNotificationsUnreadCountInternalServerError{}
}

/*
GetUserNotificationsUnreadCountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUserNotificationsUnreadCountInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get user notifications unread count internal server error response has a 2xx status code
func (o *GetUserNotificationsUnreadCountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user notifications unread count internal server error response has a 3xx status code
func (o *GetUserNotificationsUnreadCountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user notifications unread count internal server error response has a 4xx status code
func (o *GetUserNotificationsUnreadCountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user notifications unread count internal server error response has a 5xx status code
func (o *GetUserNotificationsUnreadCountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user notifications unread count internal server error response a status code equal to that given
func (o *GetUserNotificationsUnreadCountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get user notifications unread count internal server error response
func (o *GetUserNotificationsUnreadCountInternalServerError) Code() int {
	return 500
}

func (o *GetUserNotificationsUnreadCountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user-notifications/unread/count][%d] getUserNotificationsUnreadCountInternalServerError %s", 500, payload)
}

func (o *GetUserNotificationsUnreadCountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user-notifications/unread/count][%d] getUserNotificationsUnreadCountInternalServerError %s", 500, payload)
}

func (o *GetUserNotificationsUnreadCountInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetUserNotificationsUnreadCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

/*
GetUserNotificationsUnreadCountOKBody get user notifications unread count o k body
swagger:model GetUserNotificationsUnreadCountOKBody
*/
type GetUserNotificationsUnreadCountOKBody struct {
	models.ResponseResponse

	// data
	Data map[string]int64 `json:"data,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetUserNotificationsUnreadCountOKBody) UnmarshalJSON(raw []byte) error {
	// GetUserNotificationsUnreadCountOKBodyAO0
	var getUserNotificationsUnreadCountOKBodyAO0 models.ResponseResponse
	if err := swag.ReadJSON(raw, &getUserNotificationsUnreadCountOKBodyAO0); err != nil {
		return err
	}
	o.ResponseResponse = getUserNotificationsUnreadCountOKBodyAO0

	// GetUserNotificationsUnreadCountOKBodyAO1
	var dataGetUserNotificationsUnreadCountOKBodyAO1 struct {
		Data map[string]int64 `json:"data,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetUserNotificationsUnreadCountOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataGetUserNotificationsUnreadCountOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetUserNotificationsUnreadCountOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	getUserNotificationsUnreadCountOKBodyAO0, err := swag.WriteJSON(o.ResponseResponse)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getUserNotificationsUnreadCountOKBodyAO0)
	var dataGetUserNotificationsUnreadCountOKBodyAO1 struct {
		Data map[string]int64 `json:"data,omitempty"`
	}

	dataGetUserNotificationsUnreadCountOKBodyAO1.Data = o.Data

	jsonDataGetUserNotificationsUnreadCountOKBodyAO1, errGetUserNotificationsUnreadCountOKBodyAO1 := swag.WriteJSON(dataGetUserNotificationsUnreadCountOKBodyAO1)
	if errGetUserNotificationsUnreadCountOKBodyAO1 != nil {
		return nil, errGetUserNotificationsUnreadCountOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetUserNotificationsUnreadCountOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get user notifications unread count o k body
func (o *GetUserNotificationsUnreadCountOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.ResponseResponse
	if err := o.ResponseResponse.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this get user notifications unread count o k body based on the context it is used
func (o *GetUserNotificationsUnreadCountOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.ResponseResponse
	if err := o.ResponseResponse.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetUserNotificationsUnreadCountOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserNotificationsUnreadCountOKBody) UnmarshalBinary(b []byte) error {
	var res GetUserNotificationsUnreadCountOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
