// Code generated by go-swagger; DO NOT EDIT.

package user_notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// PostUserNotificationsIDReadReader is a Reader for the PostUserNotificationsIDRead structure.
type PostUserNotificationsIDReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUserNotificationsIDReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewPostUserNotificationsIDReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUserNotificationsIDReadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUserNotificationsIDReadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /user-notifications/{id}/read] PostUserNotificationsIDRead", response, response.Code())
	}
}

// NewPostUserNotificationsIDReadOK creates a PostUserNotificationsIDReadOK with default headers values
func NewPostUserNotificationsIDReadOK() *PostUserNotificationsIDReadOK {
	return &PostUserNotificationsIDReadOK{}
}

/*
PostUserNotificationsIDReadOK describes a response with status code 200, with default header values.

OK
*/
type PostUserNotificationsIDReadOK struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this post user notifications Id read o k response has a 2xx status code
func (o *PostUserNotificationsIDReadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post user notifications Id read o k response has a 3xx status code
func (o *PostUserNotificationsIDReadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user notifications Id read o k response has a 4xx status code
func (o *PostUserNotificationsIDReadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user notifications Id read o k response has a 5xx status code
func (o *PostUserNotificationsIDReadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post user notifications Id read o k response a status code equal to that given
func (o *PostUserNotificationsIDReadOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post user notifications Id read o k response
func (o *PostUserNotificationsIDReadOK) Code() int {
	return 200
}

func (o *PostUserNotificationsIDReadOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/read][%d] postUserNotificationsIdReadOK %s", 200, payload)
}

func (o *PostUserNotificationsIDReadOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/read][%d] postUserNotificationsIdReadOK %s", 200, payload)
}

func (o *PostUserNotificationsIDReadOK) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *PostUserNotificationsIDReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostUserNotificationsIDReadBadRequest creates a PostUserNotificationsIDReadBadRequest with default headers values
func NewPostUserNotificationsIDReadBadRequest() *PostUserNotificationsIDReadBadRequest {
	return &PostUserNotificationsIDReadBadRequest{}
}

/*
PostUserNotificationsIDReadBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostUserNotificationsIDReadBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this post user notifications Id read bad request response has a 2xx status code
func (o *PostUserNotificationsIDReadBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user notifications Id read bad request response has a 3xx status code
func (o *PostUserNotificationsIDReadBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user notifications Id read bad request response has a 4xx status code
func (o *PostUserNotificationsIDReadBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user notifications Id read bad request response has a 5xx status code
func (o *PostUserNotificationsIDReadBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post user notifications Id read bad request response a status code equal to that given
func (o *PostUserNotificationsIDReadBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post user notifications Id read bad request response
func (o *PostUserNotificationsIDReadBadRequest) Code() int {
	return 400
}

func (o *PostUserNotificationsIDReadBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/read][%d] postUserNotificationsIdReadBadRequest %s", 400, payload)
}

func (o *PostUserNotificationsIDReadBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/read][%d] postUserNotificationsIdReadBadRequest %s", 400, payload)
}

func (o *PostUserNotificationsIDReadBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *PostUserNotificationsIDReadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostUserNotificationsIDReadInternalServerError creates a PostUserNotificationsIDReadInternalServerError with default headers values
func NewPostUserNotificationsIDReadInternalServerError() *PostUserNotificationsIDReadInternalServerError {
	return &PostUserNotificationsIDReadInternalServerError{}
}

/*
PostUserNotificationsIDReadInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostUserNotificationsIDReadInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this post user notifications Id read internal server error response has a 2xx status code
func (o *PostUserNotificationsIDReadInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user notifications Id read internal server error response has a 3xx status code
func (o *PostUserNotificationsIDReadInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user notifications Id read internal server error response has a 4xx status code
func (o *PostUserNotificationsIDReadInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user notifications Id read internal server error response has a 5xx status code
func (o *PostUserNotificationsIDReadInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post user notifications Id read internal server error response a status code equal to that given
func (o *PostUserNotificationsIDReadInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post user notifications Id read internal server error response
func (o *PostUserNotificationsIDReadInternalServerError) Code() int {
	return 500
}

func (o *PostUserNotificationsIDReadInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/read][%d] postUserNotificationsIdReadInternalServerError %s", 500, payload)
}

func (o *PostUserNotificationsIDReadInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/read][%d] postUserNotificationsIdReadInternalServerError %s", 500, payload)
}

func (o *PostUserNotificationsIDReadInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *PostUserNotificationsIDReadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
