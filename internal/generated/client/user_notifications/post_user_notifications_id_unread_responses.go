// Code generated by go-swagger; DO NOT EDIT.

package user_notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// PostUserNotificationsIDUnreadReader is a Reader for the PostUserNotificationsIDUnread structure.
type PostUserNotificationsIDUnreadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUserNotificationsIDUnreadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewPostUserNotificationsIDUnreadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUserNotificationsIDUnreadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUserNotificationsIDUnreadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /user-notifications/{id}/unread] PostUserNotificationsIDUnread", response, response.Code())
	}
}

// NewPostUserNotificationsIDUnreadOK creates a PostUserNotificationsIDUnreadOK with default headers values
func NewPostUserNotificationsIDUnreadOK() *PostUserNotificationsIDUnreadOK {
	return &PostUserNotificationsIDUnreadOK{}
}

/*
PostUserNotificationsIDUnreadOK describes a response with status code 200, with default header values.

OK
*/
type PostUserNotificationsIDUnreadOK struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this post user notifications Id unread o k response has a 2xx status code
func (o *PostUserNotificationsIDUnreadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post user notifications Id unread o k response has a 3xx status code
func (o *PostUserNotificationsIDUnreadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user notifications Id unread o k response has a 4xx status code
func (o *PostUserNotificationsIDUnreadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user notifications Id unread o k response has a 5xx status code
func (o *PostUserNotificationsIDUnreadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post user notifications Id unread o k response a status code equal to that given
func (o *PostUserNotificationsIDUnreadOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post user notifications Id unread o k response
func (o *PostUserNotificationsIDUnreadOK) Code() int {
	return 200
}

func (o *PostUserNotificationsIDUnreadOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/unread][%d] postUserNotificationsIdUnreadOK %s", 200, payload)
}

func (o *PostUserNotificationsIDUnreadOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/unread][%d] postUserNotificationsIdUnreadOK %s", 200, payload)
}

func (o *PostUserNotificationsIDUnreadOK) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *PostUserNotificationsIDUnreadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostUserNotificationsIDUnreadBadRequest creates a PostUserNotificationsIDUnreadBadRequest with default headers values
func NewPostUserNotificationsIDUnreadBadRequest() *PostUserNotificationsIDUnreadBadRequest {
	return &PostUserNotificationsIDUnreadBadRequest{}
}

/*
PostUserNotificationsIDUnreadBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostUserNotificationsIDUnreadBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this post user notifications Id unread bad request response has a 2xx status code
func (o *PostUserNotificationsIDUnreadBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user notifications Id unread bad request response has a 3xx status code
func (o *PostUserNotificationsIDUnreadBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user notifications Id unread bad request response has a 4xx status code
func (o *PostUserNotificationsIDUnreadBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user notifications Id unread bad request response has a 5xx status code
func (o *PostUserNotificationsIDUnreadBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post user notifications Id unread bad request response a status code equal to that given
func (o *PostUserNotificationsIDUnreadBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post user notifications Id unread bad request response
func (o *PostUserNotificationsIDUnreadBadRequest) Code() int {
	return 400
}

func (o *PostUserNotificationsIDUnreadBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/unread][%d] postUserNotificationsIdUnreadBadRequest %s", 400, payload)
}

func (o *PostUserNotificationsIDUnreadBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/unread][%d] postUserNotificationsIdUnreadBadRequest %s", 400, payload)
}

func (o *PostUserNotificationsIDUnreadBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *PostUserNotificationsIDUnreadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostUserNotificationsIDUnreadInternalServerError creates a PostUserNotificationsIDUnreadInternalServerError with default headers values
func NewPostUserNotificationsIDUnreadInternalServerError() *PostUserNotificationsIDUnreadInternalServerError {
	return &PostUserNotificationsIDUnreadInternalServerError{}
}

/*
PostUserNotificationsIDUnreadInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostUserNotificationsIDUnreadInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this post user notifications Id unread internal server error response has a 2xx status code
func (o *PostUserNotificationsIDUnreadInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user notifications Id unread internal server error response has a 3xx status code
func (o *PostUserNotificationsIDUnreadInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user notifications Id unread internal server error response has a 4xx status code
func (o *PostUserNotificationsIDUnreadInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user notifications Id unread internal server error response has a 5xx status code
func (o *PostUserNotificationsIDUnreadInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post user notifications Id unread internal server error response a status code equal to that given
func (o *PostUserNotificationsIDUnreadInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post user notifications Id unread internal server error response
func (o *PostUserNotificationsIDUnreadInternalServerError) Code() int {
	return 500
}

func (o *PostUserNotificationsIDUnreadInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/unread][%d] postUserNotificationsIdUnreadInternalServerError %s", 500, payload)
}

func (o *PostUserNotificationsIDUnreadInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /user-notifications/{id}/unread][%d] postUserNotificationsIdUnreadInternalServerError %s", 500, payload)
}

func (o *PostUserNotificationsIDUnreadInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *PostUserNotificationsIDUnreadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
