// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetLabelValuesParams creates a new GetLabelValuesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetLabelValuesParams() *GetLabelValuesParams {
	return &GetLabelValuesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetLabelValuesParamsWithTimeout creates a new GetLabelValuesParams object
// with the ability to set a timeout on a request.
func NewGetLabelValuesParamsWithTimeout(timeout time.Duration) *GetLabelValuesParams {
	return &GetLabelValuesParams{
		timeout: timeout,
	}
}

// NewGetLabelValuesParamsWithContext creates a new GetLabelValuesParams object
// with the ability to set a context for a request.
func NewGetLabelValuesParamsWithContext(ctx context.Context) *GetLabelValuesParams {
	return &GetLabelValuesParams{
		Context: ctx,
	}
}

// NewGetLabelValuesParamsWithHTTPClient creates a new GetLabelValuesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetLabelValuesParamsWithHTTPClient(client *http.Client) *GetLabelValuesParams {
	return &GetLabelValuesParams{
		HTTPClient: client,
	}
}

/*
GetLabelValuesParams contains all the parameters to send to the API endpoint

	for the get label values operation.

	Typically these are written to a http.Request.
*/
type GetLabelValuesParams struct {

	/* ID.

	   Node ID
	*/
	ID string

	/* Label.

	   Label name
	*/
	Label string

	/* Match.

	   Metric matches (e.g. {__name__=\
	*/
	Match []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get label values params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetLabelValuesParams) WithDefaults() *GetLabelValuesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get label values params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetLabelValuesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get label values params
func (o *GetLabelValuesParams) WithTimeout(timeout time.Duration) *GetLabelValuesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get label values params
func (o *GetLabelValuesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get label values params
func (o *GetLabelValuesParams) WithContext(ctx context.Context) *GetLabelValuesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get label values params
func (o *GetLabelValuesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get label values params
func (o *GetLabelValuesParams) WithHTTPClient(client *http.Client) *GetLabelValuesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get label values params
func (o *GetLabelValuesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get label values params
func (o *GetLabelValuesParams) WithID(id string) *GetLabelValuesParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get label values params
func (o *GetLabelValuesParams) SetID(id string) {
	o.ID = id
}

// WithLabel adds the label to the get label values params
func (o *GetLabelValuesParams) WithLabel(label string) *GetLabelValuesParams {
	o.SetLabel(label)
	return o
}

// SetLabel adds the label to the get label values params
func (o *GetLabelValuesParams) SetLabel(label string) {
	o.Label = label
}

// WithMatch adds the match to the get label values params
func (o *GetLabelValuesParams) WithMatch(match []string) *GetLabelValuesParams {
	o.SetMatch(match)
	return o
}

// SetMatch adds the match to the get label values params
func (o *GetLabelValuesParams) SetMatch(match []string) {
	o.Match = match
}

// WriteToRequest writes these params to a swagger request
func (o *GetLabelValuesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param label
	if err := r.SetPathParam("label", o.Label); err != nil {
		return err
	}

	if o.Match != nil {

		// binding items for match
		joinedMatch := o.bindParamMatch(reg)

		// query array param match
		if err := r.SetQueryParam("match", joinedMatch...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetLabelValues binds the parameter match
func (o *GetLabelValuesParams) bindParamMatch(formats strfmt.Registry) []string {
	matchIR := o.Match

	var matchIC []string
	for _, matchIIR := range matchIR { // explode []string

		matchIIV := matchIIR // string as string
		matchIC = append(matchIC, matchIIV)
	}

	// items.CollectionFormat: "multi"
	matchIS := swag.JoinByFormat(matchIC, "multi")

	return matchIS
}
