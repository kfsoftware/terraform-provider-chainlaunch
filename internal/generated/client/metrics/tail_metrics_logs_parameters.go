// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewTailMetricsLogsParams creates a new TailMetricsLogsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewTailMetricsLogsParams() *TailMetricsLogsParams {
	return &TailMetricsLogsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewTailMetricsLogsParamsWithTimeout creates a new TailMetricsLogsParams object
// with the ability to set a timeout on a request.
func NewTailMetricsLogsParamsWithTimeout(timeout time.Duration) *TailMetricsLogsParams {
	return &TailMetricsLogsParams{
		timeout: timeout,
	}
}

// NewTailMetricsLogsParamsWithContext creates a new TailMetricsLogsParams object
// with the ability to set a context for a request.
func NewTailMetricsLogsParamsWithContext(ctx context.Context) *TailMetricsLogsParams {
	return &TailMetricsLogsParams{
		Context: ctx,
	}
}

// NewTailMetricsLogsParamsWithHTTPClient creates a new TailMetricsLogsParams object
// with the ability to set a custom HTTPClient for a request.
func NewTailMetricsLogsParamsWithHTTPClient(client *http.Client) *TailMetricsLogsParams {
	return &TailMetricsLogsParams{
		HTTPClient: client,
	}
}

/*
TailMetricsLogsParams contains all the parameters to send to the API endpoint

	for the tail metrics logs operation.

	Typically these are written to a http.Request.
*/
type TailMetricsLogsParams struct {

	/* Follow.

	   Follow logs in real-time (default: false)
	*/
	Follow *bool

	/* Tail.

	   Number of lines to show from the end (default: 100)
	*/
	Tail *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the tail metrics logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *TailMetricsLogsParams) WithDefaults() *TailMetricsLogsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the tail metrics logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *TailMetricsLogsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the tail metrics logs params
func (o *TailMetricsLogsParams) WithTimeout(timeout time.Duration) *TailMetricsLogsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the tail metrics logs params
func (o *TailMetricsLogsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the tail metrics logs params
func (o *TailMetricsLogsParams) WithContext(ctx context.Context) *TailMetricsLogsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the tail metrics logs params
func (o *TailMetricsLogsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the tail metrics logs params
func (o *TailMetricsLogsParams) WithHTTPClient(client *http.Client) *TailMetricsLogsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the tail metrics logs params
func (o *TailMetricsLogsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFollow adds the follow to the tail metrics logs params
func (o *TailMetricsLogsParams) WithFollow(follow *bool) *TailMetricsLogsParams {
	o.SetFollow(follow)
	return o
}

// SetFollow adds the follow to the tail metrics logs params
func (o *TailMetricsLogsParams) SetFollow(follow *bool) {
	o.Follow = follow
}

// WithTail adds the tail to the tail metrics logs params
func (o *TailMetricsLogsParams) WithTail(tail *int64) *TailMetricsLogsParams {
	o.SetTail(tail)
	return o
}

// SetTail adds the tail to the tail metrics logs params
func (o *TailMetricsLogsParams) SetTail(tail *int64) {
	o.Tail = tail
}

// WriteToRequest writes these params to a swagger request
func (o *TailMetricsLogsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Follow != nil {

		// query param follow
		var qrFollow bool

		if o.Follow != nil {
			qrFollow = *o.Follow
		}
		qFollow := swag.FormatBool(qrFollow)
		if qFollow != "" {

			if err := r.SetQueryParam("follow", qFollow); err != nil {
				return err
			}
		}
	}

	if o.Tail != nil {

		// query param tail
		var qrTail int64

		if o.Tail != nil {
			qrTail = *o.Tail
		}
		qTail := swag.FormatInt64(qrTail)
		if qTail != "" {

			if err := r.SetQueryParam("tail", qTail); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
