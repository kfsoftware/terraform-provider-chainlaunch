// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// StartPrometheusReader is a Reader for the StartPrometheus structure.
type StartPrometheusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartPrometheusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewStartPrometheusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartPrometheusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartPrometheusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /metrics/start] startPrometheus", response, response.Code())
	}
}

// NewStartPrometheusOK creates a StartPrometheusOK with default headers values
func NewStartPrometheusOK() *StartPrometheusOK {
	return &StartPrometheusOK{}
}

/*
StartPrometheusOK describes a response with status code 200, with default header values.

OK
*/
type StartPrometheusOK struct {
	Payload *models.TypesMessageResponse
}

// IsSuccess returns true when this start prometheus o k response has a 2xx status code
func (o *StartPrometheusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start prometheus o k response has a 3xx status code
func (o *StartPrometheusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start prometheus o k response has a 4xx status code
func (o *StartPrometheusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start prometheus o k response has a 5xx status code
func (o *StartPrometheusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start prometheus o k response a status code equal to that given
func (o *StartPrometheusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start prometheus o k response
func (o *StartPrometheusOK) Code() int {
	return 200
}

func (o *StartPrometheusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/start][%d] startPrometheusOK %s", 200, payload)
}

func (o *StartPrometheusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/start][%d] startPrometheusOK %s", 200, payload)
}

func (o *StartPrometheusOK) GetPayload() *models.TypesMessageResponse {
	return o.Payload
}

func (o *StartPrometheusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TypesMessageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewStartPrometheusBadRequest creates a StartPrometheusBadRequest with default headers values
func NewStartPrometheusBadRequest() *StartPrometheusBadRequest {
	return &StartPrometheusBadRequest{}
}

/*
StartPrometheusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StartPrometheusBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this start prometheus bad request response has a 2xx status code
func (o *StartPrometheusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start prometheus bad request response has a 3xx status code
func (o *StartPrometheusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start prometheus bad request response has a 4xx status code
func (o *StartPrometheusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start prometheus bad request response has a 5xx status code
func (o *StartPrometheusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start prometheus bad request response a status code equal to that given
func (o *StartPrometheusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start prometheus bad request response
func (o *StartPrometheusBadRequest) Code() int {
	return 400
}

func (o *StartPrometheusBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/start][%d] startPrometheusBadRequest %s", 400, payload)
}

func (o *StartPrometheusBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/start][%d] startPrometheusBadRequest %s", 400, payload)
}

func (o *StartPrometheusBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *StartPrometheusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewStartPrometheusInternalServerError creates a StartPrometheusInternalServerError with default headers values
func NewStartPrometheusInternalServerError() *StartPrometheusInternalServerError {
	return &StartPrometheusInternalServerError{}
}

/*
StartPrometheusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type StartPrometheusInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this start prometheus internal server error response has a 2xx status code
func (o *StartPrometheusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start prometheus internal server error response has a 3xx status code
func (o *StartPrometheusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start prometheus internal server error response has a 4xx status code
func (o *StartPrometheusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start prometheus internal server error response has a 5xx status code
func (o *StartPrometheusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start prometheus internal server error response a status code equal to that given
func (o *StartPrometheusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start prometheus internal server error response
func (o *StartPrometheusInternalServerError) Code() int {
	return 500
}

func (o *StartPrometheusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/start][%d] startPrometheusInternalServerError %s", 500, payload)
}

func (o *StartPrometheusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/start][%d] startPrometheusInternalServerError %s", 500, payload)
}

func (o *StartPrometheusInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *StartPrometheusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
