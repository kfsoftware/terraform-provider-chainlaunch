// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// TailMetricsLogsReader is a Reader for the TailMetricsLogs structure.
type TailMetricsLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TailMetricsLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewTailMetricsLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewTailMetricsLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /metrics/logs] tailMetricsLogs", response, response.Code())
	}
}

// NewTailMetricsLogsOK creates a TailMetricsLogsOK with default headers values
func NewTailMetricsLogsOK() *TailMetricsLogsOK {
	return &TailMetricsLogsOK{}
}

/*
TailMetricsLogsOK describes a response with status code 200, with default header values.

Log stream
*/
type TailMetricsLogsOK struct {
	Payload string
}

// IsSuccess returns true when this tail metrics logs o k response has a 2xx status code
func (o *TailMetricsLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this tail metrics logs o k response has a 3xx status code
func (o *TailMetricsLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tail metrics logs o k response has a 4xx status code
func (o *TailMetricsLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this tail metrics logs o k response has a 5xx status code
func (o *TailMetricsLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this tail metrics logs o k response a status code equal to that given
func (o *TailMetricsLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the tail metrics logs o k response
func (o *TailMetricsLogsOK) Code() int {
	return 200
}

func (o *TailMetricsLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/logs][%d] tailMetricsLogsOK %s", 200, payload)
}

func (o *TailMetricsLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/logs][%d] tailMetricsLogsOK %s", 200, payload)
}

func (o *TailMetricsLogsOK) GetPayload() string {
	return o.Payload
}

func (o *TailMetricsLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewTailMetricsLogsInternalServerError creates a TailMetricsLogsInternalServerError with default headers values
func NewTailMetricsLogsInternalServerError() *TailMetricsLogsInternalServerError {
	return &TailMetricsLogsInternalServerError{}
}

/*
TailMetricsLogsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type TailMetricsLogsInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this tail metrics logs internal server error response has a 2xx status code
func (o *TailMetricsLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tail metrics logs internal server error response has a 3xx status code
func (o *TailMetricsLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tail metrics logs internal server error response has a 4xx status code
func (o *TailMetricsLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this tail metrics logs internal server error response has a 5xx status code
func (o *TailMetricsLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this tail metrics logs internal server error response a status code equal to that given
func (o *TailMetricsLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the tail metrics logs internal server error response
func (o *TailMetricsLogsInternalServerError) Code() int {
	return 500
}

func (o *TailMetricsLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/logs][%d] tailMetricsLogsInternalServerError %s", 500, payload)
}

func (o *TailMetricsLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/logs][%d] tailMetricsLogsInternalServerError %s", 500, payload)
}

func (o *TailMetricsLogsInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *TailMetricsLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
