// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// CustomQueryFilteredReader is a Reader for the CustomQueryFiltered structure.
type CustomQueryFilteredReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomQueryFilteredReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewCustomQueryFilteredOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCustomQueryFilteredBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCustomQueryFilteredInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /metrics/node/{id}/query/filtered] customQueryFiltered", response, response.Code())
	}
}

// NewCustomQueryFilteredOK creates a CustomQueryFilteredOK with default headers values
func NewCustomQueryFilteredOK() *CustomQueryFilteredOK {
	return &CustomQueryFilteredOK{}
}

/*
CustomQueryFilteredOK describes a response with status code 200, with default header values.

OK
*/
type CustomQueryFilteredOK struct {
	Payload *models.TypesFilteredMetricsResponse
}

// IsSuccess returns true when this custom query filtered o k response has a 2xx status code
func (o *CustomQueryFilteredOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this custom query filtered o k response has a 3xx status code
func (o *CustomQueryFilteredOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this custom query filtered o k response has a 4xx status code
func (o *CustomQueryFilteredOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this custom query filtered o k response has a 5xx status code
func (o *CustomQueryFilteredOK) IsServerError() bool {
	return false
}

// IsCode returns true when this custom query filtered o k response a status code equal to that given
func (o *CustomQueryFilteredOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the custom query filtered o k response
func (o *CustomQueryFilteredOK) Code() int {
	return 200
}

func (o *CustomQueryFilteredOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/node/{id}/query/filtered][%d] customQueryFilteredOK %s", 200, payload)
}

func (o *CustomQueryFilteredOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/node/{id}/query/filtered][%d] customQueryFilteredOK %s", 200, payload)
}

func (o *CustomQueryFilteredOK) GetPayload() *models.TypesFilteredMetricsResponse {
	return o.Payload
}

func (o *CustomQueryFilteredOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TypesFilteredMetricsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCustomQueryFilteredBadRequest creates a CustomQueryFilteredBadRequest with default headers values
func NewCustomQueryFilteredBadRequest() *CustomQueryFilteredBadRequest {
	return &CustomQueryFilteredBadRequest{}
}

/*
CustomQueryFilteredBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CustomQueryFilteredBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this custom query filtered bad request response has a 2xx status code
func (o *CustomQueryFilteredBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this custom query filtered bad request response has a 3xx status code
func (o *CustomQueryFilteredBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this custom query filtered bad request response has a 4xx status code
func (o *CustomQueryFilteredBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this custom query filtered bad request response has a 5xx status code
func (o *CustomQueryFilteredBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this custom query filtered bad request response a status code equal to that given
func (o *CustomQueryFilteredBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the custom query filtered bad request response
func (o *CustomQueryFilteredBadRequest) Code() int {
	return 400
}

func (o *CustomQueryFilteredBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/node/{id}/query/filtered][%d] customQueryFilteredBadRequest %s", 400, payload)
}

func (o *CustomQueryFilteredBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/node/{id}/query/filtered][%d] customQueryFilteredBadRequest %s", 400, payload)
}

func (o *CustomQueryFilteredBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *CustomQueryFilteredBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCustomQueryFilteredInternalServerError creates a CustomQueryFilteredInternalServerError with default headers values
func NewCustomQueryFilteredInternalServerError() *CustomQueryFilteredInternalServerError {
	return &CustomQueryFilteredInternalServerError{}
}

/*
CustomQueryFilteredInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CustomQueryFilteredInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this custom query filtered internal server error response has a 2xx status code
func (o *CustomQueryFilteredInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this custom query filtered internal server error response has a 3xx status code
func (o *CustomQueryFilteredInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this custom query filtered internal server error response has a 4xx status code
func (o *CustomQueryFilteredInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this custom query filtered internal server error response has a 5xx status code
func (o *CustomQueryFilteredInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this custom query filtered internal server error response a status code equal to that given
func (o *CustomQueryFilteredInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the custom query filtered internal server error response
func (o *CustomQueryFilteredInternalServerError) Code() int {
	return 500
}

func (o *CustomQueryFilteredInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/node/{id}/query/filtered][%d] customQueryFilteredInternalServerError %s", 500, payload)
}

func (o *CustomQueryFilteredInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /metrics/node/{id}/query/filtered][%d] customQueryFilteredInternalServerError %s", 500, payload)
}

func (o *CustomQueryFilteredInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *CustomQueryFilteredInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
