// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetConnectionLabelValuesReader is a Reader for the GetConnectionLabelValues structure.
type GetConnectionLabelValuesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConnectionLabelValuesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetConnectionLabelValuesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConnectionLabelValuesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConnectionLabelValuesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /metrics/connection/{id}/label/{label}/values] getConnectionLabelValues", response, response.Code())
	}
}

// NewGetConnectionLabelValuesOK creates a GetConnectionLabelValuesOK with default headers values
func NewGetConnectionLabelValuesOK() *GetConnectionLabelValuesOK {
	return &GetConnectionLabelValuesOK{}
}

/*
GetConnectionLabelValuesOK describes a response with status code 200, with default header values.

Label values
*/
type GetConnectionLabelValuesOK struct {
	Payload *models.TypesLabelValuesResponse
}

// IsSuccess returns true when this get connection label values o k response has a 2xx status code
func (o *GetConnectionLabelValuesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get connection label values o k response has a 3xx status code
func (o *GetConnectionLabelValuesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection label values o k response has a 4xx status code
func (o *GetConnectionLabelValuesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connection label values o k response has a 5xx status code
func (o *GetConnectionLabelValuesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection label values o k response a status code equal to that given
func (o *GetConnectionLabelValuesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get connection label values o k response
func (o *GetConnectionLabelValuesOK) Code() int {
	return 200
}

func (o *GetConnectionLabelValuesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/label/{label}/values][%d] getConnectionLabelValuesOK %s", 200, payload)
}

func (o *GetConnectionLabelValuesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/label/{label}/values][%d] getConnectionLabelValuesOK %s", 200, payload)
}

func (o *GetConnectionLabelValuesOK) GetPayload() *models.TypesLabelValuesResponse {
	return o.Payload
}

func (o *GetConnectionLabelValuesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TypesLabelValuesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConnectionLabelValuesBadRequest creates a GetConnectionLabelValuesBadRequest with default headers values
func NewGetConnectionLabelValuesBadRequest() *GetConnectionLabelValuesBadRequest {
	return &GetConnectionLabelValuesBadRequest{}
}

/*
GetConnectionLabelValuesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetConnectionLabelValuesBadRequest struct {
	Payload any
}

// IsSuccess returns true when this get connection label values bad request response has a 2xx status code
func (o *GetConnectionLabelValuesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection label values bad request response has a 3xx status code
func (o *GetConnectionLabelValuesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection label values bad request response has a 4xx status code
func (o *GetConnectionLabelValuesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection label values bad request response has a 5xx status code
func (o *GetConnectionLabelValuesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection label values bad request response a status code equal to that given
func (o *GetConnectionLabelValuesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get connection label values bad request response
func (o *GetConnectionLabelValuesBadRequest) Code() int {
	return 400
}

func (o *GetConnectionLabelValuesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/label/{label}/values][%d] getConnectionLabelValuesBadRequest %s", 400, payload)
}

func (o *GetConnectionLabelValuesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/label/{label}/values][%d] getConnectionLabelValuesBadRequest %s", 400, payload)
}

func (o *GetConnectionLabelValuesBadRequest) GetPayload() any {
	return o.Payload
}

func (o *GetConnectionLabelValuesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConnectionLabelValuesInternalServerError creates a GetConnectionLabelValuesInternalServerError with default headers values
func NewGetConnectionLabelValuesInternalServerError() *GetConnectionLabelValuesInternalServerError {
	return &GetConnectionLabelValuesInternalServerError{}
}

/*
GetConnectionLabelValuesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetConnectionLabelValuesInternalServerError struct {
	Payload any
}

// IsSuccess returns true when this get connection label values internal server error response has a 2xx status code
func (o *GetConnectionLabelValuesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection label values internal server error response has a 3xx status code
func (o *GetConnectionLabelValuesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection label values internal server error response has a 4xx status code
func (o *GetConnectionLabelValuesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connection label values internal server error response has a 5xx status code
func (o *GetConnectionLabelValuesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get connection label values internal server error response a status code equal to that given
func (o *GetConnectionLabelValuesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get connection label values internal server error response
func (o *GetConnectionLabelValuesInternalServerError) Code() int {
	return 500
}

func (o *GetConnectionLabelValuesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/label/{label}/values][%d] getConnectionLabelValuesInternalServerError %s", 500, payload)
}

func (o *GetConnectionLabelValuesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/label/{label}/values][%d] getConnectionLabelValuesInternalServerError %s", 500, payload)
}

func (o *GetConnectionLabelValuesInternalServerError) GetPayload() any {
	return o.Payload
}

func (o *GetConnectionLabelValuesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
