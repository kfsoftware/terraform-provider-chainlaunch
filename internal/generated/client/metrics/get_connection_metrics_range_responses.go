// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetConnectionMetricsRangeReader is a Reader for the GetConnectionMetricsRange structure.
type GetConnectionMetricsRangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConnectionMetricsRangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetConnectionMetricsRangeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConnectionMetricsRangeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConnectionMetricsRangeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /metrics/connection/{id}/range] getConnectionMetricsRange", response, response.Code())
	}
}

// NewGetConnectionMetricsRangeOK creates a GetConnectionMetricsRangeOK with default headers values
func NewGetConnectionMetricsRangeOK() *GetConnectionMetricsRangeOK {
	return &GetConnectionMetricsRangeOK{}
}

/*
GetConnectionMetricsRangeOK describes a response with status code 200, with default header values.

Metrics data
*/
type GetConnectionMetricsRangeOK struct {
	Payload *models.TypesMetricsDataResponse
}

// IsSuccess returns true when this get connection metrics range o k response has a 2xx status code
func (o *GetConnectionMetricsRangeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get connection metrics range o k response has a 3xx status code
func (o *GetConnectionMetricsRangeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection metrics range o k response has a 4xx status code
func (o *GetConnectionMetricsRangeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connection metrics range o k response has a 5xx status code
func (o *GetConnectionMetricsRangeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection metrics range o k response a status code equal to that given
func (o *GetConnectionMetricsRangeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get connection metrics range o k response
func (o *GetConnectionMetricsRangeOK) Code() int {
	return 200
}

func (o *GetConnectionMetricsRangeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/range][%d] getConnectionMetricsRangeOK %s", 200, payload)
}

func (o *GetConnectionMetricsRangeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/range][%d] getConnectionMetricsRangeOK %s", 200, payload)
}

func (o *GetConnectionMetricsRangeOK) GetPayload() *models.TypesMetricsDataResponse {
	return o.Payload
}

func (o *GetConnectionMetricsRangeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TypesMetricsDataResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConnectionMetricsRangeBadRequest creates a GetConnectionMetricsRangeBadRequest with default headers values
func NewGetConnectionMetricsRangeBadRequest() *GetConnectionMetricsRangeBadRequest {
	return &GetConnectionMetricsRangeBadRequest{}
}

/*
GetConnectionMetricsRangeBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetConnectionMetricsRangeBadRequest struct {
	Payload any
}

// IsSuccess returns true when this get connection metrics range bad request response has a 2xx status code
func (o *GetConnectionMetricsRangeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection metrics range bad request response has a 3xx status code
func (o *GetConnectionMetricsRangeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection metrics range bad request response has a 4xx status code
func (o *GetConnectionMetricsRangeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection metrics range bad request response has a 5xx status code
func (o *GetConnectionMetricsRangeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection metrics range bad request response a status code equal to that given
func (o *GetConnectionMetricsRangeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get connection metrics range bad request response
func (o *GetConnectionMetricsRangeBadRequest) Code() int {
	return 400
}

func (o *GetConnectionMetricsRangeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/range][%d] getConnectionMetricsRangeBadRequest %s", 400, payload)
}

func (o *GetConnectionMetricsRangeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/range][%d] getConnectionMetricsRangeBadRequest %s", 400, payload)
}

func (o *GetConnectionMetricsRangeBadRequest) GetPayload() any {
	return o.Payload
}

func (o *GetConnectionMetricsRangeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConnectionMetricsRangeInternalServerError creates a GetConnectionMetricsRangeInternalServerError with default headers values
func NewGetConnectionMetricsRangeInternalServerError() *GetConnectionMetricsRangeInternalServerError {
	return &GetConnectionMetricsRangeInternalServerError{}
}

/*
GetConnectionMetricsRangeInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetConnectionMetricsRangeInternalServerError struct {
	Payload any
}

// IsSuccess returns true when this get connection metrics range internal server error response has a 2xx status code
func (o *GetConnectionMetricsRangeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection metrics range internal server error response has a 3xx status code
func (o *GetConnectionMetricsRangeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection metrics range internal server error response has a 4xx status code
func (o *GetConnectionMetricsRangeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connection metrics range internal server error response has a 5xx status code
func (o *GetConnectionMetricsRangeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get connection metrics range internal server error response a status code equal to that given
func (o *GetConnectionMetricsRangeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get connection metrics range internal server error response
func (o *GetConnectionMetricsRangeInternalServerError) Code() int {
	return 500
}

func (o *GetConnectionMetricsRangeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/range][%d] getConnectionMetricsRangeInternalServerError %s", 500, payload)
}

func (o *GetConnectionMetricsRangeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/range][%d] getConnectionMetricsRangeInternalServerError %s", 500, payload)
}

func (o *GetConnectionMetricsRangeInternalServerError) GetPayload() any {
	return o.Payload
}

func (o *GetConnectionMetricsRangeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
