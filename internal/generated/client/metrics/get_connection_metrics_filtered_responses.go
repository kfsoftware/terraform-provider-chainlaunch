// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetConnectionMetricsFilteredReader is a Reader for the GetConnectionMetricsFiltered structure.
type GetConnectionMetricsFilteredReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConnectionMetricsFilteredReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetConnectionMetricsFilteredOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConnectionMetricsFilteredBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConnectionMetricsFilteredInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /metrics/connection/{id}/filtered] getConnectionMetricsFiltered", response, response.Code())
	}
}

// NewGetConnectionMetricsFilteredOK creates a GetConnectionMetricsFilteredOK with default headers values
func NewGetConnectionMetricsFilteredOK() *GetConnectionMetricsFilteredOK {
	return &GetConnectionMetricsFilteredOK{}
}

/*
GetConnectionMetricsFilteredOK describes a response with status code 200, with default header values.

OK
*/
type GetConnectionMetricsFilteredOK struct {
	Payload *models.TypesFilteredMetricsResponse
}

// IsSuccess returns true when this get connection metrics filtered o k response has a 2xx status code
func (o *GetConnectionMetricsFilteredOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get connection metrics filtered o k response has a 3xx status code
func (o *GetConnectionMetricsFilteredOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection metrics filtered o k response has a 4xx status code
func (o *GetConnectionMetricsFilteredOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connection metrics filtered o k response has a 5xx status code
func (o *GetConnectionMetricsFilteredOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection metrics filtered o k response a status code equal to that given
func (o *GetConnectionMetricsFilteredOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get connection metrics filtered o k response
func (o *GetConnectionMetricsFilteredOK) Code() int {
	return 200
}

func (o *GetConnectionMetricsFilteredOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/filtered][%d] getConnectionMetricsFilteredOK %s", 200, payload)
}

func (o *GetConnectionMetricsFilteredOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/filtered][%d] getConnectionMetricsFilteredOK %s", 200, payload)
}

func (o *GetConnectionMetricsFilteredOK) GetPayload() *models.TypesFilteredMetricsResponse {
	return o.Payload
}

func (o *GetConnectionMetricsFilteredOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TypesFilteredMetricsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConnectionMetricsFilteredBadRequest creates a GetConnectionMetricsFilteredBadRequest with default headers values
func NewGetConnectionMetricsFilteredBadRequest() *GetConnectionMetricsFilteredBadRequest {
	return &GetConnectionMetricsFilteredBadRequest{}
}

/*
GetConnectionMetricsFilteredBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetConnectionMetricsFilteredBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this get connection metrics filtered bad request response has a 2xx status code
func (o *GetConnectionMetricsFilteredBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection metrics filtered bad request response has a 3xx status code
func (o *GetConnectionMetricsFilteredBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection metrics filtered bad request response has a 4xx status code
func (o *GetConnectionMetricsFilteredBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connection metrics filtered bad request response has a 5xx status code
func (o *GetConnectionMetricsFilteredBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get connection metrics filtered bad request response a status code equal to that given
func (o *GetConnectionMetricsFilteredBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get connection metrics filtered bad request response
func (o *GetConnectionMetricsFilteredBadRequest) Code() int {
	return 400
}

func (o *GetConnectionMetricsFilteredBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/filtered][%d] getConnectionMetricsFilteredBadRequest %s", 400, payload)
}

func (o *GetConnectionMetricsFilteredBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/filtered][%d] getConnectionMetricsFilteredBadRequest %s", 400, payload)
}

func (o *GetConnectionMetricsFilteredBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetConnectionMetricsFilteredBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConnectionMetricsFilteredInternalServerError creates a GetConnectionMetricsFilteredInternalServerError with default headers values
func NewGetConnectionMetricsFilteredInternalServerError() *GetConnectionMetricsFilteredInternalServerError {
	return &GetConnectionMetricsFilteredInternalServerError{}
}

/*
GetConnectionMetricsFilteredInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetConnectionMetricsFilteredInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this get connection metrics filtered internal server error response has a 2xx status code
func (o *GetConnectionMetricsFilteredInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connection metrics filtered internal server error response has a 3xx status code
func (o *GetConnectionMetricsFilteredInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connection metrics filtered internal server error response has a 4xx status code
func (o *GetConnectionMetricsFilteredInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connection metrics filtered internal server error response has a 5xx status code
func (o *GetConnectionMetricsFilteredInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get connection metrics filtered internal server error response a status code equal to that given
func (o *GetConnectionMetricsFilteredInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get connection metrics filtered internal server error response
func (o *GetConnectionMetricsFilteredInternalServerError) Code() int {
	return 500
}

func (o *GetConnectionMetricsFilteredInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/filtered][%d] getConnectionMetricsFilteredInternalServerError %s", 500, payload)
}

func (o *GetConnectionMetricsFilteredInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/connection/{id}/filtered][%d] getConnectionMetricsFilteredInternalServerError %s", 500, payload)
}

func (o *GetConnectionMetricsFilteredInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetConnectionMetricsFilteredInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
