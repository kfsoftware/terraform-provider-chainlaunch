// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// SearchMetricsReader is a Reader for the SearchMetrics structure.
type SearchMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewSearchMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchMetricsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchMetricsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /metrics/search] searchMetrics", response, response.Code())
	}
}

// NewSearchMetricsOK creates a SearchMetricsOK with default headers values
func NewSearchMetricsOK() *SearchMetricsOK {
	return &SearchMetricsOK{}
}

/*
SearchMetricsOK describes a response with status code 200, with default header values.

OK
*/
type SearchMetricsOK struct {
	Payload *models.TypesFilteredMetricsResponse
}

// IsSuccess returns true when this search metrics o k response has a 2xx status code
func (o *SearchMetricsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search metrics o k response has a 3xx status code
func (o *SearchMetricsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search metrics o k response has a 4xx status code
func (o *SearchMetricsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search metrics o k response has a 5xx status code
func (o *SearchMetricsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search metrics o k response a status code equal to that given
func (o *SearchMetricsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search metrics o k response
func (o *SearchMetricsOK) Code() int {
	return 200
}

func (o *SearchMetricsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/search][%d] searchMetricsOK %s", 200, payload)
}

func (o *SearchMetricsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/search][%d] searchMetricsOK %s", 200, payload)
}

func (o *SearchMetricsOK) GetPayload() *models.TypesFilteredMetricsResponse {
	return o.Payload
}

func (o *SearchMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TypesFilteredMetricsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewSearchMetricsBadRequest creates a SearchMetricsBadRequest with default headers values
func NewSearchMetricsBadRequest() *SearchMetricsBadRequest {
	return &SearchMetricsBadRequest{}
}

/*
SearchMetricsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchMetricsBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this search metrics bad request response has a 2xx status code
func (o *SearchMetricsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search metrics bad request response has a 3xx status code
func (o *SearchMetricsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search metrics bad request response has a 4xx status code
func (o *SearchMetricsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search metrics bad request response has a 5xx status code
func (o *SearchMetricsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search metrics bad request response a status code equal to that given
func (o *SearchMetricsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the search metrics bad request response
func (o *SearchMetricsBadRequest) Code() int {
	return 400
}

func (o *SearchMetricsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/search][%d] searchMetricsBadRequest %s", 400, payload)
}

func (o *SearchMetricsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/search][%d] searchMetricsBadRequest %s", 400, payload)
}

func (o *SearchMetricsBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *SearchMetricsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewSearchMetricsInternalServerError creates a SearchMetricsInternalServerError with default headers values
func NewSearchMetricsInternalServerError() *SearchMetricsInternalServerError {
	return &SearchMetricsInternalServerError{}
}

/*
SearchMetricsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SearchMetricsInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this search metrics internal server error response has a 2xx status code
func (o *SearchMetricsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search metrics internal server error response has a 3xx status code
func (o *SearchMetricsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search metrics internal server error response has a 4xx status code
func (o *SearchMetricsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search metrics internal server error response has a 5xx status code
func (o *SearchMetricsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search metrics internal server error response a status code equal to that given
func (o *SearchMetricsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the search metrics internal server error response
func (o *SearchMetricsInternalServerError) Code() int {
	return 500
}

func (o *SearchMetricsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/search][%d] searchMetricsInternalServerError %s", 500, payload)
}

func (o *SearchMetricsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /metrics/search][%d] searchMetricsInternalServerError %s", 500, payload)
}

func (o *SearchMetricsInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *SearchMetricsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
