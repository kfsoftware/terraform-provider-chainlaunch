// Code generated by go-swagger; DO NOT EDIT.

package besu_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListBesuNetworksReader is a Reader for the ListBesuNetworks structure.
type ListBesuNetworksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListBesuNetworksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListBesuNetworksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListBesuNetworksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListBesuNetworksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/besu] listBesuNetworks", response, response.Code())
	}
}

// NewListBesuNetworksOK creates a ListBesuNetworksOK with default headers values
func NewListBesuNetworksOK() *ListBesuNetworksOK {
	return &ListBesuNetworksOK{}
}

/*
ListBesuNetworksOK describes a response with status code 200, with default header values.

OK
*/
type ListBesuNetworksOK struct {
	Payload *models.HTTPListBesuNetworksResponse
}

// IsSuccess returns true when this list besu networks o k response has a 2xx status code
func (o *ListBesuNetworksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list besu networks o k response has a 3xx status code
func (o *ListBesuNetworksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list besu networks o k response has a 4xx status code
func (o *ListBesuNetworksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list besu networks o k response has a 5xx status code
func (o *ListBesuNetworksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list besu networks o k response a status code equal to that given
func (o *ListBesuNetworksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list besu networks o k response
func (o *ListBesuNetworksOK) Code() int {
	return 200
}

func (o *ListBesuNetworksOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu][%d] listBesuNetworksOK %s", 200, payload)
}

func (o *ListBesuNetworksOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu][%d] listBesuNetworksOK %s", 200, payload)
}

func (o *ListBesuNetworksOK) GetPayload() *models.HTTPListBesuNetworksResponse {
	return o.Payload
}

func (o *ListBesuNetworksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPListBesuNetworksResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListBesuNetworksBadRequest creates a ListBesuNetworksBadRequest with default headers values
func NewListBesuNetworksBadRequest() *ListBesuNetworksBadRequest {
	return &ListBesuNetworksBadRequest{}
}

/*
ListBesuNetworksBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListBesuNetworksBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this list besu networks bad request response has a 2xx status code
func (o *ListBesuNetworksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list besu networks bad request response has a 3xx status code
func (o *ListBesuNetworksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list besu networks bad request response has a 4xx status code
func (o *ListBesuNetworksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list besu networks bad request response has a 5xx status code
func (o *ListBesuNetworksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list besu networks bad request response a status code equal to that given
func (o *ListBesuNetworksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list besu networks bad request response
func (o *ListBesuNetworksBadRequest) Code() int {
	return 400
}

func (o *ListBesuNetworksBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu][%d] listBesuNetworksBadRequest %s", 400, payload)
}

func (o *ListBesuNetworksBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu][%d] listBesuNetworksBadRequest %s", 400, payload)
}

func (o *ListBesuNetworksBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *ListBesuNetworksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListBesuNetworksInternalServerError creates a ListBesuNetworksInternalServerError with default headers values
func NewListBesuNetworksInternalServerError() *ListBesuNetworksInternalServerError {
	return &ListBesuNetworksInternalServerError{}
}

/*
ListBesuNetworksInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListBesuNetworksInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this list besu networks internal server error response has a 2xx status code
func (o *ListBesuNetworksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list besu networks internal server error response has a 3xx status code
func (o *ListBesuNetworksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list besu networks internal server error response has a 4xx status code
func (o *ListBesuNetworksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list besu networks internal server error response has a 5xx status code
func (o *ListBesuNetworksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list besu networks internal server error response a status code equal to that given
func (o *ListBesuNetworksInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list besu networks internal server error response
func (o *ListBesuNetworksInternalServerError) Code() int {
	return 500
}

func (o *ListBesuNetworksInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu][%d] listBesuNetworksInternalServerError %s", 500, payload)
}

func (o *ListBesuNetworksInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu][%d] listBesuNetworksInternalServerError %s", 500, payload)
}

func (o *ListBesuNetworksInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *ListBesuNetworksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
