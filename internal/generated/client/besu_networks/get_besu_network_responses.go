// Code generated by go-swagger; DO NOT EDIT.

package besu_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetBesuNetworkReader is a Reader for the GetBesuNetwork structure.
type GetBesuNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBesuNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetBesuNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBesuNetworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBesuNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBesuNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /networks/besu/{id}] getBesuNetwork", response, response.Code())
	}
}

// NewGetBesuNetworkOK creates a GetBesuNetworkOK with default headers values
func NewGetBesuNetworkOK() *GetBesuNetworkOK {
	return &GetBesuNetworkOK{}
}

/*
GetBesuNetworkOK describes a response with status code 200, with default header values.

OK
*/
type GetBesuNetworkOK struct {
	Payload *models.HTTPBesuNetworkResponse
}

// IsSuccess returns true when this get besu network o k response has a 2xx status code
func (o *GetBesuNetworkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get besu network o k response has a 3xx status code
func (o *GetBesuNetworkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get besu network o k response has a 4xx status code
func (o *GetBesuNetworkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get besu network o k response has a 5xx status code
func (o *GetBesuNetworkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get besu network o k response a status code equal to that given
func (o *GetBesuNetworkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get besu network o k response
func (o *GetBesuNetworkOK) Code() int {
	return 200
}

func (o *GetBesuNetworkOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu/{id}][%d] getBesuNetworkOK %s", 200, payload)
}

func (o *GetBesuNetworkOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu/{id}][%d] getBesuNetworkOK %s", 200, payload)
}

func (o *GetBesuNetworkOK) GetPayload() *models.HTTPBesuNetworkResponse {
	return o.Payload
}

func (o *GetBesuNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPBesuNetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBesuNetworkBadRequest creates a GetBesuNetworkBadRequest with default headers values
func NewGetBesuNetworkBadRequest() *GetBesuNetworkBadRequest {
	return &GetBesuNetworkBadRequest{}
}

/*
GetBesuNetworkBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBesuNetworkBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get besu network bad request response has a 2xx status code
func (o *GetBesuNetworkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get besu network bad request response has a 3xx status code
func (o *GetBesuNetworkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get besu network bad request response has a 4xx status code
func (o *GetBesuNetworkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get besu network bad request response has a 5xx status code
func (o *GetBesuNetworkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get besu network bad request response a status code equal to that given
func (o *GetBesuNetworkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get besu network bad request response
func (o *GetBesuNetworkBadRequest) Code() int {
	return 400
}

func (o *GetBesuNetworkBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu/{id}][%d] getBesuNetworkBadRequest %s", 400, payload)
}

func (o *GetBesuNetworkBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu/{id}][%d] getBesuNetworkBadRequest %s", 400, payload)
}

func (o *GetBesuNetworkBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetBesuNetworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBesuNetworkNotFound creates a GetBesuNetworkNotFound with default headers values
func NewGetBesuNetworkNotFound() *GetBesuNetworkNotFound {
	return &GetBesuNetworkNotFound{}
}

/*
GetBesuNetworkNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBesuNetworkNotFound struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get besu network not found response has a 2xx status code
func (o *GetBesuNetworkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get besu network not found response has a 3xx status code
func (o *GetBesuNetworkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get besu network not found response has a 4xx status code
func (o *GetBesuNetworkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get besu network not found response has a 5xx status code
func (o *GetBesuNetworkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get besu network not found response a status code equal to that given
func (o *GetBesuNetworkNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get besu network not found response
func (o *GetBesuNetworkNotFound) Code() int {
	return 404
}

func (o *GetBesuNetworkNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu/{id}][%d] getBesuNetworkNotFound %s", 404, payload)
}

func (o *GetBesuNetworkNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu/{id}][%d] getBesuNetworkNotFound %s", 404, payload)
}

func (o *GetBesuNetworkNotFound) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetBesuNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBesuNetworkInternalServerError creates a GetBesuNetworkInternalServerError with default headers values
func NewGetBesuNetworkInternalServerError() *GetBesuNetworkInternalServerError {
	return &GetBesuNetworkInternalServerError{}
}

/*
GetBesuNetworkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetBesuNetworkInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this get besu network internal server error response has a 2xx status code
func (o *GetBesuNetworkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get besu network internal server error response has a 3xx status code
func (o *GetBesuNetworkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get besu network internal server error response has a 4xx status code
func (o *GetBesuNetworkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get besu network internal server error response has a 5xx status code
func (o *GetBesuNetworkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get besu network internal server error response a status code equal to that given
func (o *GetBesuNetworkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get besu network internal server error response
func (o *GetBesuNetworkInternalServerError) Code() int {
	return 500
}

func (o *GetBesuNetworkInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu/{id}][%d] getBesuNetworkInternalServerError %s", 500, payload)
}

func (o *GetBesuNetworkInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /networks/besu/{id}][%d] getBesuNetworkInternalServerError %s", 500, payload)
}

func (o *GetBesuNetworkInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *GetBesuNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
