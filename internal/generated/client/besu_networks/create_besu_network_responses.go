// Code generated by go-swagger; DO NOT EDIT.

package besu_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// CreateBesuNetworkReader is a Reader for the CreateBesuNetwork structure.
type CreateBesuNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBesuNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewCreateBesuNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBesuNetworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateBesuNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /networks/besu] createBesuNetwork", response, response.Code())
	}
}

// NewCreateBesuNetworkOK creates a CreateBesuNetworkOK with default headers values
func NewCreateBesuNetworkOK() *CreateBesuNetworkOK {
	return &CreateBesuNetworkOK{}
}

/*
CreateBesuNetworkOK describes a response with status code 200, with default header values.

OK
*/
type CreateBesuNetworkOK struct {
	Payload *models.HTTPBesuNetworkResponse
}

// IsSuccess returns true when this create besu network o k response has a 2xx status code
func (o *CreateBesuNetworkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create besu network o k response has a 3xx status code
func (o *CreateBesuNetworkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create besu network o k response has a 4xx status code
func (o *CreateBesuNetworkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create besu network o k response has a 5xx status code
func (o *CreateBesuNetworkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create besu network o k response a status code equal to that given
func (o *CreateBesuNetworkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create besu network o k response
func (o *CreateBesuNetworkOK) Code() int {
	return 200
}

func (o *CreateBesuNetworkOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/besu][%d] createBesuNetworkOK %s", 200, payload)
}

func (o *CreateBesuNetworkOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/besu][%d] createBesuNetworkOK %s", 200, payload)
}

func (o *CreateBesuNetworkOK) GetPayload() *models.HTTPBesuNetworkResponse {
	return o.Payload
}

func (o *CreateBesuNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPBesuNetworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateBesuNetworkBadRequest creates a CreateBesuNetworkBadRequest with default headers values
func NewCreateBesuNetworkBadRequest() *CreateBesuNetworkBadRequest {
	return &CreateBesuNetworkBadRequest{}
}

/*
CreateBesuNetworkBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateBesuNetworkBadRequest struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this create besu network bad request response has a 2xx status code
func (o *CreateBesuNetworkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create besu network bad request response has a 3xx status code
func (o *CreateBesuNetworkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create besu network bad request response has a 4xx status code
func (o *CreateBesuNetworkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create besu network bad request response has a 5xx status code
func (o *CreateBesuNetworkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create besu network bad request response a status code equal to that given
func (o *CreateBesuNetworkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create besu network bad request response
func (o *CreateBesuNetworkBadRequest) Code() int {
	return 400
}

func (o *CreateBesuNetworkBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/besu][%d] createBesuNetworkBadRequest %s", 400, payload)
}

func (o *CreateBesuNetworkBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/besu][%d] createBesuNetworkBadRequest %s", 400, payload)
}

func (o *CreateBesuNetworkBadRequest) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *CreateBesuNetworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateBesuNetworkInternalServerError creates a CreateBesuNetworkInternalServerError with default headers values
func NewCreateBesuNetworkInternalServerError() *CreateBesuNetworkInternalServerError {
	return &CreateBesuNetworkInternalServerError{}
}

/*
CreateBesuNetworkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateBesuNetworkInternalServerError struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse
}

// IsSuccess returns true when this create besu network internal server error response has a 2xx status code
func (o *CreateBesuNetworkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create besu network internal server error response has a 3xx status code
func (o *CreateBesuNetworkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create besu network internal server error response has a 4xx status code
func (o *CreateBesuNetworkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create besu network internal server error response has a 5xx status code
func (o *CreateBesuNetworkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create besu network internal server error response a status code equal to that given
func (o *CreateBesuNetworkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create besu network internal server error response
func (o *CreateBesuNetworkInternalServerError) Code() int {
	return 500
}

func (o *CreateBesuNetworkInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/besu][%d] createBesuNetworkInternalServerError %s", 500, payload)
}

func (o *CreateBesuNetworkInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /networks/besu][%d] createBesuNetworkInternalServerError %s", 500, payload)
}

func (o *CreateBesuNetworkInternalServerError) GetPayload() *models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse {
	return o.Payload
}

func (o *CreateBesuNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgNetworksHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
