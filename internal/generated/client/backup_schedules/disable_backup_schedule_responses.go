// Code generated by go-swagger; DO NOT EDIT.

package backup_schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DisableBackupScheduleReader is a Reader for the DisableBackupSchedule structure.
type DisableBackupScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisableBackupScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewDisableBackupScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDisableBackupScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDisableBackupScheduleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDisableBackupScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /backups/schedules/{id}/disable] disableBackupSchedule", response, response.Code())
	}
}

// NewDisableBackupScheduleOK creates a DisableBackupScheduleOK with default headers values
func NewDisableBackupScheduleOK() *DisableBackupScheduleOK {
	return &DisableBackupScheduleOK{}
}

/*
DisableBackupScheduleOK describes a response with status code 200, with default header values.

OK
*/
type DisableBackupScheduleOK struct {
	Payload *models.HTTPBackupScheduleResponse
}

// IsSuccess returns true when this disable backup schedule o k response has a 2xx status code
func (o *DisableBackupScheduleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this disable backup schedule o k response has a 3xx status code
func (o *DisableBackupScheduleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable backup schedule o k response has a 4xx status code
func (o *DisableBackupScheduleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this disable backup schedule o k response has a 5xx status code
func (o *DisableBackupScheduleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this disable backup schedule o k response a status code equal to that given
func (o *DisableBackupScheduleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the disable backup schedule o k response
func (o *DisableBackupScheduleOK) Code() int {
	return 200
}

func (o *DisableBackupScheduleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/disable][%d] disableBackupScheduleOK %s", 200, payload)
}

func (o *DisableBackupScheduleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/disable][%d] disableBackupScheduleOK %s", 200, payload)
}

func (o *DisableBackupScheduleOK) GetPayload() *models.HTTPBackupScheduleResponse {
	return o.Payload
}

func (o *DisableBackupScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPBackupScheduleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDisableBackupScheduleBadRequest creates a DisableBackupScheduleBadRequest with default headers values
func NewDisableBackupScheduleBadRequest() *DisableBackupScheduleBadRequest {
	return &DisableBackupScheduleBadRequest{}
}

/*
DisableBackupScheduleBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type DisableBackupScheduleBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this disable backup schedule bad request response has a 2xx status code
func (o *DisableBackupScheduleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disable backup schedule bad request response has a 3xx status code
func (o *DisableBackupScheduleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable backup schedule bad request response has a 4xx status code
func (o *DisableBackupScheduleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this disable backup schedule bad request response has a 5xx status code
func (o *DisableBackupScheduleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this disable backup schedule bad request response a status code equal to that given
func (o *DisableBackupScheduleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the disable backup schedule bad request response
func (o *DisableBackupScheduleBadRequest) Code() int {
	return 400
}

func (o *DisableBackupScheduleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/disable][%d] disableBackupScheduleBadRequest %s", 400, payload)
}

func (o *DisableBackupScheduleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/disable][%d] disableBackupScheduleBadRequest %s", 400, payload)
}

func (o *DisableBackupScheduleBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DisableBackupScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDisableBackupScheduleNotFound creates a DisableBackupScheduleNotFound with default headers values
func NewDisableBackupScheduleNotFound() *DisableBackupScheduleNotFound {
	return &DisableBackupScheduleNotFound{}
}

/*
DisableBackupScheduleNotFound describes a response with status code 404, with default header values.

Schedule not found
*/
type DisableBackupScheduleNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this disable backup schedule not found response has a 2xx status code
func (o *DisableBackupScheduleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disable backup schedule not found response has a 3xx status code
func (o *DisableBackupScheduleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable backup schedule not found response has a 4xx status code
func (o *DisableBackupScheduleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this disable backup schedule not found response has a 5xx status code
func (o *DisableBackupScheduleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this disable backup schedule not found response a status code equal to that given
func (o *DisableBackupScheduleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the disable backup schedule not found response
func (o *DisableBackupScheduleNotFound) Code() int {
	return 404
}

func (o *DisableBackupScheduleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/disable][%d] disableBackupScheduleNotFound %s", 404, payload)
}

func (o *DisableBackupScheduleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/disable][%d] disableBackupScheduleNotFound %s", 404, payload)
}

func (o *DisableBackupScheduleNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DisableBackupScheduleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDisableBackupScheduleInternalServerError creates a DisableBackupScheduleInternalServerError with default headers values
func NewDisableBackupScheduleInternalServerError() *DisableBackupScheduleInternalServerError {
	return &DisableBackupScheduleInternalServerError{}
}

/*
DisableBackupScheduleInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DisableBackupScheduleInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this disable backup schedule internal server error response has a 2xx status code
func (o *DisableBackupScheduleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disable backup schedule internal server error response has a 3xx status code
func (o *DisableBackupScheduleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable backup schedule internal server error response has a 4xx status code
func (o *DisableBackupScheduleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this disable backup schedule internal server error response has a 5xx status code
func (o *DisableBackupScheduleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this disable backup schedule internal server error response a status code equal to that given
func (o *DisableBackupScheduleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the disable backup schedule internal server error response
func (o *DisableBackupScheduleInternalServerError) Code() int {
	return 500
}

func (o *DisableBackupScheduleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/disable][%d] disableBackupScheduleInternalServerError %s", 500, payload)
}

func (o *DisableBackupScheduleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/disable][%d] disableBackupScheduleInternalServerError %s", 500, payload)
}

func (o *DisableBackupScheduleInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DisableBackupScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
