// Code generated by go-swagger; DO NOT EDIT.

package backup_schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetBackupScheduleReader is a Reader for the GetBackupSchedule structure.
type GetBackupScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBackupScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetBackupScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBackupScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBackupScheduleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBackupScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /backups/schedules/{id}] getBackupSchedule", response, response.Code())
	}
}

// NewGetBackupScheduleOK creates a GetBackupScheduleOK with default headers values
func NewGetBackupScheduleOK() *GetBackupScheduleOK {
	return &GetBackupScheduleOK{}
}

/*
GetBackupScheduleOK describes a response with status code 200, with default header values.

OK
*/
type GetBackupScheduleOK struct {
	Payload *models.HTTPBackupScheduleResponse
}

// IsSuccess returns true when this get backup schedule o k response has a 2xx status code
func (o *GetBackupScheduleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get backup schedule o k response has a 3xx status code
func (o *GetBackupScheduleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backup schedule o k response has a 4xx status code
func (o *GetBackupScheduleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get backup schedule o k response has a 5xx status code
func (o *GetBackupScheduleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get backup schedule o k response a status code equal to that given
func (o *GetBackupScheduleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get backup schedule o k response
func (o *GetBackupScheduleOK) Code() int {
	return 200
}

func (o *GetBackupScheduleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/schedules/{id}][%d] getBackupScheduleOK %s", 200, payload)
}

func (o *GetBackupScheduleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/schedules/{id}][%d] getBackupScheduleOK %s", 200, payload)
}

func (o *GetBackupScheduleOK) GetPayload() *models.HTTPBackupScheduleResponse {
	return o.Payload
}

func (o *GetBackupScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPBackupScheduleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBackupScheduleBadRequest creates a GetBackupScheduleBadRequest with default headers values
func NewGetBackupScheduleBadRequest() *GetBackupScheduleBadRequest {
	return &GetBackupScheduleBadRequest{}
}

/*
GetBackupScheduleBadRequest describes a response with status code 400, with default header values.

Invalid ID format
*/
type GetBackupScheduleBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get backup schedule bad request response has a 2xx status code
func (o *GetBackupScheduleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backup schedule bad request response has a 3xx status code
func (o *GetBackupScheduleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backup schedule bad request response has a 4xx status code
func (o *GetBackupScheduleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backup schedule bad request response has a 5xx status code
func (o *GetBackupScheduleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get backup schedule bad request response a status code equal to that given
func (o *GetBackupScheduleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get backup schedule bad request response
func (o *GetBackupScheduleBadRequest) Code() int {
	return 400
}

func (o *GetBackupScheduleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/schedules/{id}][%d] getBackupScheduleBadRequest %s", 400, payload)
}

func (o *GetBackupScheduleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/schedules/{id}][%d] getBackupScheduleBadRequest %s", 400, payload)
}

func (o *GetBackupScheduleBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetBackupScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBackupScheduleNotFound creates a GetBackupScheduleNotFound with default headers values
func NewGetBackupScheduleNotFound() *GetBackupScheduleNotFound {
	return &GetBackupScheduleNotFound{}
}

/*
GetBackupScheduleNotFound describes a response with status code 404, with default header values.

Schedule not found
*/
type GetBackupScheduleNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get backup schedule not found response has a 2xx status code
func (o *GetBackupScheduleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backup schedule not found response has a 3xx status code
func (o *GetBackupScheduleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backup schedule not found response has a 4xx status code
func (o *GetBackupScheduleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backup schedule not found response has a 5xx status code
func (o *GetBackupScheduleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get backup schedule not found response a status code equal to that given
func (o *GetBackupScheduleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get backup schedule not found response
func (o *GetBackupScheduleNotFound) Code() int {
	return 404
}

func (o *GetBackupScheduleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/schedules/{id}][%d] getBackupScheduleNotFound %s", 404, payload)
}

func (o *GetBackupScheduleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/schedules/{id}][%d] getBackupScheduleNotFound %s", 404, payload)
}

func (o *GetBackupScheduleNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetBackupScheduleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBackupScheduleInternalServerError creates a GetBackupScheduleInternalServerError with default headers values
func NewGetBackupScheduleInternalServerError() *GetBackupScheduleInternalServerError {
	return &GetBackupScheduleInternalServerError{}
}

/*
GetBackupScheduleInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetBackupScheduleInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get backup schedule internal server error response has a 2xx status code
func (o *GetBackupScheduleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backup schedule internal server error response has a 3xx status code
func (o *GetBackupScheduleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backup schedule internal server error response has a 4xx status code
func (o *GetBackupScheduleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get backup schedule internal server error response has a 5xx status code
func (o *GetBackupScheduleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get backup schedule internal server error response a status code equal to that given
func (o *GetBackupScheduleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get backup schedule internal server error response
func (o *GetBackupScheduleInternalServerError) Code() int {
	return 500
}

func (o *GetBackupScheduleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/schedules/{id}][%d] getBackupScheduleInternalServerError %s", 500, payload)
}

func (o *GetBackupScheduleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /backups/schedules/{id}][%d] getBackupScheduleInternalServerError %s", 500, payload)
}

func (o *GetBackupScheduleInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetBackupScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
