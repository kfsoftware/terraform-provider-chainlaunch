// Code generated by go-swagger; DO NOT EDIT.

package backup_schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// EnableBackupScheduleReader is a Reader for the EnableBackupSchedule structure.
type EnableBackupScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EnableBackupScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewEnableBackupScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEnableBackupScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEnableBackupScheduleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEnableBackupScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /backups/schedules/{id}/enable] enableBackupSchedule", response, response.Code())
	}
}

// NewEnableBackupScheduleOK creates a EnableBackupScheduleOK with default headers values
func NewEnableBackupScheduleOK() *EnableBackupScheduleOK {
	return &EnableBackupScheduleOK{}
}

/*
EnableBackupScheduleOK describes a response with status code 200, with default header values.

OK
*/
type EnableBackupScheduleOK struct {
	Payload *models.HTTPBackupScheduleResponse
}

// IsSuccess returns true when this enable backup schedule o k response has a 2xx status code
func (o *EnableBackupScheduleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this enable backup schedule o k response has a 3xx status code
func (o *EnableBackupScheduleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enable backup schedule o k response has a 4xx status code
func (o *EnableBackupScheduleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this enable backup schedule o k response has a 5xx status code
func (o *EnableBackupScheduleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this enable backup schedule o k response a status code equal to that given
func (o *EnableBackupScheduleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the enable backup schedule o k response
func (o *EnableBackupScheduleOK) Code() int {
	return 200
}

func (o *EnableBackupScheduleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/enable][%d] enableBackupScheduleOK %s", 200, payload)
}

func (o *EnableBackupScheduleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/enable][%d] enableBackupScheduleOK %s", 200, payload)
}

func (o *EnableBackupScheduleOK) GetPayload() *models.HTTPBackupScheduleResponse {
	return o.Payload
}

func (o *EnableBackupScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPBackupScheduleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewEnableBackupScheduleBadRequest creates a EnableBackupScheduleBadRequest with default headers values
func NewEnableBackupScheduleBadRequest() *EnableBackupScheduleBadRequest {
	return &EnableBackupScheduleBadRequest{}
}

/*
EnableBackupScheduleBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type EnableBackupScheduleBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this enable backup schedule bad request response has a 2xx status code
func (o *EnableBackupScheduleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enable backup schedule bad request response has a 3xx status code
func (o *EnableBackupScheduleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enable backup schedule bad request response has a 4xx status code
func (o *EnableBackupScheduleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this enable backup schedule bad request response has a 5xx status code
func (o *EnableBackupScheduleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this enable backup schedule bad request response a status code equal to that given
func (o *EnableBackupScheduleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the enable backup schedule bad request response
func (o *EnableBackupScheduleBadRequest) Code() int {
	return 400
}

func (o *EnableBackupScheduleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/enable][%d] enableBackupScheduleBadRequest %s", 400, payload)
}

func (o *EnableBackupScheduleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/enable][%d] enableBackupScheduleBadRequest %s", 400, payload)
}

func (o *EnableBackupScheduleBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *EnableBackupScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewEnableBackupScheduleNotFound creates a EnableBackupScheduleNotFound with default headers values
func NewEnableBackupScheduleNotFound() *EnableBackupScheduleNotFound {
	return &EnableBackupScheduleNotFound{}
}

/*
EnableBackupScheduleNotFound describes a response with status code 404, with default header values.

Schedule not found
*/
type EnableBackupScheduleNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this enable backup schedule not found response has a 2xx status code
func (o *EnableBackupScheduleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enable backup schedule not found response has a 3xx status code
func (o *EnableBackupScheduleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enable backup schedule not found response has a 4xx status code
func (o *EnableBackupScheduleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this enable backup schedule not found response has a 5xx status code
func (o *EnableBackupScheduleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this enable backup schedule not found response a status code equal to that given
func (o *EnableBackupScheduleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the enable backup schedule not found response
func (o *EnableBackupScheduleNotFound) Code() int {
	return 404
}

func (o *EnableBackupScheduleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/enable][%d] enableBackupScheduleNotFound %s", 404, payload)
}

func (o *EnableBackupScheduleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/enable][%d] enableBackupScheduleNotFound %s", 404, payload)
}

func (o *EnableBackupScheduleNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *EnableBackupScheduleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewEnableBackupScheduleInternalServerError creates a EnableBackupScheduleInternalServerError with default headers values
func NewEnableBackupScheduleInternalServerError() *EnableBackupScheduleInternalServerError {
	return &EnableBackupScheduleInternalServerError{}
}

/*
EnableBackupScheduleInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type EnableBackupScheduleInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this enable backup schedule internal server error response has a 2xx status code
func (o *EnableBackupScheduleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enable backup schedule internal server error response has a 3xx status code
func (o *EnableBackupScheduleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enable backup schedule internal server error response has a 4xx status code
func (o *EnableBackupScheduleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this enable backup schedule internal server error response has a 5xx status code
func (o *EnableBackupScheduleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this enable backup schedule internal server error response a status code equal to that given
func (o *EnableBackupScheduleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the enable backup schedule internal server error response
func (o *EnableBackupScheduleInternalServerError) Code() int {
	return 500
}

func (o *EnableBackupScheduleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/enable][%d] enableBackupScheduleInternalServerError %s", 500, payload)
}

func (o *EnableBackupScheduleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /backups/schedules/{id}/enable][%d] enableBackupScheduleInternalServerError %s", 500, payload)
}

func (o *EnableBackupScheduleInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *EnableBackupScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
