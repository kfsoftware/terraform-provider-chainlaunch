// Code generated by go-swagger; DO NOT EDIT.

package key_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetVaultStatusReader is a Reader for the GetVaultStatus structure.
type GetVaultStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVaultStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetVaultStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVaultStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVaultStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVaultStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /key-providers/{id}/vault/status] getVaultStatus", response, response.Code())
	}
}

// NewGetVaultStatusOK creates a GetVaultStatusOK with default headers values
func NewGetVaultStatusOK() *GetVaultStatusOK {
	return &GetVaultStatusOK{}
}

/*
GetVaultStatusOK describes a response with status code 200, with default header values.

Vault status information
*/
type GetVaultStatusOK struct {
	Payload *models.HandlerVaultStatusResponse
}

// IsSuccess returns true when this get vault status o k response has a 2xx status code
func (o *GetVaultStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vault status o k response has a 3xx status code
func (o *GetVaultStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vault status o k response has a 4xx status code
func (o *GetVaultStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vault status o k response has a 5xx status code
func (o *GetVaultStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vault status o k response a status code equal to that given
func (o *GetVaultStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get vault status o k response
func (o *GetVaultStatusOK) Code() int {
	return 200
}

func (o *GetVaultStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /key-providers/{id}/vault/status][%d] getVaultStatusOK %s", 200, payload)
}

func (o *GetVaultStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /key-providers/{id}/vault/status][%d] getVaultStatusOK %s", 200, payload)
}

func (o *GetVaultStatusOK) GetPayload() *models.HandlerVaultStatusResponse {
	return o.Payload
}

func (o *GetVaultStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HandlerVaultStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetVaultStatusBadRequest creates a GetVaultStatusBadRequest with default headers values
func NewGetVaultStatusBadRequest() *GetVaultStatusBadRequest {
	return &GetVaultStatusBadRequest{}
}

/*
GetVaultStatusBadRequest describes a response with status code 400, with default header values.

Invalid ID
*/
type GetVaultStatusBadRequest struct {
	Payload *models.HandlerVaultOperationResponse
}

// IsSuccess returns true when this get vault status bad request response has a 2xx status code
func (o *GetVaultStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vault status bad request response has a 3xx status code
func (o *GetVaultStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vault status bad request response has a 4xx status code
func (o *GetVaultStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vault status bad request response has a 5xx status code
func (o *GetVaultStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get vault status bad request response a status code equal to that given
func (o *GetVaultStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get vault status bad request response
func (o *GetVaultStatusBadRequest) Code() int {
	return 400
}

func (o *GetVaultStatusBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /key-providers/{id}/vault/status][%d] getVaultStatusBadRequest %s", 400, payload)
}

func (o *GetVaultStatusBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /key-providers/{id}/vault/status][%d] getVaultStatusBadRequest %s", 400, payload)
}

func (o *GetVaultStatusBadRequest) GetPayload() *models.HandlerVaultOperationResponse {
	return o.Payload
}

func (o *GetVaultStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HandlerVaultOperationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetVaultStatusNotFound creates a GetVaultStatusNotFound with default headers values
func NewGetVaultStatusNotFound() *GetVaultStatusNotFound {
	return &GetVaultStatusNotFound{}
}

/*
GetVaultStatusNotFound describes a response with status code 404, with default header values.

Provider not found
*/
type GetVaultStatusNotFound struct {
	Payload *models.HandlerVaultOperationResponse
}

// IsSuccess returns true when this get vault status not found response has a 2xx status code
func (o *GetVaultStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vault status not found response has a 3xx status code
func (o *GetVaultStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vault status not found response has a 4xx status code
func (o *GetVaultStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vault status not found response has a 5xx status code
func (o *GetVaultStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vault status not found response a status code equal to that given
func (o *GetVaultStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get vault status not found response
func (o *GetVaultStatusNotFound) Code() int {
	return 404
}

func (o *GetVaultStatusNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /key-providers/{id}/vault/status][%d] getVaultStatusNotFound %s", 404, payload)
}

func (o *GetVaultStatusNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /key-providers/{id}/vault/status][%d] getVaultStatusNotFound %s", 404, payload)
}

func (o *GetVaultStatusNotFound) GetPayload() *models.HandlerVaultOperationResponse {
	return o.Payload
}

func (o *GetVaultStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HandlerVaultOperationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetVaultStatusInternalServerError creates a GetVaultStatusInternalServerError with default headers values
func NewGetVaultStatusInternalServerError() *GetVaultStatusInternalServerError {
	return &GetVaultStatusInternalServerError{}
}

/*
GetVaultStatusInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetVaultStatusInternalServerError struct {
	Payload *models.HandlerVaultOperationResponse
}

// IsSuccess returns true when this get vault status internal server error response has a 2xx status code
func (o *GetVaultStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vault status internal server error response has a 3xx status code
func (o *GetVaultStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vault status internal server error response has a 4xx status code
func (o *GetVaultStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vault status internal server error response has a 5xx status code
func (o *GetVaultStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get vault status internal server error response a status code equal to that given
func (o *GetVaultStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get vault status internal server error response
func (o *GetVaultStatusInternalServerError) Code() int {
	return 500
}

func (o *GetVaultStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /key-providers/{id}/vault/status][%d] getVaultStatusInternalServerError %s", 500, payload)
}

func (o *GetVaultStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /key-providers/{id}/vault/status][%d] getVaultStatusInternalServerError %s", 500, payload)
}

func (o *GetVaultStatusInternalServerError) GetPayload() *models.HandlerVaultOperationResponse {
	return o.Payload
}

func (o *GetVaultStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HandlerVaultOperationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
