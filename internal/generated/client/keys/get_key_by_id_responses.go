// Code generated by go-swagger; DO NOT EDIT.

package keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetKeyByIDReader is a Reader for the GetKeyByID structure.
type GetKeyByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKeyByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetKeyByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKeyByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKeyByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKeyByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /keys/{id}] getKeyById", response, response.Code())
	}
}

// NewGetKeyByIDOK creates a GetKeyByIDOK with default headers values
func NewGetKeyByIDOK() *GetKeyByIDOK {
	return &GetKeyByIDOK{}
}

/*
GetKeyByIDOK describes a response with status code 200, with default header values.

OK
*/
type GetKeyByIDOK struct {
	Payload *models.ModelsKeyResponse
}

// IsSuccess returns true when this get key by Id o k response has a 2xx status code
func (o *GetKeyByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get key by Id o k response has a 3xx status code
func (o *GetKeyByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get key by Id o k response has a 4xx status code
func (o *GetKeyByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get key by Id o k response has a 5xx status code
func (o *GetKeyByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get key by Id o k response a status code equal to that given
func (o *GetKeyByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get key by Id o k response
func (o *GetKeyByIDOK) Code() int {
	return 200
}

func (o *GetKeyByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /keys/{id}][%d] getKeyByIdOK %s", 200, payload)
}

func (o *GetKeyByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /keys/{id}][%d] getKeyByIdOK %s", 200, payload)
}

func (o *GetKeyByIDOK) GetPayload() *models.ModelsKeyResponse {
	return o.Payload
}

func (o *GetKeyByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsKeyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetKeyByIDBadRequest creates a GetKeyByIDBadRequest with default headers values
func NewGetKeyByIDBadRequest() *GetKeyByIDBadRequest {
	return &GetKeyByIDBadRequest{}
}

/*
GetKeyByIDBadRequest describes a response with status code 400, with default header values.

Invalid ID
*/
type GetKeyByIDBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this get key by Id bad request response has a 2xx status code
func (o *GetKeyByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get key by Id bad request response has a 3xx status code
func (o *GetKeyByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get key by Id bad request response has a 4xx status code
func (o *GetKeyByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get key by Id bad request response has a 5xx status code
func (o *GetKeyByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get key by Id bad request response a status code equal to that given
func (o *GetKeyByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get key by Id bad request response
func (o *GetKeyByIDBadRequest) Code() int {
	return 400
}

func (o *GetKeyByIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /keys/{id}][%d] getKeyByIdBadRequest %s", 400, payload)
}

func (o *GetKeyByIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /keys/{id}][%d] getKeyByIdBadRequest %s", 400, payload)
}

func (o *GetKeyByIDBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetKeyByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetKeyByIDNotFound creates a GetKeyByIDNotFound with default headers values
func NewGetKeyByIDNotFound() *GetKeyByIDNotFound {
	return &GetKeyByIDNotFound{}
}

/*
GetKeyByIDNotFound describes a response with status code 404, with default header values.

Key not found
*/
type GetKeyByIDNotFound struct {
	Payload map[string]string
}

// IsSuccess returns true when this get key by Id not found response has a 2xx status code
func (o *GetKeyByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get key by Id not found response has a 3xx status code
func (o *GetKeyByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get key by Id not found response has a 4xx status code
func (o *GetKeyByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get key by Id not found response has a 5xx status code
func (o *GetKeyByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get key by Id not found response a status code equal to that given
func (o *GetKeyByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get key by Id not found response
func (o *GetKeyByIDNotFound) Code() int {
	return 404
}

func (o *GetKeyByIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /keys/{id}][%d] getKeyByIdNotFound %s", 404, payload)
}

func (o *GetKeyByIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /keys/{id}][%d] getKeyByIdNotFound %s", 404, payload)
}

func (o *GetKeyByIDNotFound) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetKeyByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetKeyByIDInternalServerError creates a GetKeyByIDInternalServerError with default headers values
func NewGetKeyByIDInternalServerError() *GetKeyByIDInternalServerError {
	return &GetKeyByIDInternalServerError{}
}

/*
GetKeyByIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetKeyByIDInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this get key by Id internal server error response has a 2xx status code
func (o *GetKeyByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get key by Id internal server error response has a 3xx status code
func (o *GetKeyByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get key by Id internal server error response has a 4xx status code
func (o *GetKeyByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get key by Id internal server error response has a 5xx status code
func (o *GetKeyByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get key by Id internal server error response a status code equal to that given
func (o *GetKeyByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get key by Id internal server error response
func (o *GetKeyByIDInternalServerError) Code() int {
	return 500
}

func (o *GetKeyByIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /keys/{id}][%d] getKeyByIdInternalServerError %s", 500, payload)
}

func (o *GetKeyByIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /keys/{id}][%d] getKeyByIdInternalServerError %s", 500, payload)
}

func (o *GetKeyByIDInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetKeyByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
