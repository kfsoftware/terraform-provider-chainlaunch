// Code generated by go-swagger; DO NOT EDIT.

package keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteKeyReader is a Reader for the DeleteKey structure.
type DeleteKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteKeyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /keys/{id}] deleteKey", response, response.Code())
	}
}

// NewDeleteKeyNoContent creates a DeleteKeyNoContent with default headers values
func NewDeleteKeyNoContent() *DeleteKeyNoContent {
	return &DeleteKeyNoContent{}
}

/*
DeleteKeyNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteKeyNoContent struct {
}

// IsSuccess returns true when this delete key no content response has a 2xx status code
func (o *DeleteKeyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete key no content response has a 3xx status code
func (o *DeleteKeyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete key no content response has a 4xx status code
func (o *DeleteKeyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete key no content response has a 5xx status code
func (o *DeleteKeyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete key no content response a status code equal to that given
func (o *DeleteKeyNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete key no content response
func (o *DeleteKeyNoContent) Code() int {
	return 204
}

func (o *DeleteKeyNoContent) Error() string {
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeyNoContent", 204)
}

func (o *DeleteKeyNoContent) String() string {
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeyNoContent", 204)
}

func (o *DeleteKeyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKeyBadRequest creates a DeleteKeyBadRequest with default headers values
func NewDeleteKeyBadRequest() *DeleteKeyBadRequest {
	return &DeleteKeyBadRequest{}
}

/*
DeleteKeyBadRequest describes a response with status code 400, with default header values.

Invalid ID
*/
type DeleteKeyBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete key bad request response has a 2xx status code
func (o *DeleteKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete key bad request response has a 3xx status code
func (o *DeleteKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete key bad request response has a 4xx status code
func (o *DeleteKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete key bad request response has a 5xx status code
func (o *DeleteKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete key bad request response a status code equal to that given
func (o *DeleteKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete key bad request response
func (o *DeleteKeyBadRequest) Code() int {
	return 400
}

func (o *DeleteKeyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeyBadRequest %s", 400, payload)
}

func (o *DeleteKeyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeyBadRequest %s", 400, payload)
}

func (o *DeleteKeyBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteKeyNotFound creates a DeleteKeyNotFound with default headers values
func NewDeleteKeyNotFound() *DeleteKeyNotFound {
	return &DeleteKeyNotFound{}
}

/*
DeleteKeyNotFound describes a response with status code 404, with default header values.

Key not found
*/
type DeleteKeyNotFound struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete key not found response has a 2xx status code
func (o *DeleteKeyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete key not found response has a 3xx status code
func (o *DeleteKeyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete key not found response has a 4xx status code
func (o *DeleteKeyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete key not found response has a 5xx status code
func (o *DeleteKeyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete key not found response a status code equal to that given
func (o *DeleteKeyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete key not found response
func (o *DeleteKeyNotFound) Code() int {
	return 404
}

func (o *DeleteKeyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeyNotFound %s", 404, payload)
}

func (o *DeleteKeyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeyNotFound %s", 404, payload)
}

func (o *DeleteKeyNotFound) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteKeyInternalServerError creates a DeleteKeyInternalServerError with default headers values
func NewDeleteKeyInternalServerError() *DeleteKeyInternalServerError {
	return &DeleteKeyInternalServerError{}
}

/*
DeleteKeyInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteKeyInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this delete key internal server error response has a 2xx status code
func (o *DeleteKeyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete key internal server error response has a 3xx status code
func (o *DeleteKeyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete key internal server error response has a 4xx status code
func (o *DeleteKeyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete key internal server error response has a 5xx status code
func (o *DeleteKeyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete key internal server error response a status code equal to that given
func (o *DeleteKeyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete key internal server error response
func (o *DeleteKeyInternalServerError) Code() int {
	return 500
}

func (o *DeleteKeyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeyInternalServerError %s", 500, payload)
}

func (o *DeleteKeyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /keys/{id}][%d] deleteKeyInternalServerError %s", 500, payload)
}

func (o *DeleteKeyInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeleteKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
