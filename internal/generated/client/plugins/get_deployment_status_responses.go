// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetDeploymentStatusReader is a Reader for the GetDeploymentStatus structure.
type GetDeploymentStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploymentStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeploymentStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetDeploymentStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDeploymentStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /plugins/{name}/deployment-status] getDeploymentStatus", response, response.Code())
	}
}

// NewGetDeploymentStatusOK creates a GetDeploymentStatusOK with default headers values
func NewGetDeploymentStatusOK() *GetDeploymentStatusOK {
	return &GetDeploymentStatusOK{}
}

/*
GetDeploymentStatusOK describes a response with status code 200, with default header values.

OK
*/
type GetDeploymentStatusOK struct {
	Payload *models.TypesDeploymentStatus
}

// IsSuccess returns true when this get deployment status o k response has a 2xx status code
func (o *GetDeploymentStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get deployment status o k response has a 3xx status code
func (o *GetDeploymentStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment status o k response has a 4xx status code
func (o *GetDeploymentStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deployment status o k response has a 5xx status code
func (o *GetDeploymentStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployment status o k response a status code equal to that given
func (o *GetDeploymentStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get deployment status o k response
func (o *GetDeploymentStatusOK) Code() int {
	return 200
}

func (o *GetDeploymentStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/deployment-status][%d] getDeploymentStatusOK %s", 200, payload)
}

func (o *GetDeploymentStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/deployment-status][%d] getDeploymentStatusOK %s", 200, payload)
}

func (o *GetDeploymentStatusOK) GetPayload() *models.TypesDeploymentStatus {
	return o.Payload
}

func (o *GetDeploymentStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TypesDeploymentStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetDeploymentStatusNotFound creates a GetDeploymentStatusNotFound with default headers values
func NewGetDeploymentStatusNotFound() *GetDeploymentStatusNotFound {
	return &GetDeploymentStatusNotFound{}
}

/*
GetDeploymentStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDeploymentStatusNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get deployment status not found response has a 2xx status code
func (o *GetDeploymentStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployment status not found response has a 3xx status code
func (o *GetDeploymentStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment status not found response has a 4xx status code
func (o *GetDeploymentStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployment status not found response has a 5xx status code
func (o *GetDeploymentStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployment status not found response a status code equal to that given
func (o *GetDeploymentStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get deployment status not found response
func (o *GetDeploymentStatusNotFound) Code() int {
	return 404
}

func (o *GetDeploymentStatusNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/deployment-status][%d] getDeploymentStatusNotFound %s", 404, payload)
}

func (o *GetDeploymentStatusNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/deployment-status][%d] getDeploymentStatusNotFound %s", 404, payload)
}

func (o *GetDeploymentStatusNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetDeploymentStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetDeploymentStatusInternalServerError creates a GetDeploymentStatusInternalServerError with default headers values
func NewGetDeploymentStatusInternalServerError() *GetDeploymentStatusInternalServerError {
	return &GetDeploymentStatusInternalServerError{}
}

/*
GetDeploymentStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDeploymentStatusInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get deployment status internal server error response has a 2xx status code
func (o *GetDeploymentStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployment status internal server error response has a 3xx status code
func (o *GetDeploymentStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment status internal server error response has a 4xx status code
func (o *GetDeploymentStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deployment status internal server error response has a 5xx status code
func (o *GetDeploymentStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get deployment status internal server error response a status code equal to that given
func (o *GetDeploymentStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get deployment status internal server error response
func (o *GetDeploymentStatusInternalServerError) Code() int {
	return 500
}

func (o *GetDeploymentStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/deployment-status][%d] getDeploymentStatusInternalServerError %s", 500, payload)
}

func (o *GetDeploymentStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/deployment-status][%d] getDeploymentStatusInternalServerError %s", 500, payload)
}

func (o *GetDeploymentStatusInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetDeploymentStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
