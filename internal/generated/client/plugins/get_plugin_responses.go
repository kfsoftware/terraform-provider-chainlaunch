// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetPluginReader is a Reader for the GetPlugin structure.
type GetPluginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPluginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetPluginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPluginNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPluginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /plugins/{name}] getPlugin", response, response.Code())
	}
}

// NewGetPluginOK creates a GetPluginOK with default headers values
func NewGetPluginOK() *GetPluginOK {
	return &GetPluginOK{}
}

/*
GetPluginOK describes a response with status code 200, with default header values.

OK
*/
type GetPluginOK struct {
	Payload *models.GithubComChainlaunchChainlaunchPkgPluginTypesPlugin
}

// IsSuccess returns true when this get plugin o k response has a 2xx status code
func (o *GetPluginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get plugin o k response has a 3xx status code
func (o *GetPluginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin o k response has a 4xx status code
func (o *GetPluginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plugin o k response has a 5xx status code
func (o *GetPluginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin o k response a status code equal to that given
func (o *GetPluginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get plugin o k response
func (o *GetPluginOK) Code() int {
	return 200
}

func (o *GetPluginOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}][%d] getPluginOK %s", 200, payload)
}

func (o *GetPluginOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}][%d] getPluginOK %s", 200, payload)
}

func (o *GetPluginOK) GetPayload() *models.GithubComChainlaunchChainlaunchPkgPluginTypesPlugin {
	return o.Payload
}

func (o *GetPluginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubComChainlaunchChainlaunchPkgPluginTypesPlugin)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetPluginNotFound creates a GetPluginNotFound with default headers values
func NewGetPluginNotFound() *GetPluginNotFound {
	return &GetPluginNotFound{}
}

/*
GetPluginNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPluginNotFound struct {
	Payload string
}

// IsSuccess returns true when this get plugin not found response has a 2xx status code
func (o *GetPluginNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin not found response has a 3xx status code
func (o *GetPluginNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin not found response has a 4xx status code
func (o *GetPluginNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plugin not found response has a 5xx status code
func (o *GetPluginNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin not found response a status code equal to that given
func (o *GetPluginNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get plugin not found response
func (o *GetPluginNotFound) Code() int {
	return 404
}

func (o *GetPluginNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}][%d] getPluginNotFound %s", 404, payload)
}

func (o *GetPluginNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}][%d] getPluginNotFound %s", 404, payload)
}

func (o *GetPluginNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetPluginNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetPluginInternalServerError creates a GetPluginInternalServerError with default headers values
func NewGetPluginInternalServerError() *GetPluginInternalServerError {
	return &GetPluginInternalServerError{}
}

/*
GetPluginInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetPluginInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this get plugin internal server error response has a 2xx status code
func (o *GetPluginInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin internal server error response has a 3xx status code
func (o *GetPluginInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin internal server error response has a 4xx status code
func (o *GetPluginInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plugin internal server error response has a 5xx status code
func (o *GetPluginInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get plugin internal server error response a status code equal to that given
func (o *GetPluginInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get plugin internal server error response
func (o *GetPluginInternalServerError) Code() int {
	return 500
}

func (o *GetPluginInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}][%d] getPluginInternalServerError %s", 500, payload)
}

func (o *GetPluginInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}][%d] getPluginInternalServerError %s", 500, payload)
}

func (o *GetPluginInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetPluginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
