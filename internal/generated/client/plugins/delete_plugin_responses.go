// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DeletePluginReader is a Reader for the DeletePlugin structure.
type DeletePluginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePluginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePluginNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeletePluginNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeletePluginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /plugins/{name}] deletePlugin", response, response.Code())
	}
}

// NewDeletePluginNoContent creates a DeletePluginNoContent with default headers values
func NewDeletePluginNoContent() *DeletePluginNoContent {
	return &DeletePluginNoContent{}
}

/*
DeletePluginNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeletePluginNoContent struct {
}

// IsSuccess returns true when this delete plugin no content response has a 2xx status code
func (o *DeletePluginNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete plugin no content response has a 3xx status code
func (o *DeletePluginNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plugin no content response has a 4xx status code
func (o *DeletePluginNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete plugin no content response has a 5xx status code
func (o *DeletePluginNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete plugin no content response a status code equal to that given
func (o *DeletePluginNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete plugin no content response
func (o *DeletePluginNoContent) Code() int {
	return 204
}

func (o *DeletePluginNoContent) Error() string {
	return fmt.Sprintf("[DELETE /plugins/{name}][%d] deletePluginNoContent", 204)
}

func (o *DeletePluginNoContent) String() string {
	return fmt.Sprintf("[DELETE /plugins/{name}][%d] deletePluginNoContent", 204)
}

func (o *DeletePluginNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePluginNotFound creates a DeletePluginNotFound with default headers values
func NewDeletePluginNotFound() *DeletePluginNotFound {
	return &DeletePluginNotFound{}
}

/*
DeletePluginNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeletePluginNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this delete plugin not found response has a 2xx status code
func (o *DeletePluginNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete plugin not found response has a 3xx status code
func (o *DeletePluginNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plugin not found response has a 4xx status code
func (o *DeletePluginNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete plugin not found response has a 5xx status code
func (o *DeletePluginNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete plugin not found response a status code equal to that given
func (o *DeletePluginNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete plugin not found response
func (o *DeletePluginNotFound) Code() int {
	return 404
}

func (o *DeletePluginNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /plugins/{name}][%d] deletePluginNotFound %s", 404, payload)
}

func (o *DeletePluginNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /plugins/{name}][%d] deletePluginNotFound %s", 404, payload)
}

func (o *DeletePluginNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeletePluginNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeletePluginInternalServerError creates a DeletePluginInternalServerError with default headers values
func NewDeletePluginInternalServerError() *DeletePluginInternalServerError {
	return &DeletePluginInternalServerError{}
}

/*
DeletePluginInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeletePluginInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this delete plugin internal server error response has a 2xx status code
func (o *DeletePluginInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete plugin internal server error response has a 3xx status code
func (o *DeletePluginInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plugin internal server error response has a 4xx status code
func (o *DeletePluginInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete plugin internal server error response has a 5xx status code
func (o *DeletePluginInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete plugin internal server error response a status code equal to that given
func (o *DeletePluginInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete plugin internal server error response
func (o *DeletePluginInternalServerError) Code() int {
	return 500
}

func (o *DeletePluginInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /plugins/{name}][%d] deletePluginInternalServerError %s", 500, payload)
}

func (o *DeletePluginInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /plugins/{name}][%d] deletePluginInternalServerError %s", 500, payload)
}

func (o *DeletePluginInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeletePluginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
