// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DeployPluginReader is a Reader for the DeployPlugin structure.
type DeployPluginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeployPluginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewDeployPluginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeployPluginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeployPluginNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeployPluginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /plugins/{name}/deploy] deployPlugin", response, response.Code())
	}
}

// NewDeployPluginOK creates a DeployPluginOK with default headers values
func NewDeployPluginOK() *DeployPluginOK {
	return &DeployPluginOK{}
}

/*
DeployPluginOK describes a response with status code 200, with default header values.

OK
*/
type DeployPluginOK struct {
}

// IsSuccess returns true when this deploy plugin o k response has a 2xx status code
func (o *DeployPluginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deploy plugin o k response has a 3xx status code
func (o *DeployPluginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy plugin o k response has a 4xx status code
func (o *DeployPluginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this deploy plugin o k response has a 5xx status code
func (o *DeployPluginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy plugin o k response a status code equal to that given
func (o *DeployPluginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the deploy plugin o k response
func (o *DeployPluginOK) Code() int {
	return 200
}

func (o *DeployPluginOK) Error() string {
	return fmt.Sprintf("[POST /plugins/{name}/deploy][%d] deployPluginOK", 200)
}

func (o *DeployPluginOK) String() string {
	return fmt.Sprintf("[POST /plugins/{name}/deploy][%d] deployPluginOK", 200)
}

func (o *DeployPluginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeployPluginBadRequest creates a DeployPluginBadRequest with default headers values
func NewDeployPluginBadRequest() *DeployPluginBadRequest {
	return &DeployPluginBadRequest{}
}

/*
DeployPluginBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeployPluginBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this deploy plugin bad request response has a 2xx status code
func (o *DeployPluginBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy plugin bad request response has a 3xx status code
func (o *DeployPluginBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy plugin bad request response has a 4xx status code
func (o *DeployPluginBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this deploy plugin bad request response has a 5xx status code
func (o *DeployPluginBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy plugin bad request response a status code equal to that given
func (o *DeployPluginBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the deploy plugin bad request response
func (o *DeployPluginBadRequest) Code() int {
	return 400
}

func (o *DeployPluginBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /plugins/{name}/deploy][%d] deployPluginBadRequest %s", 400, payload)
}

func (o *DeployPluginBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /plugins/{name}/deploy][%d] deployPluginBadRequest %s", 400, payload)
}

func (o *DeployPluginBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeployPluginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeployPluginNotFound creates a DeployPluginNotFound with default headers values
func NewDeployPluginNotFound() *DeployPluginNotFound {
	return &DeployPluginNotFound{}
}

/*
DeployPluginNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeployPluginNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this deploy plugin not found response has a 2xx status code
func (o *DeployPluginNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy plugin not found response has a 3xx status code
func (o *DeployPluginNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy plugin not found response has a 4xx status code
func (o *DeployPluginNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this deploy plugin not found response has a 5xx status code
func (o *DeployPluginNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy plugin not found response a status code equal to that given
func (o *DeployPluginNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the deploy plugin not found response
func (o *DeployPluginNotFound) Code() int {
	return 404
}

func (o *DeployPluginNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /plugins/{name}/deploy][%d] deployPluginNotFound %s", 404, payload)
}

func (o *DeployPluginNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /plugins/{name}/deploy][%d] deployPluginNotFound %s", 404, payload)
}

func (o *DeployPluginNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeployPluginNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeployPluginInternalServerError creates a DeployPluginInternalServerError with default headers values
func NewDeployPluginInternalServerError() *DeployPluginInternalServerError {
	return &DeployPluginInternalServerError{}
}

/*
DeployPluginInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeployPluginInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this deploy plugin internal server error response has a 2xx status code
func (o *DeployPluginInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy plugin internal server error response has a 3xx status code
func (o *DeployPluginInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy plugin internal server error response has a 4xx status code
func (o *DeployPluginInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this deploy plugin internal server error response has a 5xx status code
func (o *DeployPluginInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this deploy plugin internal server error response a status code equal to that given
func (o *DeployPluginInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the deploy plugin internal server error response
func (o *DeployPluginInternalServerError) Code() int {
	return 500
}

func (o *DeployPluginInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /plugins/{name}/deploy][%d] deployPluginInternalServerError %s", 500, payload)
}

func (o *DeployPluginInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /plugins/{name}/deploy][%d] deployPluginInternalServerError %s", 500, payload)
}

func (o *DeployPluginInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeployPluginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
