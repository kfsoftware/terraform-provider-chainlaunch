// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetDockerComposeServicesReader is a Reader for the GetDockerComposeServices structure.
type GetDockerComposeServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDockerComposeServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetDockerComposeServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetDockerComposeServicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDockerComposeServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /plugins/{name}/services] getDockerComposeServices", response, response.Code())
	}
}

// NewGetDockerComposeServicesOK creates a GetDockerComposeServicesOK with default headers values
func NewGetDockerComposeServicesOK() *GetDockerComposeServicesOK {
	return &GetDockerComposeServicesOK{}
}

/*
GetDockerComposeServicesOK describes a response with status code 200, with default header values.

OK
*/
type GetDockerComposeServicesOK struct {
	Payload []*models.PluginServiceStatus
}

// IsSuccess returns true when this get docker compose services o k response has a 2xx status code
func (o *GetDockerComposeServicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get docker compose services o k response has a 3xx status code
func (o *GetDockerComposeServicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get docker compose services o k response has a 4xx status code
func (o *GetDockerComposeServicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get docker compose services o k response has a 5xx status code
func (o *GetDockerComposeServicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get docker compose services o k response a status code equal to that given
func (o *GetDockerComposeServicesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get docker compose services o k response
func (o *GetDockerComposeServicesOK) Code() int {
	return 200
}

func (o *GetDockerComposeServicesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services][%d] getDockerComposeServicesOK %s", 200, payload)
}

func (o *GetDockerComposeServicesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services][%d] getDockerComposeServicesOK %s", 200, payload)
}

func (o *GetDockerComposeServicesOK) GetPayload() []*models.PluginServiceStatus {
	return o.Payload
}

func (o *GetDockerComposeServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetDockerComposeServicesNotFound creates a GetDockerComposeServicesNotFound with default headers values
func NewGetDockerComposeServicesNotFound() *GetDockerComposeServicesNotFound {
	return &GetDockerComposeServicesNotFound{}
}

/*
GetDockerComposeServicesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDockerComposeServicesNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get docker compose services not found response has a 2xx status code
func (o *GetDockerComposeServicesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get docker compose services not found response has a 3xx status code
func (o *GetDockerComposeServicesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get docker compose services not found response has a 4xx status code
func (o *GetDockerComposeServicesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get docker compose services not found response has a 5xx status code
func (o *GetDockerComposeServicesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get docker compose services not found response a status code equal to that given
func (o *GetDockerComposeServicesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get docker compose services not found response
func (o *GetDockerComposeServicesNotFound) Code() int {
	return 404
}

func (o *GetDockerComposeServicesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services][%d] getDockerComposeServicesNotFound %s", 404, payload)
}

func (o *GetDockerComposeServicesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services][%d] getDockerComposeServicesNotFound %s", 404, payload)
}

func (o *GetDockerComposeServicesNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetDockerComposeServicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetDockerComposeServicesInternalServerError creates a GetDockerComposeServicesInternalServerError with default headers values
func NewGetDockerComposeServicesInternalServerError() *GetDockerComposeServicesInternalServerError {
	return &GetDockerComposeServicesInternalServerError{}
}

/*
GetDockerComposeServicesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDockerComposeServicesInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get docker compose services internal server error response has a 2xx status code
func (o *GetDockerComposeServicesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get docker compose services internal server error response has a 3xx status code
func (o *GetDockerComposeServicesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get docker compose services internal server error response has a 4xx status code
func (o *GetDockerComposeServicesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get docker compose services internal server error response has a 5xx status code
func (o *GetDockerComposeServicesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get docker compose services internal server error response a status code equal to that given
func (o *GetDockerComposeServicesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get docker compose services internal server error response
func (o *GetDockerComposeServicesInternalServerError) Code() int {
	return 500
}

func (o *GetDockerComposeServicesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services][%d] getDockerComposeServicesInternalServerError %s", 500, payload)
}

func (o *GetDockerComposeServicesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services][%d] getDockerComposeServicesInternalServerError %s", 500, payload)
}

func (o *GetDockerComposeServicesInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetDockerComposeServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
