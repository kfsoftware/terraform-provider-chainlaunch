// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetPluginContainerLogsReader is a Reader for the GetPluginContainerLogs structure.
type GetPluginContainerLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPluginContainerLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetPluginContainerLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPluginContainerLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPluginContainerLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPluginContainerLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /plugins/{name}/services/{service}/logs] getPluginContainerLogs", response, response.Code())
	}
}

// NewGetPluginContainerLogsOK creates a GetPluginContainerLogsOK with default headers values
func NewGetPluginContainerLogsOK() *GetPluginContainerLogsOK {
	return &GetPluginContainerLogsOK{}
}

/*
GetPluginContainerLogsOK describes a response with status code 200, with default header values.

Log content (plain text when follow=false, SSE stream when follow=true)
*/
type GetPluginContainerLogsOK struct {
	Payload string
}

// IsSuccess returns true when this get plugin container logs o k response has a 2xx status code
func (o *GetPluginContainerLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get plugin container logs o k response has a 3xx status code
func (o *GetPluginContainerLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin container logs o k response has a 4xx status code
func (o *GetPluginContainerLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plugin container logs o k response has a 5xx status code
func (o *GetPluginContainerLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin container logs o k response a status code equal to that given
func (o *GetPluginContainerLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get plugin container logs o k response
func (o *GetPluginContainerLogsOK) Code() int {
	return 200
}

func (o *GetPluginContainerLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services/{service}/logs][%d] getPluginContainerLogsOK %s", 200, payload)
}

func (o *GetPluginContainerLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services/{service}/logs][%d] getPluginContainerLogsOK %s", 200, payload)
}

func (o *GetPluginContainerLogsOK) GetPayload() string {
	return o.Payload
}

func (o *GetPluginContainerLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetPluginContainerLogsBadRequest creates a GetPluginContainerLogsBadRequest with default headers values
func NewGetPluginContainerLogsBadRequest() *GetPluginContainerLogsBadRequest {
	return &GetPluginContainerLogsBadRequest{}
}

/*
GetPluginContainerLogsBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetPluginContainerLogsBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get plugin container logs bad request response has a 2xx status code
func (o *GetPluginContainerLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin container logs bad request response has a 3xx status code
func (o *GetPluginContainerLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin container logs bad request response has a 4xx status code
func (o *GetPluginContainerLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plugin container logs bad request response has a 5xx status code
func (o *GetPluginContainerLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin container logs bad request response a status code equal to that given
func (o *GetPluginContainerLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get plugin container logs bad request response
func (o *GetPluginContainerLogsBadRequest) Code() int {
	return 400
}

func (o *GetPluginContainerLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services/{service}/logs][%d] getPluginContainerLogsBadRequest %s", 400, payload)
}

func (o *GetPluginContainerLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services/{service}/logs][%d] getPluginContainerLogsBadRequest %s", 400, payload)
}

func (o *GetPluginContainerLogsBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetPluginContainerLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetPluginContainerLogsNotFound creates a GetPluginContainerLogsNotFound with default headers values
func NewGetPluginContainerLogsNotFound() *GetPluginContainerLogsNotFound {
	return &GetPluginContainerLogsNotFound{}
}

/*
GetPluginContainerLogsNotFound describes a response with status code 404, with default header values.

Plugin or service not found
*/
type GetPluginContainerLogsNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get plugin container logs not found response has a 2xx status code
func (o *GetPluginContainerLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin container logs not found response has a 3xx status code
func (o *GetPluginContainerLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin container logs not found response has a 4xx status code
func (o *GetPluginContainerLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plugin container logs not found response has a 5xx status code
func (o *GetPluginContainerLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin container logs not found response a status code equal to that given
func (o *GetPluginContainerLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get plugin container logs not found response
func (o *GetPluginContainerLogsNotFound) Code() int {
	return 404
}

func (o *GetPluginContainerLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services/{service}/logs][%d] getPluginContainerLogsNotFound %s", 404, payload)
}

func (o *GetPluginContainerLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services/{service}/logs][%d] getPluginContainerLogsNotFound %s", 404, payload)
}

func (o *GetPluginContainerLogsNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetPluginContainerLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetPluginContainerLogsInternalServerError creates a GetPluginContainerLogsInternalServerError with default headers values
func NewGetPluginContainerLogsInternalServerError() *GetPluginContainerLogsInternalServerError {
	return &GetPluginContainerLogsInternalServerError{}
}

/*
GetPluginContainerLogsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetPluginContainerLogsInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get plugin container logs internal server error response has a 2xx status code
func (o *GetPluginContainerLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin container logs internal server error response has a 3xx status code
func (o *GetPluginContainerLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin container logs internal server error response has a 4xx status code
func (o *GetPluginContainerLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plugin container logs internal server error response has a 5xx status code
func (o *GetPluginContainerLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get plugin container logs internal server error response a status code equal to that given
func (o *GetPluginContainerLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get plugin container logs internal server error response
func (o *GetPluginContainerLogsInternalServerError) Code() int {
	return 500
}

func (o *GetPluginContainerLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services/{service}/logs][%d] getPluginContainerLogsInternalServerError %s", 500, payload)
}

func (o *GetPluginContainerLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/services/{service}/logs][%d] getPluginContainerLogsInternalServerError %s", 500, payload)
}

func (o *GetPluginContainerLogsInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetPluginContainerLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
