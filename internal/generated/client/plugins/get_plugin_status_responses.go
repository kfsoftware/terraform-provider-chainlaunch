// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetPluginStatusReader is a Reader for the GetPluginStatus structure.
type GetPluginStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPluginStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetPluginStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPluginStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPluginStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /plugins/{name}/status] getPluginStatus", response, response.Code())
	}
}

// NewGetPluginStatusOK creates a GetPluginStatusOK with default headers values
func NewGetPluginStatusOK() *GetPluginStatusOK {
	return &GetPluginStatusOK{}
}

/*
GetPluginStatusOK describes a response with status code 200, with default header values.

OK
*/
type GetPluginStatusOK struct {
	Payload *models.TypesDeploymentStatus
}

// IsSuccess returns true when this get plugin status o k response has a 2xx status code
func (o *GetPluginStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get plugin status o k response has a 3xx status code
func (o *GetPluginStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin status o k response has a 4xx status code
func (o *GetPluginStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plugin status o k response has a 5xx status code
func (o *GetPluginStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin status o k response a status code equal to that given
func (o *GetPluginStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get plugin status o k response
func (o *GetPluginStatusOK) Code() int {
	return 200
}

func (o *GetPluginStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/status][%d] getPluginStatusOK %s", 200, payload)
}

func (o *GetPluginStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/status][%d] getPluginStatusOK %s", 200, payload)
}

func (o *GetPluginStatusOK) GetPayload() *models.TypesDeploymentStatus {
	return o.Payload
}

func (o *GetPluginStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TypesDeploymentStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetPluginStatusNotFound creates a GetPluginStatusNotFound with default headers values
func NewGetPluginStatusNotFound() *GetPluginStatusNotFound {
	return &GetPluginStatusNotFound{}
}

/*
GetPluginStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPluginStatusNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get plugin status not found response has a 2xx status code
func (o *GetPluginStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin status not found response has a 3xx status code
func (o *GetPluginStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin status not found response has a 4xx status code
func (o *GetPluginStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plugin status not found response has a 5xx status code
func (o *GetPluginStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin status not found response a status code equal to that given
func (o *GetPluginStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get plugin status not found response
func (o *GetPluginStatusNotFound) Code() int {
	return 404
}

func (o *GetPluginStatusNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/status][%d] getPluginStatusNotFound %s", 404, payload)
}

func (o *GetPluginStatusNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/status][%d] getPluginStatusNotFound %s", 404, payload)
}

func (o *GetPluginStatusNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetPluginStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetPluginStatusInternalServerError creates a GetPluginStatusInternalServerError with default headers values
func NewGetPluginStatusInternalServerError() *GetPluginStatusInternalServerError {
	return &GetPluginStatusInternalServerError{}
}

/*
GetPluginStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetPluginStatusInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get plugin status internal server error response has a 2xx status code
func (o *GetPluginStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin status internal server error response has a 3xx status code
func (o *GetPluginStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin status internal server error response has a 4xx status code
func (o *GetPluginStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plugin status internal server error response has a 5xx status code
func (o *GetPluginStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get plugin status internal server error response a status code equal to that given
func (o *GetPluginStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get plugin status internal server error response
func (o *GetPluginStatusInternalServerError) Code() int {
	return 500
}

func (o *GetPluginStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/status][%d] getPluginStatusInternalServerError %s", 500, payload)
}

func (o *GetPluginStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugins/{name}/status][%d] getPluginStatusInternalServerError %s", 500, payload)
}

func (o *GetPluginStatusInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetPluginStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
