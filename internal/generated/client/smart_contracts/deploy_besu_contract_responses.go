// Code generated by go-swagger; DO NOT EDIT.

package smart_contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DeployBesuContractReader is a Reader for the DeployBesuContract structure.
type DeployBesuContractReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeployBesuContractReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewDeployBesuContractOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeployBesuContractBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeployBesuContractInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /sc/besu/deploy] deployBesuContract", response, response.Code())
	}
}

// NewDeployBesuContractOK creates a DeployBesuContractOK with default headers values
func NewDeployBesuContractOK() *DeployBesuContractOK {
	return &DeployBesuContractOK{}
}

/*
DeployBesuContractOK describes a response with status code 200, with default header values.

OK
*/
type DeployBesuContractOK struct {
	Payload *models.ChainlaunchdeployBesuDeployResponse
}

// IsSuccess returns true when this deploy besu contract o k response has a 2xx status code
func (o *DeployBesuContractOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deploy besu contract o k response has a 3xx status code
func (o *DeployBesuContractOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy besu contract o k response has a 4xx status code
func (o *DeployBesuContractOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this deploy besu contract o k response has a 5xx status code
func (o *DeployBesuContractOK) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy besu contract o k response a status code equal to that given
func (o *DeployBesuContractOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the deploy besu contract o k response
func (o *DeployBesuContractOK) Code() int {
	return 200
}

func (o *DeployBesuContractOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/besu/deploy][%d] deployBesuContractOK %s", 200, payload)
}

func (o *DeployBesuContractOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/besu/deploy][%d] deployBesuContractOK %s", 200, payload)
}

func (o *DeployBesuContractOK) GetPayload() *models.ChainlaunchdeployBesuDeployResponse {
	return o.Payload
}

func (o *DeployBesuContractOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChainlaunchdeployBesuDeployResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeployBesuContractBadRequest creates a DeployBesuContractBadRequest with default headers values
func NewDeployBesuContractBadRequest() *DeployBesuContractBadRequest {
	return &DeployBesuContractBadRequest{}
}

/*
DeployBesuContractBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeployBesuContractBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this deploy besu contract bad request response has a 2xx status code
func (o *DeployBesuContractBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy besu contract bad request response has a 3xx status code
func (o *DeployBesuContractBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy besu contract bad request response has a 4xx status code
func (o *DeployBesuContractBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this deploy besu contract bad request response has a 5xx status code
func (o *DeployBesuContractBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy besu contract bad request response a status code equal to that given
func (o *DeployBesuContractBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the deploy besu contract bad request response
func (o *DeployBesuContractBadRequest) Code() int {
	return 400
}

func (o *DeployBesuContractBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/besu/deploy][%d] deployBesuContractBadRequest %s", 400, payload)
}

func (o *DeployBesuContractBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/besu/deploy][%d] deployBesuContractBadRequest %s", 400, payload)
}

func (o *DeployBesuContractBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeployBesuContractBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeployBesuContractInternalServerError creates a DeployBesuContractInternalServerError with default headers values
func NewDeployBesuContractInternalServerError() *DeployBesuContractInternalServerError {
	return &DeployBesuContractInternalServerError{}
}

/*
DeployBesuContractInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeployBesuContractInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this deploy besu contract internal server error response has a 2xx status code
func (o *DeployBesuContractInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy besu contract internal server error response has a 3xx status code
func (o *DeployBesuContractInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy besu contract internal server error response has a 4xx status code
func (o *DeployBesuContractInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this deploy besu contract internal server error response has a 5xx status code
func (o *DeployBesuContractInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this deploy besu contract internal server error response a status code equal to that given
func (o *DeployBesuContractInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the deploy besu contract internal server error response
func (o *DeployBesuContractInternalServerError) Code() int {
	return 500
}

func (o *DeployBesuContractInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/besu/deploy][%d] deployBesuContractInternalServerError %s", 500, payload)
}

func (o *DeployBesuContractInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/besu/deploy][%d] deployBesuContractInternalServerError %s", 500, payload)
}

func (o *DeployBesuContractInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeployBesuContractInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
