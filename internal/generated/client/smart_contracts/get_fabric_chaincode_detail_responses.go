// Code generated by go-swagger; DO NOT EDIT.

package smart_contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetFabricChaincodeDetailReader is a Reader for the GetFabricChaincodeDetail structure.
type GetFabricChaincodeDetailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricChaincodeDetailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricChaincodeDetailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFabricChaincodeDetailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFabricChaincodeDetailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFabricChaincodeDetailInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /sc/fabric/chaincodes/{id}] getFabricChaincodeDetail", response, response.Code())
	}
}

// NewGetFabricChaincodeDetailOK creates a GetFabricChaincodeDetailOK with default headers values
func NewGetFabricChaincodeDetailOK() *GetFabricChaincodeDetailOK {
	return &GetFabricChaincodeDetailOK{}
}

/*
GetFabricChaincodeDetailOK describes a response with status code 200, with default header values.

OK
*/
type GetFabricChaincodeDetailOK struct {
	Payload *models.ChainlaunchdeployChaincodeResponse
}

// IsSuccess returns true when this get fabric chaincode detail o k response has a 2xx status code
func (o *GetFabricChaincodeDetailOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric chaincode detail o k response has a 3xx status code
func (o *GetFabricChaincodeDetailOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric chaincode detail o k response has a 4xx status code
func (o *GetFabricChaincodeDetailOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric chaincode detail o k response has a 5xx status code
func (o *GetFabricChaincodeDetailOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric chaincode detail o k response a status code equal to that given
func (o *GetFabricChaincodeDetailOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fabric chaincode detail o k response
func (o *GetFabricChaincodeDetailOK) Code() int {
	return 200
}

func (o *GetFabricChaincodeDetailOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{id}][%d] getFabricChaincodeDetailOK %s", 200, payload)
}

func (o *GetFabricChaincodeDetailOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{id}][%d] getFabricChaincodeDetailOK %s", 200, payload)
}

func (o *GetFabricChaincodeDetailOK) GetPayload() *models.ChainlaunchdeployChaincodeResponse {
	return o.Payload
}

func (o *GetFabricChaincodeDetailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChainlaunchdeployChaincodeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricChaincodeDetailBadRequest creates a GetFabricChaincodeDetailBadRequest with default headers values
func NewGetFabricChaincodeDetailBadRequest() *GetFabricChaincodeDetailBadRequest {
	return &GetFabricChaincodeDetailBadRequest{}
}

/*
GetFabricChaincodeDetailBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFabricChaincodeDetailBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get fabric chaincode detail bad request response has a 2xx status code
func (o *GetFabricChaincodeDetailBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric chaincode detail bad request response has a 3xx status code
func (o *GetFabricChaincodeDetailBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric chaincode detail bad request response has a 4xx status code
func (o *GetFabricChaincodeDetailBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric chaincode detail bad request response has a 5xx status code
func (o *GetFabricChaincodeDetailBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric chaincode detail bad request response a status code equal to that given
func (o *GetFabricChaincodeDetailBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fabric chaincode detail bad request response
func (o *GetFabricChaincodeDetailBadRequest) Code() int {
	return 400
}

func (o *GetFabricChaincodeDetailBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{id}][%d] getFabricChaincodeDetailBadRequest %s", 400, payload)
}

func (o *GetFabricChaincodeDetailBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{id}][%d] getFabricChaincodeDetailBadRequest %s", 400, payload)
}

func (o *GetFabricChaincodeDetailBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetFabricChaincodeDetailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricChaincodeDetailNotFound creates a GetFabricChaincodeDetailNotFound with default headers values
func NewGetFabricChaincodeDetailNotFound() *GetFabricChaincodeDetailNotFound {
	return &GetFabricChaincodeDetailNotFound{}
}

/*
GetFabricChaincodeDetailNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFabricChaincodeDetailNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get fabric chaincode detail not found response has a 2xx status code
func (o *GetFabricChaincodeDetailNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric chaincode detail not found response has a 3xx status code
func (o *GetFabricChaincodeDetailNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric chaincode detail not found response has a 4xx status code
func (o *GetFabricChaincodeDetailNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric chaincode detail not found response has a 5xx status code
func (o *GetFabricChaincodeDetailNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric chaincode detail not found response a status code equal to that given
func (o *GetFabricChaincodeDetailNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get fabric chaincode detail not found response
func (o *GetFabricChaincodeDetailNotFound) Code() int {
	return 404
}

func (o *GetFabricChaincodeDetailNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{id}][%d] getFabricChaincodeDetailNotFound %s", 404, payload)
}

func (o *GetFabricChaincodeDetailNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{id}][%d] getFabricChaincodeDetailNotFound %s", 404, payload)
}

func (o *GetFabricChaincodeDetailNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetFabricChaincodeDetailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricChaincodeDetailInternalServerError creates a GetFabricChaincodeDetailInternalServerError with default headers values
func NewGetFabricChaincodeDetailInternalServerError() *GetFabricChaincodeDetailInternalServerError {
	return &GetFabricChaincodeDetailInternalServerError{}
}

/*
GetFabricChaincodeDetailInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFabricChaincodeDetailInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get fabric chaincode detail internal server error response has a 2xx status code
func (o *GetFabricChaincodeDetailInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric chaincode detail internal server error response has a 3xx status code
func (o *GetFabricChaincodeDetailInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric chaincode detail internal server error response has a 4xx status code
func (o *GetFabricChaincodeDetailInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric chaincode detail internal server error response has a 5xx status code
func (o *GetFabricChaincodeDetailInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fabric chaincode detail internal server error response a status code equal to that given
func (o *GetFabricChaincodeDetailInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fabric chaincode detail internal server error response
func (o *GetFabricChaincodeDetailInternalServerError) Code() int {
	return 500
}

func (o *GetFabricChaincodeDetailInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{id}][%d] getFabricChaincodeDetailInternalServerError %s", 500, payload)
}

func (o *GetFabricChaincodeDetailInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{id}][%d] getFabricChaincodeDetailInternalServerError %s", 500, payload)
}

func (o *GetFabricChaincodeDetailInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetFabricChaincodeDetailInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
