// Code generated by go-swagger; DO NOT EDIT.

package smart_contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// InstallFabricChaincodeReader is a Reader for the InstallFabricChaincode structure.
type InstallFabricChaincodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InstallFabricChaincodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewInstallFabricChaincodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInstallFabricChaincodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInstallFabricChaincodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /sc/fabric/peer/{peerId}/chaincode/install] installFabricChaincode", response, response.Code())
	}
}

// NewInstallFabricChaincodeOK creates a InstallFabricChaincodeOK with default headers values
func NewInstallFabricChaincodeOK() *InstallFabricChaincodeOK {
	return &InstallFabricChaincodeOK{}
}

/*
InstallFabricChaincodeOK describes a response with status code 200, with default header values.

OK
*/
type InstallFabricChaincodeOK struct {
	Payload *models.ChainlaunchdeployFabricInstallResponse
}

// IsSuccess returns true when this install fabric chaincode o k response has a 2xx status code
func (o *InstallFabricChaincodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this install fabric chaincode o k response has a 3xx status code
func (o *InstallFabricChaincodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install fabric chaincode o k response has a 4xx status code
func (o *InstallFabricChaincodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this install fabric chaincode o k response has a 5xx status code
func (o *InstallFabricChaincodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this install fabric chaincode o k response a status code equal to that given
func (o *InstallFabricChaincodeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the install fabric chaincode o k response
func (o *InstallFabricChaincodeOK) Code() int {
	return 200
}

func (o *InstallFabricChaincodeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/peer/{peerId}/chaincode/install][%d] installFabricChaincodeOK %s", 200, payload)
}

func (o *InstallFabricChaincodeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/peer/{peerId}/chaincode/install][%d] installFabricChaincodeOK %s", 200, payload)
}

func (o *InstallFabricChaincodeOK) GetPayload() *models.ChainlaunchdeployFabricInstallResponse {
	return o.Payload
}

func (o *InstallFabricChaincodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChainlaunchdeployFabricInstallResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewInstallFabricChaincodeBadRequest creates a InstallFabricChaincodeBadRequest with default headers values
func NewInstallFabricChaincodeBadRequest() *InstallFabricChaincodeBadRequest {
	return &InstallFabricChaincodeBadRequest{}
}

/*
InstallFabricChaincodeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InstallFabricChaincodeBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this install fabric chaincode bad request response has a 2xx status code
func (o *InstallFabricChaincodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install fabric chaincode bad request response has a 3xx status code
func (o *InstallFabricChaincodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install fabric chaincode bad request response has a 4xx status code
func (o *InstallFabricChaincodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this install fabric chaincode bad request response has a 5xx status code
func (o *InstallFabricChaincodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this install fabric chaincode bad request response a status code equal to that given
func (o *InstallFabricChaincodeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the install fabric chaincode bad request response
func (o *InstallFabricChaincodeBadRequest) Code() int {
	return 400
}

func (o *InstallFabricChaincodeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/peer/{peerId}/chaincode/install][%d] installFabricChaincodeBadRequest %s", 400, payload)
}

func (o *InstallFabricChaincodeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/peer/{peerId}/chaincode/install][%d] installFabricChaincodeBadRequest %s", 400, payload)
}

func (o *InstallFabricChaincodeBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *InstallFabricChaincodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewInstallFabricChaincodeInternalServerError creates a InstallFabricChaincodeInternalServerError with default headers values
func NewInstallFabricChaincodeInternalServerError() *InstallFabricChaincodeInternalServerError {
	return &InstallFabricChaincodeInternalServerError{}
}

/*
InstallFabricChaincodeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type InstallFabricChaincodeInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this install fabric chaincode internal server error response has a 2xx status code
func (o *InstallFabricChaincodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this install fabric chaincode internal server error response has a 3xx status code
func (o *InstallFabricChaincodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this install fabric chaincode internal server error response has a 4xx status code
func (o *InstallFabricChaincodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this install fabric chaincode internal server error response has a 5xx status code
func (o *InstallFabricChaincodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this install fabric chaincode internal server error response a status code equal to that given
func (o *InstallFabricChaincodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the install fabric chaincode internal server error response
func (o *InstallFabricChaincodeInternalServerError) Code() int {
	return 500
}

func (o *InstallFabricChaincodeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/peer/{peerId}/chaincode/install][%d] installFabricChaincodeInternalServerError %s", 500, payload)
}

func (o *InstallFabricChaincodeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/peer/{peerId}/chaincode/install][%d] installFabricChaincodeInternalServerError %s", 500, payload)
}

func (o *InstallFabricChaincodeInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *InstallFabricChaincodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
