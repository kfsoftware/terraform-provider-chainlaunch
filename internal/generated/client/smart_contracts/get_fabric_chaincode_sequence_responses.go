// Code generated by go-swagger; DO NOT EDIT.

package smart_contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetFabricChaincodeSequenceReader is a Reader for the GetFabricChaincodeSequence structure.
type GetFabricChaincodeSequenceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricChaincodeSequenceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricChaincodeSequenceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFabricChaincodeSequenceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFabricChaincodeSequenceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /sc/fabric/peer/{peerId}/chaincode/sequence] getFabricChaincodeSequence", response, response.Code())
	}
}

// NewGetFabricChaincodeSequenceOK creates a GetFabricChaincodeSequenceOK with default headers values
func NewGetFabricChaincodeSequenceOK() *GetFabricChaincodeSequenceOK {
	return &GetFabricChaincodeSequenceOK{}
}

/*
GetFabricChaincodeSequenceOK describes a response with status code 200, with default header values.

OK
*/
type GetFabricChaincodeSequenceOK struct {
	Payload *models.ChainlaunchdeployFabricSequenceResponse
}

// IsSuccess returns true when this get fabric chaincode sequence o k response has a 2xx status code
func (o *GetFabricChaincodeSequenceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric chaincode sequence o k response has a 3xx status code
func (o *GetFabricChaincodeSequenceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric chaincode sequence o k response has a 4xx status code
func (o *GetFabricChaincodeSequenceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric chaincode sequence o k response has a 5xx status code
func (o *GetFabricChaincodeSequenceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric chaincode sequence o k response a status code equal to that given
func (o *GetFabricChaincodeSequenceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get fabric chaincode sequence o k response
func (o *GetFabricChaincodeSequenceOK) Code() int {
	return 200
}

func (o *GetFabricChaincodeSequenceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/peer/{peerId}/chaincode/sequence][%d] getFabricChaincodeSequenceOK %s", 200, payload)
}

func (o *GetFabricChaincodeSequenceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/peer/{peerId}/chaincode/sequence][%d] getFabricChaincodeSequenceOK %s", 200, payload)
}

func (o *GetFabricChaincodeSequenceOK) GetPayload() *models.ChainlaunchdeployFabricSequenceResponse {
	return o.Payload
}

func (o *GetFabricChaincodeSequenceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChainlaunchdeployFabricSequenceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricChaincodeSequenceBadRequest creates a GetFabricChaincodeSequenceBadRequest with default headers values
func NewGetFabricChaincodeSequenceBadRequest() *GetFabricChaincodeSequenceBadRequest {
	return &GetFabricChaincodeSequenceBadRequest{}
}

/*
GetFabricChaincodeSequenceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFabricChaincodeSequenceBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get fabric chaincode sequence bad request response has a 2xx status code
func (o *GetFabricChaincodeSequenceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric chaincode sequence bad request response has a 3xx status code
func (o *GetFabricChaincodeSequenceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric chaincode sequence bad request response has a 4xx status code
func (o *GetFabricChaincodeSequenceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric chaincode sequence bad request response has a 5xx status code
func (o *GetFabricChaincodeSequenceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric chaincode sequence bad request response a status code equal to that given
func (o *GetFabricChaincodeSequenceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get fabric chaincode sequence bad request response
func (o *GetFabricChaincodeSequenceBadRequest) Code() int {
	return 400
}

func (o *GetFabricChaincodeSequenceBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/peer/{peerId}/chaincode/sequence][%d] getFabricChaincodeSequenceBadRequest %s", 400, payload)
}

func (o *GetFabricChaincodeSequenceBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/peer/{peerId}/chaincode/sequence][%d] getFabricChaincodeSequenceBadRequest %s", 400, payload)
}

func (o *GetFabricChaincodeSequenceBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetFabricChaincodeSequenceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetFabricChaincodeSequenceInternalServerError creates a GetFabricChaincodeSequenceInternalServerError with default headers values
func NewGetFabricChaincodeSequenceInternalServerError() *GetFabricChaincodeSequenceInternalServerError {
	return &GetFabricChaincodeSequenceInternalServerError{}
}

/*
GetFabricChaincodeSequenceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFabricChaincodeSequenceInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get fabric chaincode sequence internal server error response has a 2xx status code
func (o *GetFabricChaincodeSequenceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric chaincode sequence internal server error response has a 3xx status code
func (o *GetFabricChaincodeSequenceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric chaincode sequence internal server error response has a 4xx status code
func (o *GetFabricChaincodeSequenceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric chaincode sequence internal server error response has a 5xx status code
func (o *GetFabricChaincodeSequenceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get fabric chaincode sequence internal server error response a status code equal to that given
func (o *GetFabricChaincodeSequenceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get fabric chaincode sequence internal server error response
func (o *GetFabricChaincodeSequenceInternalServerError) Code() int {
	return 500
}

func (o *GetFabricChaincodeSequenceInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/peer/{peerId}/chaincode/sequence][%d] getFabricChaincodeSequenceInternalServerError %s", 500, payload)
}

func (o *GetFabricChaincodeSequenceInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/peer/{peerId}/chaincode/sequence][%d] getFabricChaincodeSequenceInternalServerError %s", 500, payload)
}

func (o *GetFabricChaincodeSequenceInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetFabricChaincodeSequenceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
