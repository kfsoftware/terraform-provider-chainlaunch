// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCDecodeInputReader is a Reader for the GetNodesIDRPCDecodeInput structure.
type GetNodesIDRPCDecodeInputReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCDecodeInputReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCDecodeInputOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCDecodeInputBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCDecodeInputNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCDecodeInputInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/decode-input] GetNodesIDRPCDecodeInput", response, response.Code())
	}
}

// NewGetNodesIDRPCDecodeInputOK creates a GetNodesIDRPCDecodeInputOK with default headers values
func NewGetNodesIDRPCDecodeInputOK() *GetNodesIDRPCDecodeInputOK {
	return &GetNodesIDRPCDecodeInputOK{}
}

/*
GetNodesIDRPCDecodeInputOK describes a response with status code 200, with default header values.

Decoded input data with parameter values
*/
type GetNodesIDRPCDecodeInputOK struct {
	Payload any
}

// IsSuccess returns true when this get nodes Id Rpc decode input o k response has a 2xx status code
func (o *GetNodesIDRPCDecodeInputOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc decode input o k response has a 3xx status code
func (o *GetNodesIDRPCDecodeInputOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc decode input o k response has a 4xx status code
func (o *GetNodesIDRPCDecodeInputOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc decode input o k response has a 5xx status code
func (o *GetNodesIDRPCDecodeInputOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc decode input o k response a status code equal to that given
func (o *GetNodesIDRPCDecodeInputOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc decode input o k response
func (o *GetNodesIDRPCDecodeInputOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCDecodeInputOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/decode-input][%d] getNodesIdRpcDecodeInputOK %s", 200, payload)
}

func (o *GetNodesIDRPCDecodeInputOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/decode-input][%d] getNodesIdRpcDecodeInputOK %s", 200, payload)
}

func (o *GetNodesIDRPCDecodeInputOK) GetPayload() any {
	return o.Payload
}

func (o *GetNodesIDRPCDecodeInputOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCDecodeInputBadRequest creates a GetNodesIDRPCDecodeInputBadRequest with default headers values
func NewGetNodesIDRPCDecodeInputBadRequest() *GetNodesIDRPCDecodeInputBadRequest {
	return &GetNodesIDRPCDecodeInputBadRequest{}
}

/*
GetNodesIDRPCDecodeInputBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCDecodeInputBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc decode input bad request response has a 2xx status code
func (o *GetNodesIDRPCDecodeInputBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc decode input bad request response has a 3xx status code
func (o *GetNodesIDRPCDecodeInputBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc decode input bad request response has a 4xx status code
func (o *GetNodesIDRPCDecodeInputBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc decode input bad request response has a 5xx status code
func (o *GetNodesIDRPCDecodeInputBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc decode input bad request response a status code equal to that given
func (o *GetNodesIDRPCDecodeInputBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc decode input bad request response
func (o *GetNodesIDRPCDecodeInputBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCDecodeInputBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/decode-input][%d] getNodesIdRpcDecodeInputBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCDecodeInputBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/decode-input][%d] getNodesIdRpcDecodeInputBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCDecodeInputBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCDecodeInputBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCDecodeInputNotFound creates a GetNodesIDRPCDecodeInputNotFound with default headers values
func NewGetNodesIDRPCDecodeInputNotFound() *GetNodesIDRPCDecodeInputNotFound {
	return &GetNodesIDRPCDecodeInputNotFound{}
}

/*
GetNodesIDRPCDecodeInputNotFound describes a response with status code 404, with default header values.

Node not found or signature not found
*/
type GetNodesIDRPCDecodeInputNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc decode input not found response has a 2xx status code
func (o *GetNodesIDRPCDecodeInputNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc decode input not found response has a 3xx status code
func (o *GetNodesIDRPCDecodeInputNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc decode input not found response has a 4xx status code
func (o *GetNodesIDRPCDecodeInputNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc decode input not found response has a 5xx status code
func (o *GetNodesIDRPCDecodeInputNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc decode input not found response a status code equal to that given
func (o *GetNodesIDRPCDecodeInputNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc decode input not found response
func (o *GetNodesIDRPCDecodeInputNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCDecodeInputNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/decode-input][%d] getNodesIdRpcDecodeInputNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCDecodeInputNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/decode-input][%d] getNodesIdRpcDecodeInputNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCDecodeInputNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCDecodeInputNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCDecodeInputInternalServerError creates a GetNodesIDRPCDecodeInputInternalServerError with default headers values
func NewGetNodesIDRPCDecodeInputInternalServerError() *GetNodesIDRPCDecodeInputInternalServerError {
	return &GetNodesIDRPCDecodeInputInternalServerError{}
}

/*
GetNodesIDRPCDecodeInputInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCDecodeInputInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc decode input internal server error response has a 2xx status code
func (o *GetNodesIDRPCDecodeInputInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc decode input internal server error response has a 3xx status code
func (o *GetNodesIDRPCDecodeInputInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc decode input internal server error response has a 4xx status code
func (o *GetNodesIDRPCDecodeInputInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc decode input internal server error response has a 5xx status code
func (o *GetNodesIDRPCDecodeInputInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc decode input internal server error response a status code equal to that given
func (o *GetNodesIDRPCDecodeInputInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc decode input internal server error response
func (o *GetNodesIDRPCDecodeInputInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCDecodeInputInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/decode-input][%d] getNodesIdRpcDecodeInputInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCDecodeInputInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/decode-input][%d] getNodesIdRpcDecodeInputInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCDecodeInputInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCDecodeInputInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
