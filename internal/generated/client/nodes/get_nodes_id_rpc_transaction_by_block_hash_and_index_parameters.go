// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetNodesIDRPCTransactionByBlockHashAndIndexParams creates a new GetNodesIDRPCTransactionByBlockHashAndIndexParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetNodesIDRPCTransactionByBlockHashAndIndexParams() *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	return &GetNodesIDRPCTransactionByBlockHashAndIndexParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetNodesIDRPCTransactionByBlockHashAndIndexParamsWithTimeout creates a new GetNodesIDRPCTransactionByBlockHashAndIndexParams object
// with the ability to set a timeout on a request.
func NewGetNodesIDRPCTransactionByBlockHashAndIndexParamsWithTimeout(timeout time.Duration) *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	return &GetNodesIDRPCTransactionByBlockHashAndIndexParams{
		timeout: timeout,
	}
}

// NewGetNodesIDRPCTransactionByBlockHashAndIndexParamsWithContext creates a new GetNodesIDRPCTransactionByBlockHashAndIndexParams object
// with the ability to set a context for a request.
func NewGetNodesIDRPCTransactionByBlockHashAndIndexParamsWithContext(ctx context.Context) *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	return &GetNodesIDRPCTransactionByBlockHashAndIndexParams{
		Context: ctx,
	}
}

// NewGetNodesIDRPCTransactionByBlockHashAndIndexParamsWithHTTPClient creates a new GetNodesIDRPCTransactionByBlockHashAndIndexParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetNodesIDRPCTransactionByBlockHashAndIndexParamsWithHTTPClient(client *http.Client) *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	return &GetNodesIDRPCTransactionByBlockHashAndIndexParams{
		HTTPClient: client,
	}
}

/*
GetNodesIDRPCTransactionByBlockHashAndIndexParams contains all the parameters to send to the API endpoint

	for the get nodes ID RPC transaction by block hash and index operation.

	Typically these are written to a http.Request.
*/
type GetNodesIDRPCTransactionByBlockHashAndIndexParams struct {

	/* Hash.

	   Block hash
	*/
	Hash string

	/* ID.

	   Node ID
	*/
	ID int64

	/* Index.

	   Transaction index
	*/
	Index string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get nodes ID RPC transaction by block hash and index params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) WithDefaults() *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get nodes ID RPC transaction by block hash and index params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) WithTimeout(timeout time.Duration) *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) WithContext(ctx context.Context) *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) WithHTTPClient(client *http.Client) *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHash adds the hash to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) WithHash(hash string) *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	o.SetHash(hash)
	return o
}

// SetHash adds the hash to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) SetHash(hash string) {
	o.Hash = hash
}

// WithID adds the id to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) WithID(id int64) *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) SetID(id int64) {
	o.ID = id
}

// WithIndex adds the index to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) WithIndex(index string) *GetNodesIDRPCTransactionByBlockHashAndIndexParams {
	o.SetIndex(index)
	return o
}

// SetIndex adds the index to the get nodes ID RPC transaction by block hash and index params
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) SetIndex(index string) {
	o.Index = index
}

// WriteToRequest writes these params to a swagger request
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param hash
	qrHash := o.Hash
	qHash := qrHash
	if qHash != "" {

		if err := r.SetQueryParam("hash", qHash); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	// query param index
	qrIndex := o.Index
	qIndex := qrIndex
	if qIndex != "" {

		if err := r.SetQueryParam("index", qIndex); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
