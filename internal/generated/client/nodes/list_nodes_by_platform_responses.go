// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListNodesByPlatformReader is a Reader for the ListNodesByPlatform structure.
type ListNodesByPlatformReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListNodesByPlatformReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListNodesByPlatformOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListNodesByPlatformBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListNodesByPlatformInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/platform/{platform}] listNodesByPlatform", response, response.Code())
	}
}

// NewListNodesByPlatformOK creates a ListNodesByPlatformOK with default headers values
func NewListNodesByPlatformOK() *ListNodesByPlatformOK {
	return &ListNodesByPlatformOK{}
}

/*
ListNodesByPlatformOK describes a response with status code 200, with default header values.

OK
*/
type ListNodesByPlatformOK struct {
	Payload *models.HTTPPaginatedNodesResponse
}

// IsSuccess returns true when this list nodes by platform o k response has a 2xx status code
func (o *ListNodesByPlatformOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list nodes by platform o k response has a 3xx status code
func (o *ListNodesByPlatformOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list nodes by platform o k response has a 4xx status code
func (o *ListNodesByPlatformOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list nodes by platform o k response has a 5xx status code
func (o *ListNodesByPlatformOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list nodes by platform o k response a status code equal to that given
func (o *ListNodesByPlatformOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list nodes by platform o k response
func (o *ListNodesByPlatformOK) Code() int {
	return 200
}

func (o *ListNodesByPlatformOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/platform/{platform}][%d] listNodesByPlatformOK %s", 200, payload)
}

func (o *ListNodesByPlatformOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/platform/{platform}][%d] listNodesByPlatformOK %s", 200, payload)
}

func (o *ListNodesByPlatformOK) GetPayload() *models.HTTPPaginatedNodesResponse {
	return o.Payload
}

func (o *ListNodesByPlatformOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPPaginatedNodesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListNodesByPlatformBadRequest creates a ListNodesByPlatformBadRequest with default headers values
func NewListNodesByPlatformBadRequest() *ListNodesByPlatformBadRequest {
	return &ListNodesByPlatformBadRequest{}
}

/*
ListNodesByPlatformBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type ListNodesByPlatformBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list nodes by platform bad request response has a 2xx status code
func (o *ListNodesByPlatformBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list nodes by platform bad request response has a 3xx status code
func (o *ListNodesByPlatformBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list nodes by platform bad request response has a 4xx status code
func (o *ListNodesByPlatformBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list nodes by platform bad request response has a 5xx status code
func (o *ListNodesByPlatformBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list nodes by platform bad request response a status code equal to that given
func (o *ListNodesByPlatformBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list nodes by platform bad request response
func (o *ListNodesByPlatformBadRequest) Code() int {
	return 400
}

func (o *ListNodesByPlatformBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/platform/{platform}][%d] listNodesByPlatformBadRequest %s", 400, payload)
}

func (o *ListNodesByPlatformBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/platform/{platform}][%d] listNodesByPlatformBadRequest %s", 400, payload)
}

func (o *ListNodesByPlatformBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListNodesByPlatformBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListNodesByPlatformInternalServerError creates a ListNodesByPlatformInternalServerError with default headers values
func NewListNodesByPlatformInternalServerError() *ListNodesByPlatformInternalServerError {
	return &ListNodesByPlatformInternalServerError{}
}

/*
ListNodesByPlatformInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ListNodesByPlatformInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list nodes by platform internal server error response has a 2xx status code
func (o *ListNodesByPlatformInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list nodes by platform internal server error response has a 3xx status code
func (o *ListNodesByPlatformInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list nodes by platform internal server error response has a 4xx status code
func (o *ListNodesByPlatformInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list nodes by platform internal server error response has a 5xx status code
func (o *ListNodesByPlatformInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list nodes by platform internal server error response a status code equal to that given
func (o *ListNodesByPlatformInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list nodes by platform internal server error response
func (o *ListNodesByPlatformInternalServerError) Code() int {
	return 500
}

func (o *ListNodesByPlatformInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/platform/{platform}][%d] listNodesByPlatformInternalServerError %s", 500, payload)
}

func (o *ListNodesByPlatformInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/platform/{platform}][%d] listNodesByPlatformInternalServerError %s", 500, payload)
}

func (o *ListNodesByPlatformInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListNodesByPlatformInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
