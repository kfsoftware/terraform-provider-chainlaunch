// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetNodesIDRPCCodeParams creates a new GetNodesIDRPCCodeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetNodesIDRPCCodeParams() *GetNodesIDRPCCodeParams {
	return &GetNodesIDRPCCodeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetNodesIDRPCCodeParamsWithTimeout creates a new GetNodesIDRPCCodeParams object
// with the ability to set a timeout on a request.
func NewGetNodesIDRPCCodeParamsWithTimeout(timeout time.Duration) *GetNodesIDRPCCodeParams {
	return &GetNodesIDRPCCodeParams{
		timeout: timeout,
	}
}

// NewGetNodesIDRPCCodeParamsWithContext creates a new GetNodesIDRPCCodeParams object
// with the ability to set a context for a request.
func NewGetNodesIDRPCCodeParamsWithContext(ctx context.Context) *GetNodesIDRPCCodeParams {
	return &GetNodesIDRPCCodeParams{
		Context: ctx,
	}
}

// NewGetNodesIDRPCCodeParamsWithHTTPClient creates a new GetNodesIDRPCCodeParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetNodesIDRPCCodeParamsWithHTTPClient(client *http.Client) *GetNodesIDRPCCodeParams {
	return &GetNodesIDRPCCodeParams{
		HTTPClient: client,
	}
}

/*
GetNodesIDRPCCodeParams contains all the parameters to send to the API endpoint

	for the get nodes ID RPC code operation.

	Typically these are written to a http.Request.
*/
type GetNodesIDRPCCodeParams struct {

	/* Address.

	   Contract address
	*/
	Address string

	/* BlockTag.

	   Block tag (default: latest)
	*/
	BlockTag *string

	/* ID.

	   Node ID
	*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get nodes ID RPC code params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNodesIDRPCCodeParams) WithDefaults() *GetNodesIDRPCCodeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get nodes ID RPC code params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNodesIDRPCCodeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) WithTimeout(timeout time.Duration) *GetNodesIDRPCCodeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) WithContext(ctx context.Context) *GetNodesIDRPCCodeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) WithHTTPClient(client *http.Client) *GetNodesIDRPCCodeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddress adds the address to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) WithAddress(address string) *GetNodesIDRPCCodeParams {
	o.SetAddress(address)
	return o
}

// SetAddress adds the address to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) SetAddress(address string) {
	o.Address = address
}

// WithBlockTag adds the blockTag to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) WithBlockTag(blockTag *string) *GetNodesIDRPCCodeParams {
	o.SetBlockTag(blockTag)
	return o
}

// SetBlockTag adds the blockTag to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) SetBlockTag(blockTag *string) {
	o.BlockTag = blockTag
}

// WithID adds the id to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) WithID(id int64) *GetNodesIDRPCCodeParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get nodes ID RPC code params
func (o *GetNodesIDRPCCodeParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *GetNodesIDRPCCodeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param address
	qrAddress := o.Address
	qAddress := qrAddress
	if qAddress != "" {

		if err := r.SetQueryParam("address", qAddress); err != nil {
			return err
		}
	}

	if o.BlockTag != nil {

		// query param blockTag
		var qrBlockTag string

		if o.BlockTag != nil {
			qrBlockTag = *o.BlockTag
		}
		qBlockTag := qrBlockTag
		if qBlockTag != "" {

			if err := r.SetQueryParam("blockTag", qBlockTag); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
