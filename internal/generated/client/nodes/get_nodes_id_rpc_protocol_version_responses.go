// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCProtocolVersionReader is a Reader for the GetNodesIDRPCProtocolVersion structure.
type GetNodesIDRPCProtocolVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCProtocolVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCProtocolVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCProtocolVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCProtocolVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCProtocolVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/protocol-version] GetNodesIDRPCProtocolVersion", response, response.Code())
	}
}

// NewGetNodesIDRPCProtocolVersionOK creates a GetNodesIDRPCProtocolVersionOK with default headers values
func NewGetNodesIDRPCProtocolVersionOK() *GetNodesIDRPCProtocolVersionOK {
	return &GetNodesIDRPCProtocolVersionOK{}
}

/*
GetNodesIDRPCProtocolVersionOK describes a response with status code 200, with default header values.

Protocol version in hex
*/
type GetNodesIDRPCProtocolVersionOK struct {
	Payload string
}

// IsSuccess returns true when this get nodes Id Rpc protocol version o k response has a 2xx status code
func (o *GetNodesIDRPCProtocolVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc protocol version o k response has a 3xx status code
func (o *GetNodesIDRPCProtocolVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc protocol version o k response has a 4xx status code
func (o *GetNodesIDRPCProtocolVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc protocol version o k response has a 5xx status code
func (o *GetNodesIDRPCProtocolVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc protocol version o k response a status code equal to that given
func (o *GetNodesIDRPCProtocolVersionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc protocol version o k response
func (o *GetNodesIDRPCProtocolVersionOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCProtocolVersionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/protocol-version][%d] getNodesIdRpcProtocolVersionOK %s", 200, payload)
}

func (o *GetNodesIDRPCProtocolVersionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/protocol-version][%d] getNodesIdRpcProtocolVersionOK %s", 200, payload)
}

func (o *GetNodesIDRPCProtocolVersionOK) GetPayload() string {
	return o.Payload
}

func (o *GetNodesIDRPCProtocolVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCProtocolVersionBadRequest creates a GetNodesIDRPCProtocolVersionBadRequest with default headers values
func NewGetNodesIDRPCProtocolVersionBadRequest() *GetNodesIDRPCProtocolVersionBadRequest {
	return &GetNodesIDRPCProtocolVersionBadRequest{}
}

/*
GetNodesIDRPCProtocolVersionBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCProtocolVersionBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc protocol version bad request response has a 2xx status code
func (o *GetNodesIDRPCProtocolVersionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc protocol version bad request response has a 3xx status code
func (o *GetNodesIDRPCProtocolVersionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc protocol version bad request response has a 4xx status code
func (o *GetNodesIDRPCProtocolVersionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc protocol version bad request response has a 5xx status code
func (o *GetNodesIDRPCProtocolVersionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc protocol version bad request response a status code equal to that given
func (o *GetNodesIDRPCProtocolVersionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc protocol version bad request response
func (o *GetNodesIDRPCProtocolVersionBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCProtocolVersionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/protocol-version][%d] getNodesIdRpcProtocolVersionBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCProtocolVersionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/protocol-version][%d] getNodesIdRpcProtocolVersionBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCProtocolVersionBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCProtocolVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCProtocolVersionNotFound creates a GetNodesIDRPCProtocolVersionNotFound with default headers values
func NewGetNodesIDRPCProtocolVersionNotFound() *GetNodesIDRPCProtocolVersionNotFound {
	return &GetNodesIDRPCProtocolVersionNotFound{}
}

/*
GetNodesIDRPCProtocolVersionNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodesIDRPCProtocolVersionNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc protocol version not found response has a 2xx status code
func (o *GetNodesIDRPCProtocolVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc protocol version not found response has a 3xx status code
func (o *GetNodesIDRPCProtocolVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc protocol version not found response has a 4xx status code
func (o *GetNodesIDRPCProtocolVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc protocol version not found response has a 5xx status code
func (o *GetNodesIDRPCProtocolVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc protocol version not found response a status code equal to that given
func (o *GetNodesIDRPCProtocolVersionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc protocol version not found response
func (o *GetNodesIDRPCProtocolVersionNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCProtocolVersionNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/protocol-version][%d] getNodesIdRpcProtocolVersionNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCProtocolVersionNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/protocol-version][%d] getNodesIdRpcProtocolVersionNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCProtocolVersionNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCProtocolVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCProtocolVersionInternalServerError creates a GetNodesIDRPCProtocolVersionInternalServerError with default headers values
func NewGetNodesIDRPCProtocolVersionInternalServerError() *GetNodesIDRPCProtocolVersionInternalServerError {
	return &GetNodesIDRPCProtocolVersionInternalServerError{}
}

/*
GetNodesIDRPCProtocolVersionInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCProtocolVersionInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc protocol version internal server error response has a 2xx status code
func (o *GetNodesIDRPCProtocolVersionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc protocol version internal server error response has a 3xx status code
func (o *GetNodesIDRPCProtocolVersionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc protocol version internal server error response has a 4xx status code
func (o *GetNodesIDRPCProtocolVersionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc protocol version internal server error response has a 5xx status code
func (o *GetNodesIDRPCProtocolVersionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc protocol version internal server error response a status code equal to that given
func (o *GetNodesIDRPCProtocolVersionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc protocol version internal server error response
func (o *GetNodesIDRPCProtocolVersionInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCProtocolVersionInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/protocol-version][%d] getNodesIdRpcProtocolVersionInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCProtocolVersionInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/protocol-version][%d] getNodesIdRpcProtocolVersionInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCProtocolVersionInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCProtocolVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
