// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCBlockByHashReader is a Reader for the GetNodesIDRPCBlockByHash structure.
type GetNodesIDRPCBlockByHashReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCBlockByHashReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCBlockByHashOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCBlockByHashBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCBlockByHashNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCBlockByHashInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/block-by-hash] GetNodesIDRPCBlockByHash", response, response.Code())
	}
}

// NewGetNodesIDRPCBlockByHashOK creates a GetNodesIDRPCBlockByHashOK with default headers values
func NewGetNodesIDRPCBlockByHashOK() *GetNodesIDRPCBlockByHashOK {
	return &GetNodesIDRPCBlockByHashOK{}
}

/*
GetNodesIDRPCBlockByHashOK describes a response with status code 200, with default header values.

Block object
*/
type GetNodesIDRPCBlockByHashOK struct {
	Payload any
}

// IsSuccess returns true when this get nodes Id Rpc block by hash o k response has a 2xx status code
func (o *GetNodesIDRPCBlockByHashOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc block by hash o k response has a 3xx status code
func (o *GetNodesIDRPCBlockByHashOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block by hash o k response has a 4xx status code
func (o *GetNodesIDRPCBlockByHashOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc block by hash o k response has a 5xx status code
func (o *GetNodesIDRPCBlockByHashOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc block by hash o k response a status code equal to that given
func (o *GetNodesIDRPCBlockByHashOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc block by hash o k response
func (o *GetNodesIDRPCBlockByHashOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCBlockByHashOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-by-hash][%d] getNodesIdRpcBlockByHashOK %s", 200, payload)
}

func (o *GetNodesIDRPCBlockByHashOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-by-hash][%d] getNodesIdRpcBlockByHashOK %s", 200, payload)
}

func (o *GetNodesIDRPCBlockByHashOK) GetPayload() any {
	return o.Payload
}

func (o *GetNodesIDRPCBlockByHashOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBlockByHashBadRequest creates a GetNodesIDRPCBlockByHashBadRequest with default headers values
func NewGetNodesIDRPCBlockByHashBadRequest() *GetNodesIDRPCBlockByHashBadRequest {
	return &GetNodesIDRPCBlockByHashBadRequest{}
}

/*
GetNodesIDRPCBlockByHashBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCBlockByHashBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc block by hash bad request response has a 2xx status code
func (o *GetNodesIDRPCBlockByHashBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc block by hash bad request response has a 3xx status code
func (o *GetNodesIDRPCBlockByHashBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block by hash bad request response has a 4xx status code
func (o *GetNodesIDRPCBlockByHashBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc block by hash bad request response has a 5xx status code
func (o *GetNodesIDRPCBlockByHashBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc block by hash bad request response a status code equal to that given
func (o *GetNodesIDRPCBlockByHashBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc block by hash bad request response
func (o *GetNodesIDRPCBlockByHashBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCBlockByHashBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-by-hash][%d] getNodesIdRpcBlockByHashBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCBlockByHashBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-by-hash][%d] getNodesIdRpcBlockByHashBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCBlockByHashBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBlockByHashBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBlockByHashNotFound creates a GetNodesIDRPCBlockByHashNotFound with default headers values
func NewGetNodesIDRPCBlockByHashNotFound() *GetNodesIDRPCBlockByHashNotFound {
	return &GetNodesIDRPCBlockByHashNotFound{}
}

/*
GetNodesIDRPCBlockByHashNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodesIDRPCBlockByHashNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc block by hash not found response has a 2xx status code
func (o *GetNodesIDRPCBlockByHashNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc block by hash not found response has a 3xx status code
func (o *GetNodesIDRPCBlockByHashNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block by hash not found response has a 4xx status code
func (o *GetNodesIDRPCBlockByHashNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc block by hash not found response has a 5xx status code
func (o *GetNodesIDRPCBlockByHashNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc block by hash not found response a status code equal to that given
func (o *GetNodesIDRPCBlockByHashNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc block by hash not found response
func (o *GetNodesIDRPCBlockByHashNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCBlockByHashNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-by-hash][%d] getNodesIdRpcBlockByHashNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCBlockByHashNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-by-hash][%d] getNodesIdRpcBlockByHashNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCBlockByHashNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBlockByHashNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBlockByHashInternalServerError creates a GetNodesIDRPCBlockByHashInternalServerError with default headers values
func NewGetNodesIDRPCBlockByHashInternalServerError() *GetNodesIDRPCBlockByHashInternalServerError {
	return &GetNodesIDRPCBlockByHashInternalServerError{}
}

/*
GetNodesIDRPCBlockByHashInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCBlockByHashInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc block by hash internal server error response has a 2xx status code
func (o *GetNodesIDRPCBlockByHashInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc block by hash internal server error response has a 3xx status code
func (o *GetNodesIDRPCBlockByHashInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block by hash internal server error response has a 4xx status code
func (o *GetNodesIDRPCBlockByHashInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc block by hash internal server error response has a 5xx status code
func (o *GetNodesIDRPCBlockByHashInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc block by hash internal server error response a status code equal to that given
func (o *GetNodesIDRPCBlockByHashInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc block by hash internal server error response
func (o *GetNodesIDRPCBlockByHashInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCBlockByHashInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-by-hash][%d] getNodesIdRpcBlockByHashInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCBlockByHashInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-by-hash][%d] getNodesIdRpcBlockByHashInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCBlockByHashInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBlockByHashInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
