// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCTransactionByBlockNumberAndIndexReader is a Reader for the GetNodesIDRPCTransactionByBlockNumberAndIndex structure.
type GetNodesIDRPCTransactionByBlockNumberAndIndexReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCTransactionByBlockNumberAndIndexOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCTransactionByBlockNumberAndIndexNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/transaction-by-block-number-and-index] GetNodesIDRPCTransactionByBlockNumberAndIndex", response, response.Code())
	}
}

// NewGetNodesIDRPCTransactionByBlockNumberAndIndexOK creates a GetNodesIDRPCTransactionByBlockNumberAndIndexOK with default headers values
func NewGetNodesIDRPCTransactionByBlockNumberAndIndexOK() *GetNodesIDRPCTransactionByBlockNumberAndIndexOK {
	return &GetNodesIDRPCTransactionByBlockNumberAndIndexOK{}
}

/*
GetNodesIDRPCTransactionByBlockNumberAndIndexOK describes a response with status code 200, with default header values.

Transaction object
*/
type GetNodesIDRPCTransactionByBlockNumberAndIndexOK struct {
	Payload any
}

// IsSuccess returns true when this get nodes Id Rpc transaction by block number and index o k response has a 2xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc transaction by block number and index o k response has a 3xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction by block number and index o k response has a 4xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc transaction by block number and index o k response has a 5xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc transaction by block number and index o k response a status code equal to that given
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc transaction by block number and index o k response
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-number-and-index][%d] getNodesIdRpcTransactionByBlockNumberAndIndexOK %s", 200, payload)
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-number-and-index][%d] getNodesIdRpcTransactionByBlockNumberAndIndexOK %s", 200, payload)
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexOK) GetPayload() any {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest creates a GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest with default headers values
func NewGetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest() *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest {
	return &GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest{}
}

/*
GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc transaction by block number and index bad request response has a 2xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc transaction by block number and index bad request response has a 3xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction by block number and index bad request response has a 4xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc transaction by block number and index bad request response has a 5xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc transaction by block number and index bad request response a status code equal to that given
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc transaction by block number and index bad request response
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-number-and-index][%d] getNodesIdRpcTransactionByBlockNumberAndIndexBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-number-and-index][%d] getNodesIdRpcTransactionByBlockNumberAndIndexBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCTransactionByBlockNumberAndIndexNotFound creates a GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound with default headers values
func NewGetNodesIDRPCTransactionByBlockNumberAndIndexNotFound() *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound {
	return &GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound{}
}

/*
GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc transaction by block number and index not found response has a 2xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc transaction by block number and index not found response has a 3xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction by block number and index not found response has a 4xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc transaction by block number and index not found response has a 5xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc transaction by block number and index not found response a status code equal to that given
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc transaction by block number and index not found response
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-number-and-index][%d] getNodesIdRpcTransactionByBlockNumberAndIndexNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-number-and-index][%d] getNodesIdRpcTransactionByBlockNumberAndIndexNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError creates a GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError with default headers values
func NewGetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError() *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError {
	return &GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError{}
}

/*
GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc transaction by block number and index internal server error response has a 2xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc transaction by block number and index internal server error response has a 3xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction by block number and index internal server error response has a 4xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc transaction by block number and index internal server error response has a 5xx status code
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc transaction by block number and index internal server error response a status code equal to that given
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc transaction by block number and index internal server error response
func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-number-and-index][%d] getNodesIdRpcTransactionByBlockNumberAndIndexInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-number-and-index][%d] getNodesIdRpcTransactionByBlockNumberAndIndexInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionByBlockNumberAndIndexInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
