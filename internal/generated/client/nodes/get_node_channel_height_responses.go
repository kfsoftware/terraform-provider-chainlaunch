// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodeChannelHeightReader is a Reader for the GetNodeChannelHeight structure.
type GetNodeChannelHeightReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeChannelHeightReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodeChannelHeightOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodeChannelHeightBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodeChannelHeightNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodeChannelHeightInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/channels/{channelID}/height] getNodeChannelHeight", response, response.Code())
	}
}

// NewGetNodeChannelHeightOK creates a GetNodeChannelHeightOK with default headers values
func NewGetNodeChannelHeightOK() *GetNodeChannelHeightOK {
	return &GetNodeChannelHeightOK{}
}

/*
GetNodeChannelHeightOK describes a response with status code 200, with default header values.

OK
*/
type GetNodeChannelHeightOK struct {
	Payload *models.ServiceChannelHeightResponse
}

// IsSuccess returns true when this get node channel height o k response has a 2xx status code
func (o *GetNodeChannelHeightOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get node channel height o k response has a 3xx status code
func (o *GetNodeChannelHeightOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node channel height o k response has a 4xx status code
func (o *GetNodeChannelHeightOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node channel height o k response has a 5xx status code
func (o *GetNodeChannelHeightOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get node channel height o k response a status code equal to that given
func (o *GetNodeChannelHeightOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get node channel height o k response
func (o *GetNodeChannelHeightOK) Code() int {
	return 200
}

func (o *GetNodeChannelHeightOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/height][%d] getNodeChannelHeightOK %s", 200, payload)
}

func (o *GetNodeChannelHeightOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/height][%d] getNodeChannelHeightOK %s", 200, payload)
}

func (o *GetNodeChannelHeightOK) GetPayload() *models.ServiceChannelHeightResponse {
	return o.Payload
}

func (o *GetNodeChannelHeightOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceChannelHeightResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeChannelHeightBadRequest creates a GetNodeChannelHeightBadRequest with default headers values
func NewGetNodeChannelHeightBadRequest() *GetNodeChannelHeightBadRequest {
	return &GetNodeChannelHeightBadRequest{}
}

/*
GetNodeChannelHeightBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodeChannelHeightBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node channel height bad request response has a 2xx status code
func (o *GetNodeChannelHeightBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node channel height bad request response has a 3xx status code
func (o *GetNodeChannelHeightBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node channel height bad request response has a 4xx status code
func (o *GetNodeChannelHeightBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node channel height bad request response has a 5xx status code
func (o *GetNodeChannelHeightBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get node channel height bad request response a status code equal to that given
func (o *GetNodeChannelHeightBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get node channel height bad request response
func (o *GetNodeChannelHeightBadRequest) Code() int {
	return 400
}

func (o *GetNodeChannelHeightBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/height][%d] getNodeChannelHeightBadRequest %s", 400, payload)
}

func (o *GetNodeChannelHeightBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/height][%d] getNodeChannelHeightBadRequest %s", 400, payload)
}

func (o *GetNodeChannelHeightBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeChannelHeightBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeChannelHeightNotFound creates a GetNodeChannelHeightNotFound with default headers values
func NewGetNodeChannelHeightNotFound() *GetNodeChannelHeightNotFound {
	return &GetNodeChannelHeightNotFound{}
}

/*
GetNodeChannelHeightNotFound describes a response with status code 404, with default header values.

Node not found or channel not found
*/
type GetNodeChannelHeightNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node channel height not found response has a 2xx status code
func (o *GetNodeChannelHeightNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node channel height not found response has a 3xx status code
func (o *GetNodeChannelHeightNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node channel height not found response has a 4xx status code
func (o *GetNodeChannelHeightNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node channel height not found response has a 5xx status code
func (o *GetNodeChannelHeightNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get node channel height not found response a status code equal to that given
func (o *GetNodeChannelHeightNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get node channel height not found response
func (o *GetNodeChannelHeightNotFound) Code() int {
	return 404
}

func (o *GetNodeChannelHeightNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/height][%d] getNodeChannelHeightNotFound %s", 404, payload)
}

func (o *GetNodeChannelHeightNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/height][%d] getNodeChannelHeightNotFound %s", 404, payload)
}

func (o *GetNodeChannelHeightNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeChannelHeightNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeChannelHeightInternalServerError creates a GetNodeChannelHeightInternalServerError with default headers values
func NewGetNodeChannelHeightInternalServerError() *GetNodeChannelHeightInternalServerError {
	return &GetNodeChannelHeightInternalServerError{}
}

/*
GetNodeChannelHeightInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodeChannelHeightInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node channel height internal server error response has a 2xx status code
func (o *GetNodeChannelHeightInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node channel height internal server error response has a 3xx status code
func (o *GetNodeChannelHeightInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node channel height internal server error response has a 4xx status code
func (o *GetNodeChannelHeightInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node channel height internal server error response has a 5xx status code
func (o *GetNodeChannelHeightInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get node channel height internal server error response a status code equal to that given
func (o *GetNodeChannelHeightInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get node channel height internal server error response
func (o *GetNodeChannelHeightInternalServerError) Code() int {
	return 500
}

func (o *GetNodeChannelHeightInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/height][%d] getNodeChannelHeightInternalServerError %s", 500, payload)
}

func (o *GetNodeChannelHeightInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/height][%d] getNodeChannelHeightInternalServerError %s", 500, payload)
}

func (o *GetNodeChannelHeightInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeChannelHeightInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
