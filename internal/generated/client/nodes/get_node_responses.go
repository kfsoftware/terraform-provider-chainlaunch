// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodeReader is a Reader for the GetNode structure.
type GetNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}] getNode", response, response.Code())
	}
}

// NewGetNodeOK creates a GetNodeOK with default headers values
func NewGetNodeOK() *GetNodeOK {
	return &GetNodeOK{}
}

/*
GetNodeOK describes a response with status code 200, with default header values.

OK
*/
type GetNodeOK struct {
	Payload *models.HTTPNodeResponse
}

// IsSuccess returns true when this get node o k response has a 2xx status code
func (o *GetNodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get node o k response has a 3xx status code
func (o *GetNodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node o k response has a 4xx status code
func (o *GetNodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node o k response has a 5xx status code
func (o *GetNodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get node o k response a status code equal to that given
func (o *GetNodeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get node o k response
func (o *GetNodeOK) Code() int {
	return 200
}

func (o *GetNodeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}][%d] getNodeOK %s", 200, payload)
}

func (o *GetNodeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}][%d] getNodeOK %s", 200, payload)
}

func (o *GetNodeOK) GetPayload() *models.HTTPNodeResponse {
	return o.Payload
}

func (o *GetNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPNodeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeBadRequest creates a GetNodeBadRequest with default headers values
func NewGetNodeBadRequest() *GetNodeBadRequest {
	return &GetNodeBadRequest{}
}

/*
GetNodeBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodeBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node bad request response has a 2xx status code
func (o *GetNodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node bad request response has a 3xx status code
func (o *GetNodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node bad request response has a 4xx status code
func (o *GetNodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node bad request response has a 5xx status code
func (o *GetNodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get node bad request response a status code equal to that given
func (o *GetNodeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get node bad request response
func (o *GetNodeBadRequest) Code() int {
	return 400
}

func (o *GetNodeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}][%d] getNodeBadRequest %s", 400, payload)
}

func (o *GetNodeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}][%d] getNodeBadRequest %s", 400, payload)
}

func (o *GetNodeBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeNotFound creates a GetNodeNotFound with default headers values
func NewGetNodeNotFound() *GetNodeNotFound {
	return &GetNodeNotFound{}
}

/*
GetNodeNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodeNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node not found response has a 2xx status code
func (o *GetNodeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node not found response has a 3xx status code
func (o *GetNodeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node not found response has a 4xx status code
func (o *GetNodeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node not found response has a 5xx status code
func (o *GetNodeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get node not found response a status code equal to that given
func (o *GetNodeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get node not found response
func (o *GetNodeNotFound) Code() int {
	return 404
}

func (o *GetNodeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}][%d] getNodeNotFound %s", 404, payload)
}

func (o *GetNodeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}][%d] getNodeNotFound %s", 404, payload)
}

func (o *GetNodeNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeInternalServerError creates a GetNodeInternalServerError with default headers values
func NewGetNodeInternalServerError() *GetNodeInternalServerError {
	return &GetNodeInternalServerError{}
}

/*
GetNodeInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodeInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node internal server error response has a 2xx status code
func (o *GetNodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node internal server error response has a 3xx status code
func (o *GetNodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node internal server error response has a 4xx status code
func (o *GetNodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node internal server error response has a 5xx status code
func (o *GetNodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get node internal server error response a status code equal to that given
func (o *GetNodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get node internal server error response
func (o *GetNodeInternalServerError) Code() int {
	return 500
}

func (o *GetNodeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}][%d] getNodeInternalServerError %s", 500, payload)
}

func (o *GetNodeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}][%d] getNodeInternalServerError %s", 500, payload)
}

func (o *GetNodeInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
