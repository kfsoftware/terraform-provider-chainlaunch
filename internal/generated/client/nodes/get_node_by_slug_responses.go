// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodeBySlugReader is a Reader for the GetNodeBySlug structure.
type GetNodeBySlugReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeBySlugReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodeBySlugOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetNodeBySlugNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodeBySlugInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/slug/{slug}] getNodeBySlug", response, response.Code())
	}
}

// NewGetNodeBySlugOK creates a GetNodeBySlugOK with default headers values
func NewGetNodeBySlugOK() *GetNodeBySlugOK {
	return &GetNodeBySlugOK{}
}

/*
GetNodeBySlugOK describes a response with status code 200, with default header values.

OK
*/
type GetNodeBySlugOK struct {
	Payload *models.HTTPNodeResponse
}

// IsSuccess returns true when this get node by slug o k response has a 2xx status code
func (o *GetNodeBySlugOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get node by slug o k response has a 3xx status code
func (o *GetNodeBySlugOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node by slug o k response has a 4xx status code
func (o *GetNodeBySlugOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node by slug o k response has a 5xx status code
func (o *GetNodeBySlugOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get node by slug o k response a status code equal to that given
func (o *GetNodeBySlugOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get node by slug o k response
func (o *GetNodeBySlugOK) Code() int {
	return 200
}

func (o *GetNodeBySlugOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/slug/{slug}][%d] getNodeBySlugOK %s", 200, payload)
}

func (o *GetNodeBySlugOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/slug/{slug}][%d] getNodeBySlugOK %s", 200, payload)
}

func (o *GetNodeBySlugOK) GetPayload() *models.HTTPNodeResponse {
	return o.Payload
}

func (o *GetNodeBySlugOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPNodeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeBySlugNotFound creates a GetNodeBySlugNotFound with default headers values
func NewGetNodeBySlugNotFound() *GetNodeBySlugNotFound {
	return &GetNodeBySlugNotFound{}
}

/*
GetNodeBySlugNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodeBySlugNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node by slug not found response has a 2xx status code
func (o *GetNodeBySlugNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node by slug not found response has a 3xx status code
func (o *GetNodeBySlugNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node by slug not found response has a 4xx status code
func (o *GetNodeBySlugNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node by slug not found response has a 5xx status code
func (o *GetNodeBySlugNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get node by slug not found response a status code equal to that given
func (o *GetNodeBySlugNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get node by slug not found response
func (o *GetNodeBySlugNotFound) Code() int {
	return 404
}

func (o *GetNodeBySlugNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/slug/{slug}][%d] getNodeBySlugNotFound %s", 404, payload)
}

func (o *GetNodeBySlugNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/slug/{slug}][%d] getNodeBySlugNotFound %s", 404, payload)
}

func (o *GetNodeBySlugNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeBySlugNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeBySlugInternalServerError creates a GetNodeBySlugInternalServerError with default headers values
func NewGetNodeBySlugInternalServerError() *GetNodeBySlugInternalServerError {
	return &GetNodeBySlugInternalServerError{}
}

/*
GetNodeBySlugInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodeBySlugInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node by slug internal server error response has a 2xx status code
func (o *GetNodeBySlugInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node by slug internal server error response has a 3xx status code
func (o *GetNodeBySlugInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node by slug internal server error response has a 4xx status code
func (o *GetNodeBySlugInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node by slug internal server error response has a 5xx status code
func (o *GetNodeBySlugInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get node by slug internal server error response a status code equal to that given
func (o *GetNodeBySlugInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get node by slug internal server error response
func (o *GetNodeBySlugInternalServerError) Code() int {
	return 500
}

func (o *GetNodeBySlugInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/slug/{slug}][%d] getNodeBySlugInternalServerError %s", 500, payload)
}

func (o *GetNodeBySlugInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/slug/{slug}][%d] getNodeBySlugInternalServerError %s", 500, payload)
}

func (o *GetNodeBySlugInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeBySlugInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
