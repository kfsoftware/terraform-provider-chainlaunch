// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DeleteNodeReader is a Reader for the DeleteNode structure.
type DeleteNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteNodeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /nodes/{id}] deleteNode", response, response.Code())
	}
}

// NewDeleteNodeNoContent creates a DeleteNodeNoContent with default headers values
func NewDeleteNodeNoContent() *DeleteNodeNoContent {
	return &DeleteNodeNoContent{}
}

/*
DeleteNodeNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteNodeNoContent struct {
}

// IsSuccess returns true when this delete node no content response has a 2xx status code
func (o *DeleteNodeNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete node no content response has a 3xx status code
func (o *DeleteNodeNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete node no content response has a 4xx status code
func (o *DeleteNodeNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete node no content response has a 5xx status code
func (o *DeleteNodeNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete node no content response a status code equal to that given
func (o *DeleteNodeNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete node no content response
func (o *DeleteNodeNoContent) Code() int {
	return 204
}

func (o *DeleteNodeNoContent) Error() string {
	return fmt.Sprintf("[DELETE /nodes/{id}][%d] deleteNodeNoContent", 204)
}

func (o *DeleteNodeNoContent) String() string {
	return fmt.Sprintf("[DELETE /nodes/{id}][%d] deleteNodeNoContent", 204)
}

func (o *DeleteNodeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNodeBadRequest creates a DeleteNodeBadRequest with default headers values
func NewDeleteNodeBadRequest() *DeleteNodeBadRequest {
	return &DeleteNodeBadRequest{}
}

/*
DeleteNodeBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type DeleteNodeBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete node bad request response has a 2xx status code
func (o *DeleteNodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete node bad request response has a 3xx status code
func (o *DeleteNodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete node bad request response has a 4xx status code
func (o *DeleteNodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete node bad request response has a 5xx status code
func (o *DeleteNodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete node bad request response a status code equal to that given
func (o *DeleteNodeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete node bad request response
func (o *DeleteNodeBadRequest) Code() int {
	return 400
}

func (o *DeleteNodeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /nodes/{id}][%d] deleteNodeBadRequest %s", 400, payload)
}

func (o *DeleteNodeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /nodes/{id}][%d] deleteNodeBadRequest %s", 400, payload)
}

func (o *DeleteNodeBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteNodeNotFound creates a DeleteNodeNotFound with default headers values
func NewDeleteNodeNotFound() *DeleteNodeNotFound {
	return &DeleteNodeNotFound{}
}

/*
DeleteNodeNotFound describes a response with status code 404, with default header values.

Node not found
*/
type DeleteNodeNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete node not found response has a 2xx status code
func (o *DeleteNodeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete node not found response has a 3xx status code
func (o *DeleteNodeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete node not found response has a 4xx status code
func (o *DeleteNodeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete node not found response has a 5xx status code
func (o *DeleteNodeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete node not found response a status code equal to that given
func (o *DeleteNodeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete node not found response
func (o *DeleteNodeNotFound) Code() int {
	return 404
}

func (o *DeleteNodeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /nodes/{id}][%d] deleteNodeNotFound %s", 404, payload)
}

func (o *DeleteNodeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /nodes/{id}][%d] deleteNodeNotFound %s", 404, payload)
}

func (o *DeleteNodeNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteNodeInternalServerError creates a DeleteNodeInternalServerError with default headers values
func NewDeleteNodeInternalServerError() *DeleteNodeInternalServerError {
	return &DeleteNodeInternalServerError{}
}

/*
DeleteNodeInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteNodeInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this delete node internal server error response has a 2xx status code
func (o *DeleteNodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete node internal server error response has a 3xx status code
func (o *DeleteNodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete node internal server error response has a 4xx status code
func (o *DeleteNodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete node internal server error response has a 5xx status code
func (o *DeleteNodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete node internal server error response a status code equal to that given
func (o *DeleteNodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete node internal server error response
func (o *DeleteNodeInternalServerError) Code() int {
	return 500
}

func (o *DeleteNodeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /nodes/{id}][%d] deleteNodeInternalServerError %s", 500, payload)
}

func (o *DeleteNodeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /nodes/{id}][%d] deleteNodeInternalServerError %s", 500, payload)
}

func (o *DeleteNodeInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *DeleteNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
