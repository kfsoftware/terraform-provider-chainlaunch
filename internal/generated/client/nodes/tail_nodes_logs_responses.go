// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// TailNodesLogsReader is a Reader for the TailNodesLogs structure.
type TailNodesLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TailNodesLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewTailNodesLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTailNodesLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTailNodesLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTailNodesLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/logs] tailNodesLogs", response, response.Code())
	}
}

// NewTailNodesLogsOK creates a TailNodesLogsOK with default headers values
func NewTailNodesLogsOK() *TailNodesLogsOK {
	return &TailNodesLogsOK{}
}

/*
TailNodesLogsOK describes a response with status code 200, with default header values.

Log stream
*/
type TailNodesLogsOK struct {
	Payload string
}

// IsSuccess returns true when this tail nodes logs o k response has a 2xx status code
func (o *TailNodesLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this tail nodes logs o k response has a 3xx status code
func (o *TailNodesLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tail nodes logs o k response has a 4xx status code
func (o *TailNodesLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this tail nodes logs o k response has a 5xx status code
func (o *TailNodesLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this tail nodes logs o k response a status code equal to that given
func (o *TailNodesLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the tail nodes logs o k response
func (o *TailNodesLogsOK) Code() int {
	return 200
}

func (o *TailNodesLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs][%d] tailNodesLogsOK %s", 200, payload)
}

func (o *TailNodesLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs][%d] tailNodesLogsOK %s", 200, payload)
}

func (o *TailNodesLogsOK) GetPayload() string {
	return o.Payload
}

func (o *TailNodesLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewTailNodesLogsBadRequest creates a TailNodesLogsBadRequest with default headers values
func NewTailNodesLogsBadRequest() *TailNodesLogsBadRequest {
	return &TailNodesLogsBadRequest{}
}

/*
TailNodesLogsBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type TailNodesLogsBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this tail nodes logs bad request response has a 2xx status code
func (o *TailNodesLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tail nodes logs bad request response has a 3xx status code
func (o *TailNodesLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tail nodes logs bad request response has a 4xx status code
func (o *TailNodesLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this tail nodes logs bad request response has a 5xx status code
func (o *TailNodesLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this tail nodes logs bad request response a status code equal to that given
func (o *TailNodesLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the tail nodes logs bad request response
func (o *TailNodesLogsBadRequest) Code() int {
	return 400
}

func (o *TailNodesLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs][%d] tailNodesLogsBadRequest %s", 400, payload)
}

func (o *TailNodesLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs][%d] tailNodesLogsBadRequest %s", 400, payload)
}

func (o *TailNodesLogsBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *TailNodesLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewTailNodesLogsNotFound creates a TailNodesLogsNotFound with default headers values
func NewTailNodesLogsNotFound() *TailNodesLogsNotFound {
	return &TailNodesLogsNotFound{}
}

/*
TailNodesLogsNotFound describes a response with status code 404, with default header values.

Node not found
*/
type TailNodesLogsNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this tail nodes logs not found response has a 2xx status code
func (o *TailNodesLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tail nodes logs not found response has a 3xx status code
func (o *TailNodesLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tail nodes logs not found response has a 4xx status code
func (o *TailNodesLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this tail nodes logs not found response has a 5xx status code
func (o *TailNodesLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this tail nodes logs not found response a status code equal to that given
func (o *TailNodesLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the tail nodes logs not found response
func (o *TailNodesLogsNotFound) Code() int {
	return 404
}

func (o *TailNodesLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs][%d] tailNodesLogsNotFound %s", 404, payload)
}

func (o *TailNodesLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs][%d] tailNodesLogsNotFound %s", 404, payload)
}

func (o *TailNodesLogsNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *TailNodesLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewTailNodesLogsInternalServerError creates a TailNodesLogsInternalServerError with default headers values
func NewTailNodesLogsInternalServerError() *TailNodesLogsInternalServerError {
	return &TailNodesLogsInternalServerError{}
}

/*
TailNodesLogsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type TailNodesLogsInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this tail nodes logs internal server error response has a 2xx status code
func (o *TailNodesLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tail nodes logs internal server error response has a 3xx status code
func (o *TailNodesLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tail nodes logs internal server error response has a 4xx status code
func (o *TailNodesLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this tail nodes logs internal server error response has a 5xx status code
func (o *TailNodesLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this tail nodes logs internal server error response a status code equal to that given
func (o *TailNodesLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the tail nodes logs internal server error response
func (o *TailNodesLogsInternalServerError) Code() int {
	return 500
}

func (o *TailNodesLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs][%d] tailNodesLogsInternalServerError %s", 500, payload)
}

func (o *TailNodesLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/logs][%d] tailNodesLogsInternalServerError %s", 500, payload)
}

func (o *TailNodesLogsInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *TailNodesLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
