// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodeChaincodesReader is a Reader for the GetNodeChaincodes structure.
type GetNodeChaincodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeChaincodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodeChaincodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodeChaincodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodeChaincodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodeChaincodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/channels/{channelID}/chaincodes] getNodeChaincodes", response, response.Code())
	}
}

// NewGetNodeChaincodesOK creates a GetNodeChaincodesOK with default headers values
func NewGetNodeChaincodesOK() *GetNodeChaincodesOK {
	return &GetNodeChaincodesOK{}
}

/*
GetNodeChaincodesOK describes a response with status code 200, with default header values.

OK
*/
type GetNodeChaincodesOK struct {
	Payload []*models.HTTPChaincodeResponse
}

// IsSuccess returns true when this get node chaincodes o k response has a 2xx status code
func (o *GetNodeChaincodesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get node chaincodes o k response has a 3xx status code
func (o *GetNodeChaincodesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node chaincodes o k response has a 4xx status code
func (o *GetNodeChaincodesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node chaincodes o k response has a 5xx status code
func (o *GetNodeChaincodesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get node chaincodes o k response a status code equal to that given
func (o *GetNodeChaincodesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get node chaincodes o k response
func (o *GetNodeChaincodesOK) Code() int {
	return 200
}

func (o *GetNodeChaincodesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/chaincodes][%d] getNodeChaincodesOK %s", 200, payload)
}

func (o *GetNodeChaincodesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/chaincodes][%d] getNodeChaincodesOK %s", 200, payload)
}

func (o *GetNodeChaincodesOK) GetPayload() []*models.HTTPChaincodeResponse {
	return o.Payload
}

func (o *GetNodeChaincodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeChaincodesBadRequest creates a GetNodeChaincodesBadRequest with default headers values
func NewGetNodeChaincodesBadRequest() *GetNodeChaincodesBadRequest {
	return &GetNodeChaincodesBadRequest{}
}

/*
GetNodeChaincodesBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodeChaincodesBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node chaincodes bad request response has a 2xx status code
func (o *GetNodeChaincodesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node chaincodes bad request response has a 3xx status code
func (o *GetNodeChaincodesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node chaincodes bad request response has a 4xx status code
func (o *GetNodeChaincodesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node chaincodes bad request response has a 5xx status code
func (o *GetNodeChaincodesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get node chaincodes bad request response a status code equal to that given
func (o *GetNodeChaincodesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get node chaincodes bad request response
func (o *GetNodeChaincodesBadRequest) Code() int {
	return 400
}

func (o *GetNodeChaincodesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/chaincodes][%d] getNodeChaincodesBadRequest %s", 400, payload)
}

func (o *GetNodeChaincodesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/chaincodes][%d] getNodeChaincodesBadRequest %s", 400, payload)
}

func (o *GetNodeChaincodesBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeChaincodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeChaincodesNotFound creates a GetNodeChaincodesNotFound with default headers values
func NewGetNodeChaincodesNotFound() *GetNodeChaincodesNotFound {
	return &GetNodeChaincodesNotFound{}
}

/*
GetNodeChaincodesNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodeChaincodesNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node chaincodes not found response has a 2xx status code
func (o *GetNodeChaincodesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node chaincodes not found response has a 3xx status code
func (o *GetNodeChaincodesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node chaincodes not found response has a 4xx status code
func (o *GetNodeChaincodesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node chaincodes not found response has a 5xx status code
func (o *GetNodeChaincodesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get node chaincodes not found response a status code equal to that given
func (o *GetNodeChaincodesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get node chaincodes not found response
func (o *GetNodeChaincodesNotFound) Code() int {
	return 404
}

func (o *GetNodeChaincodesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/chaincodes][%d] getNodeChaincodesNotFound %s", 404, payload)
}

func (o *GetNodeChaincodesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/chaincodes][%d] getNodeChaincodesNotFound %s", 404, payload)
}

func (o *GetNodeChaincodesNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeChaincodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeChaincodesInternalServerError creates a GetNodeChaincodesInternalServerError with default headers values
func NewGetNodeChaincodesInternalServerError() *GetNodeChaincodesInternalServerError {
	return &GetNodeChaincodesInternalServerError{}
}

/*
GetNodeChaincodesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodeChaincodesInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node chaincodes internal server error response has a 2xx status code
func (o *GetNodeChaincodesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node chaincodes internal server error response has a 3xx status code
func (o *GetNodeChaincodesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node chaincodes internal server error response has a 4xx status code
func (o *GetNodeChaincodesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node chaincodes internal server error response has a 5xx status code
func (o *GetNodeChaincodesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get node chaincodes internal server error response a status code equal to that given
func (o *GetNodeChaincodesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get node chaincodes internal server error response
func (o *GetNodeChaincodesInternalServerError) Code() int {
	return 500
}

func (o *GetNodeChaincodesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/chaincodes][%d] getNodeChaincodesInternalServerError %s", 500, payload)
}

func (o *GetNodeChaincodesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels/{channelID}/chaincodes][%d] getNodeChaincodesInternalServerError %s", 500, payload)
}

func (o *GetNodeChaincodesInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeChaincodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
