// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCChainIDReader is a Reader for the GetNodesIDRPCChainID structure.
type GetNodesIDRPCChainIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCChainIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCChainIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCChainIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCChainIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCChainIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/chain-id] GetNodesIDRPCChainID", response, response.Code())
	}
}

// NewGetNodesIDRPCChainIDOK creates a GetNodesIDRPCChainIDOK with default headers values
func NewGetNodesIDRPCChainIDOK() *GetNodesIDRPCChainIDOK {
	return &GetNodesIDRPCChainIDOK{}
}

/*
GetNodesIDRPCChainIDOK describes a response with status code 200, with default header values.

Chain ID in hex
*/
type GetNodesIDRPCChainIDOK struct {
	Payload string
}

// IsSuccess returns true when this get nodes Id Rpc chain Id o k response has a 2xx status code
func (o *GetNodesIDRPCChainIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc chain Id o k response has a 3xx status code
func (o *GetNodesIDRPCChainIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc chain Id o k response has a 4xx status code
func (o *GetNodesIDRPCChainIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc chain Id o k response has a 5xx status code
func (o *GetNodesIDRPCChainIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc chain Id o k response a status code equal to that given
func (o *GetNodesIDRPCChainIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc chain Id o k response
func (o *GetNodesIDRPCChainIDOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCChainIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/chain-id][%d] getNodesIdRpcChainIdOK %s", 200, payload)
}

func (o *GetNodesIDRPCChainIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/chain-id][%d] getNodesIdRpcChainIdOK %s", 200, payload)
}

func (o *GetNodesIDRPCChainIDOK) GetPayload() string {
	return o.Payload
}

func (o *GetNodesIDRPCChainIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCChainIDBadRequest creates a GetNodesIDRPCChainIDBadRequest with default headers values
func NewGetNodesIDRPCChainIDBadRequest() *GetNodesIDRPCChainIDBadRequest {
	return &GetNodesIDRPCChainIDBadRequest{}
}

/*
GetNodesIDRPCChainIDBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCChainIDBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc chain Id bad request response has a 2xx status code
func (o *GetNodesIDRPCChainIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc chain Id bad request response has a 3xx status code
func (o *GetNodesIDRPCChainIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc chain Id bad request response has a 4xx status code
func (o *GetNodesIDRPCChainIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc chain Id bad request response has a 5xx status code
func (o *GetNodesIDRPCChainIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc chain Id bad request response a status code equal to that given
func (o *GetNodesIDRPCChainIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc chain Id bad request response
func (o *GetNodesIDRPCChainIDBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCChainIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/chain-id][%d] getNodesIdRpcChainIdBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCChainIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/chain-id][%d] getNodesIdRpcChainIdBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCChainIDBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCChainIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCChainIDNotFound creates a GetNodesIDRPCChainIDNotFound with default headers values
func NewGetNodesIDRPCChainIDNotFound() *GetNodesIDRPCChainIDNotFound {
	return &GetNodesIDRPCChainIDNotFound{}
}

/*
GetNodesIDRPCChainIDNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodesIDRPCChainIDNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc chain Id not found response has a 2xx status code
func (o *GetNodesIDRPCChainIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc chain Id not found response has a 3xx status code
func (o *GetNodesIDRPCChainIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc chain Id not found response has a 4xx status code
func (o *GetNodesIDRPCChainIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc chain Id not found response has a 5xx status code
func (o *GetNodesIDRPCChainIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc chain Id not found response a status code equal to that given
func (o *GetNodesIDRPCChainIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc chain Id not found response
func (o *GetNodesIDRPCChainIDNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCChainIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/chain-id][%d] getNodesIdRpcChainIdNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCChainIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/chain-id][%d] getNodesIdRpcChainIdNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCChainIDNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCChainIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCChainIDInternalServerError creates a GetNodesIDRPCChainIDInternalServerError with default headers values
func NewGetNodesIDRPCChainIDInternalServerError() *GetNodesIDRPCChainIDInternalServerError {
	return &GetNodesIDRPCChainIDInternalServerError{}
}

/*
GetNodesIDRPCChainIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCChainIDInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc chain Id internal server error response has a 2xx status code
func (o *GetNodesIDRPCChainIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc chain Id internal server error response has a 3xx status code
func (o *GetNodesIDRPCChainIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc chain Id internal server error response has a 4xx status code
func (o *GetNodesIDRPCChainIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc chain Id internal server error response has a 5xx status code
func (o *GetNodesIDRPCChainIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc chain Id internal server error response a status code equal to that given
func (o *GetNodesIDRPCChainIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc chain Id internal server error response
func (o *GetNodesIDRPCChainIDInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCChainIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/chain-id][%d] getNodesIdRpcChainIdInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCChainIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/chain-id][%d] getNodesIdRpcChainIdInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCChainIDInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCChainIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
