// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// PostNodesIDRPCLogsReader is a Reader for the PostNodesIDRPCLogs structure.
type PostNodesIDRPCLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostNodesIDRPCLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewPostNodesIDRPCLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostNodesIDRPCLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostNodesIDRPCLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostNodesIDRPCLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /nodes/{id}/rpc/logs] PostNodesIDRPCLogs", response, response.Code())
	}
}

// NewPostNodesIDRPCLogsOK creates a PostNodesIDRPCLogsOK with default headers values
func NewPostNodesIDRPCLogsOK() *PostNodesIDRPCLogsOK {
	return &PostNodesIDRPCLogsOK{}
}

/*
PostNodesIDRPCLogsOK describes a response with status code 200, with default header values.

Array of log objects
*/
type PostNodesIDRPCLogsOK struct {
	Payload []any
}

// IsSuccess returns true when this post nodes Id Rpc logs o k response has a 2xx status code
func (o *PostNodesIDRPCLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post nodes Id Rpc logs o k response has a 3xx status code
func (o *PostNodesIDRPCLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post nodes Id Rpc logs o k response has a 4xx status code
func (o *PostNodesIDRPCLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post nodes Id Rpc logs o k response has a 5xx status code
func (o *PostNodesIDRPCLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post nodes Id Rpc logs o k response a status code equal to that given
func (o *PostNodesIDRPCLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post nodes Id Rpc logs o k response
func (o *PostNodesIDRPCLogsOK) Code() int {
	return 200
}

func (o *PostNodesIDRPCLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /nodes/{id}/rpc/logs][%d] postNodesIdRpcLogsOK %s", 200, payload)
}

func (o *PostNodesIDRPCLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /nodes/{id}/rpc/logs][%d] postNodesIdRpcLogsOK %s", 200, payload)
}

func (o *PostNodesIDRPCLogsOK) GetPayload() []any {
	return o.Payload
}

func (o *PostNodesIDRPCLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostNodesIDRPCLogsBadRequest creates a PostNodesIDRPCLogsBadRequest with default headers values
func NewPostNodesIDRPCLogsBadRequest() *PostNodesIDRPCLogsBadRequest {
	return &PostNodesIDRPCLogsBadRequest{}
}

/*
PostNodesIDRPCLogsBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type PostNodesIDRPCLogsBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this post nodes Id Rpc logs bad request response has a 2xx status code
func (o *PostNodesIDRPCLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post nodes Id Rpc logs bad request response has a 3xx status code
func (o *PostNodesIDRPCLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post nodes Id Rpc logs bad request response has a 4xx status code
func (o *PostNodesIDRPCLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post nodes Id Rpc logs bad request response has a 5xx status code
func (o *PostNodesIDRPCLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post nodes Id Rpc logs bad request response a status code equal to that given
func (o *PostNodesIDRPCLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post nodes Id Rpc logs bad request response
func (o *PostNodesIDRPCLogsBadRequest) Code() int {
	return 400
}

func (o *PostNodesIDRPCLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /nodes/{id}/rpc/logs][%d] postNodesIdRpcLogsBadRequest %s", 400, payload)
}

func (o *PostNodesIDRPCLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /nodes/{id}/rpc/logs][%d] postNodesIdRpcLogsBadRequest %s", 400, payload)
}

func (o *PostNodesIDRPCLogsBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *PostNodesIDRPCLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostNodesIDRPCLogsNotFound creates a PostNodesIDRPCLogsNotFound with default headers values
func NewPostNodesIDRPCLogsNotFound() *PostNodesIDRPCLogsNotFound {
	return &PostNodesIDRPCLogsNotFound{}
}

/*
PostNodesIDRPCLogsNotFound describes a response with status code 404, with default header values.

Node not found
*/
type PostNodesIDRPCLogsNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this post nodes Id Rpc logs not found response has a 2xx status code
func (o *PostNodesIDRPCLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post nodes Id Rpc logs not found response has a 3xx status code
func (o *PostNodesIDRPCLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post nodes Id Rpc logs not found response has a 4xx status code
func (o *PostNodesIDRPCLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post nodes Id Rpc logs not found response has a 5xx status code
func (o *PostNodesIDRPCLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post nodes Id Rpc logs not found response a status code equal to that given
func (o *PostNodesIDRPCLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post nodes Id Rpc logs not found response
func (o *PostNodesIDRPCLogsNotFound) Code() int {
	return 404
}

func (o *PostNodesIDRPCLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /nodes/{id}/rpc/logs][%d] postNodesIdRpcLogsNotFound %s", 404, payload)
}

func (o *PostNodesIDRPCLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /nodes/{id}/rpc/logs][%d] postNodesIdRpcLogsNotFound %s", 404, payload)
}

func (o *PostNodesIDRPCLogsNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *PostNodesIDRPCLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostNodesIDRPCLogsInternalServerError creates a PostNodesIDRPCLogsInternalServerError with default headers values
func NewPostNodesIDRPCLogsInternalServerError() *PostNodesIDRPCLogsInternalServerError {
	return &PostNodesIDRPCLogsInternalServerError{}
}

/*
PostNodesIDRPCLogsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostNodesIDRPCLogsInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this post nodes Id Rpc logs internal server error response has a 2xx status code
func (o *PostNodesIDRPCLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post nodes Id Rpc logs internal server error response has a 3xx status code
func (o *PostNodesIDRPCLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post nodes Id Rpc logs internal server error response has a 4xx status code
func (o *PostNodesIDRPCLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post nodes Id Rpc logs internal server error response has a 5xx status code
func (o *PostNodesIDRPCLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post nodes Id Rpc logs internal server error response a status code equal to that given
func (o *PostNodesIDRPCLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post nodes Id Rpc logs internal server error response
func (o *PostNodesIDRPCLogsInternalServerError) Code() int {
	return 500
}

func (o *PostNodesIDRPCLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /nodes/{id}/rpc/logs][%d] postNodesIdRpcLogsInternalServerError %s", 500, payload)
}

func (o *PostNodesIDRPCLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /nodes/{id}/rpc/logs][%d] postNodesIdRpcLogsInternalServerError %s", 500, payload)
}

func (o *PostNodesIDRPCLogsInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *PostNodesIDRPCLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
