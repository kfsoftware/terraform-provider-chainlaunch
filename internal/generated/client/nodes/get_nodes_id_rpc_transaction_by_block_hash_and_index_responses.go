// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCTransactionByBlockHashAndIndexReader is a Reader for the GetNodesIDRPCTransactionByBlockHashAndIndex structure.
type GetNodesIDRPCTransactionByBlockHashAndIndexReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCTransactionByBlockHashAndIndexOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCTransactionByBlockHashAndIndexBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCTransactionByBlockHashAndIndexNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/transaction-by-block-hash-and-index] GetNodesIDRPCTransactionByBlockHashAndIndex", response, response.Code())
	}
}

// NewGetNodesIDRPCTransactionByBlockHashAndIndexOK creates a GetNodesIDRPCTransactionByBlockHashAndIndexOK with default headers values
func NewGetNodesIDRPCTransactionByBlockHashAndIndexOK() *GetNodesIDRPCTransactionByBlockHashAndIndexOK {
	return &GetNodesIDRPCTransactionByBlockHashAndIndexOK{}
}

/*
GetNodesIDRPCTransactionByBlockHashAndIndexOK describes a response with status code 200, with default header values.

Transaction object
*/
type GetNodesIDRPCTransactionByBlockHashAndIndexOK struct {
	Payload any
}

// IsSuccess returns true when this get nodes Id Rpc transaction by block hash and index o k response has a 2xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc transaction by block hash and index o k response has a 3xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction by block hash and index o k response has a 4xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc transaction by block hash and index o k response has a 5xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc transaction by block hash and index o k response a status code equal to that given
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc transaction by block hash and index o k response
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-hash-and-index][%d] getNodesIdRpcTransactionByBlockHashAndIndexOK %s", 200, payload)
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-hash-and-index][%d] getNodesIdRpcTransactionByBlockHashAndIndexOK %s", 200, payload)
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexOK) GetPayload() any {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCTransactionByBlockHashAndIndexBadRequest creates a GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest with default headers values
func NewGetNodesIDRPCTransactionByBlockHashAndIndexBadRequest() *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest {
	return &GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest{}
}

/*
GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc transaction by block hash and index bad request response has a 2xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc transaction by block hash and index bad request response has a 3xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction by block hash and index bad request response has a 4xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc transaction by block hash and index bad request response has a 5xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc transaction by block hash and index bad request response a status code equal to that given
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc transaction by block hash and index bad request response
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-hash-and-index][%d] getNodesIdRpcTransactionByBlockHashAndIndexBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-hash-and-index][%d] getNodesIdRpcTransactionByBlockHashAndIndexBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCTransactionByBlockHashAndIndexNotFound creates a GetNodesIDRPCTransactionByBlockHashAndIndexNotFound with default headers values
func NewGetNodesIDRPCTransactionByBlockHashAndIndexNotFound() *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound {
	return &GetNodesIDRPCTransactionByBlockHashAndIndexNotFound{}
}

/*
GetNodesIDRPCTransactionByBlockHashAndIndexNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodesIDRPCTransactionByBlockHashAndIndexNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc transaction by block hash and index not found response has a 2xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc transaction by block hash and index not found response has a 3xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction by block hash and index not found response has a 4xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc transaction by block hash and index not found response has a 5xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc transaction by block hash and index not found response a status code equal to that given
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc transaction by block hash and index not found response
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-hash-and-index][%d] getNodesIdRpcTransactionByBlockHashAndIndexNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-hash-and-index][%d] getNodesIdRpcTransactionByBlockHashAndIndexNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError creates a GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError with default headers values
func NewGetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError() *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError {
	return &GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError{}
}

/*
GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc transaction by block hash and index internal server error response has a 2xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc transaction by block hash and index internal server error response has a 3xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction by block hash and index internal server error response has a 4xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc transaction by block hash and index internal server error response has a 5xx status code
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc transaction by block hash and index internal server error response a status code equal to that given
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc transaction by block hash and index internal server error response
func (o *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-hash-and-index][%d] getNodesIdRpcTransactionByBlockHashAndIndexInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-by-block-hash-and-index][%d] getNodesIdRpcTransactionByBlockHashAndIndexInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionByBlockHashAndIndexInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
