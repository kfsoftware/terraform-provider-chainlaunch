// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCTransactionCountReader is a Reader for the GetNodesIDRPCTransactionCount structure.
type GetNodesIDRPCTransactionCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCTransactionCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCTransactionCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCTransactionCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCTransactionCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCTransactionCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/transaction-count] GetNodesIDRPCTransactionCount", response, response.Code())
	}
}

// NewGetNodesIDRPCTransactionCountOK creates a GetNodesIDRPCTransactionCountOK with default headers values
func NewGetNodesIDRPCTransactionCountOK() *GetNodesIDRPCTransactionCountOK {
	return &GetNodesIDRPCTransactionCountOK{}
}

/*
GetNodesIDRPCTransactionCountOK describes a response with status code 200, with default header values.

Transaction count in hex
*/
type GetNodesIDRPCTransactionCountOK struct {
	Payload string
}

// IsSuccess returns true when this get nodes Id Rpc transaction count o k response has a 2xx status code
func (o *GetNodesIDRPCTransactionCountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc transaction count o k response has a 3xx status code
func (o *GetNodesIDRPCTransactionCountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction count o k response has a 4xx status code
func (o *GetNodesIDRPCTransactionCountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc transaction count o k response has a 5xx status code
func (o *GetNodesIDRPCTransactionCountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc transaction count o k response a status code equal to that given
func (o *GetNodesIDRPCTransactionCountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc transaction count o k response
func (o *GetNodesIDRPCTransactionCountOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCTransactionCountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-count][%d] getNodesIdRpcTransactionCountOK %s", 200, payload)
}

func (o *GetNodesIDRPCTransactionCountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-count][%d] getNodesIdRpcTransactionCountOK %s", 200, payload)
}

func (o *GetNodesIDRPCTransactionCountOK) GetPayload() string {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCTransactionCountBadRequest creates a GetNodesIDRPCTransactionCountBadRequest with default headers values
func NewGetNodesIDRPCTransactionCountBadRequest() *GetNodesIDRPCTransactionCountBadRequest {
	return &GetNodesIDRPCTransactionCountBadRequest{}
}

/*
GetNodesIDRPCTransactionCountBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCTransactionCountBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc transaction count bad request response has a 2xx status code
func (o *GetNodesIDRPCTransactionCountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc transaction count bad request response has a 3xx status code
func (o *GetNodesIDRPCTransactionCountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction count bad request response has a 4xx status code
func (o *GetNodesIDRPCTransactionCountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc transaction count bad request response has a 5xx status code
func (o *GetNodesIDRPCTransactionCountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc transaction count bad request response a status code equal to that given
func (o *GetNodesIDRPCTransactionCountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc transaction count bad request response
func (o *GetNodesIDRPCTransactionCountBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCTransactionCountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-count][%d] getNodesIdRpcTransactionCountBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCTransactionCountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-count][%d] getNodesIdRpcTransactionCountBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCTransactionCountBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCTransactionCountNotFound creates a GetNodesIDRPCTransactionCountNotFound with default headers values
func NewGetNodesIDRPCTransactionCountNotFound() *GetNodesIDRPCTransactionCountNotFound {
	return &GetNodesIDRPCTransactionCountNotFound{}
}

/*
GetNodesIDRPCTransactionCountNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodesIDRPCTransactionCountNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc transaction count not found response has a 2xx status code
func (o *GetNodesIDRPCTransactionCountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc transaction count not found response has a 3xx status code
func (o *GetNodesIDRPCTransactionCountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction count not found response has a 4xx status code
func (o *GetNodesIDRPCTransactionCountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc transaction count not found response has a 5xx status code
func (o *GetNodesIDRPCTransactionCountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc transaction count not found response a status code equal to that given
func (o *GetNodesIDRPCTransactionCountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc transaction count not found response
func (o *GetNodesIDRPCTransactionCountNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCTransactionCountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-count][%d] getNodesIdRpcTransactionCountNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCTransactionCountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-count][%d] getNodesIdRpcTransactionCountNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCTransactionCountNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCTransactionCountInternalServerError creates a GetNodesIDRPCTransactionCountInternalServerError with default headers values
func NewGetNodesIDRPCTransactionCountInternalServerError() *GetNodesIDRPCTransactionCountInternalServerError {
	return &GetNodesIDRPCTransactionCountInternalServerError{}
}

/*
GetNodesIDRPCTransactionCountInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCTransactionCountInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc transaction count internal server error response has a 2xx status code
func (o *GetNodesIDRPCTransactionCountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc transaction count internal server error response has a 3xx status code
func (o *GetNodesIDRPCTransactionCountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc transaction count internal server error response has a 4xx status code
func (o *GetNodesIDRPCTransactionCountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc transaction count internal server error response has a 5xx status code
func (o *GetNodesIDRPCTransactionCountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc transaction count internal server error response a status code equal to that given
func (o *GetNodesIDRPCTransactionCountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc transaction count internal server error response
func (o *GetNodesIDRPCTransactionCountInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCTransactionCountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-count][%d] getNodesIdRpcTransactionCountInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCTransactionCountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/transaction-count][%d] getNodesIdRpcTransactionCountInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCTransactionCountInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCTransactionCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
