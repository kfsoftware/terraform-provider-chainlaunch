// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCBalanceReader is a Reader for the GetNodesIDRPCBalance structure.
type GetNodesIDRPCBalanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCBalanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCBalanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCBalanceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCBalanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCBalanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/balance] GetNodesIDRPCBalance", response, response.Code())
	}
}

// NewGetNodesIDRPCBalanceOK creates a GetNodesIDRPCBalanceOK with default headers values
func NewGetNodesIDRPCBalanceOK() *GetNodesIDRPCBalanceOK {
	return &GetNodesIDRPCBalanceOK{}
}

/*
GetNodesIDRPCBalanceOK describes a response with status code 200, with default header values.

Balance in hex
*/
type GetNodesIDRPCBalanceOK struct {
	Payload string
}

// IsSuccess returns true when this get nodes Id Rpc balance o k response has a 2xx status code
func (o *GetNodesIDRPCBalanceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc balance o k response has a 3xx status code
func (o *GetNodesIDRPCBalanceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc balance o k response has a 4xx status code
func (o *GetNodesIDRPCBalanceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc balance o k response has a 5xx status code
func (o *GetNodesIDRPCBalanceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc balance o k response a status code equal to that given
func (o *GetNodesIDRPCBalanceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc balance o k response
func (o *GetNodesIDRPCBalanceOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCBalanceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/balance][%d] getNodesIdRpcBalanceOK %s", 200, payload)
}

func (o *GetNodesIDRPCBalanceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/balance][%d] getNodesIdRpcBalanceOK %s", 200, payload)
}

func (o *GetNodesIDRPCBalanceOK) GetPayload() string {
	return o.Payload
}

func (o *GetNodesIDRPCBalanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBalanceBadRequest creates a GetNodesIDRPCBalanceBadRequest with default headers values
func NewGetNodesIDRPCBalanceBadRequest() *GetNodesIDRPCBalanceBadRequest {
	return &GetNodesIDRPCBalanceBadRequest{}
}

/*
GetNodesIDRPCBalanceBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCBalanceBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc balance bad request response has a 2xx status code
func (o *GetNodesIDRPCBalanceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc balance bad request response has a 3xx status code
func (o *GetNodesIDRPCBalanceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc balance bad request response has a 4xx status code
func (o *GetNodesIDRPCBalanceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc balance bad request response has a 5xx status code
func (o *GetNodesIDRPCBalanceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc balance bad request response a status code equal to that given
func (o *GetNodesIDRPCBalanceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc balance bad request response
func (o *GetNodesIDRPCBalanceBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCBalanceBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/balance][%d] getNodesIdRpcBalanceBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCBalanceBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/balance][%d] getNodesIdRpcBalanceBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCBalanceBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBalanceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBalanceNotFound creates a GetNodesIDRPCBalanceNotFound with default headers values
func NewGetNodesIDRPCBalanceNotFound() *GetNodesIDRPCBalanceNotFound {
	return &GetNodesIDRPCBalanceNotFound{}
}

/*
GetNodesIDRPCBalanceNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodesIDRPCBalanceNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc balance not found response has a 2xx status code
func (o *GetNodesIDRPCBalanceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc balance not found response has a 3xx status code
func (o *GetNodesIDRPCBalanceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc balance not found response has a 4xx status code
func (o *GetNodesIDRPCBalanceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc balance not found response has a 5xx status code
func (o *GetNodesIDRPCBalanceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc balance not found response a status code equal to that given
func (o *GetNodesIDRPCBalanceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc balance not found response
func (o *GetNodesIDRPCBalanceNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCBalanceNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/balance][%d] getNodesIdRpcBalanceNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCBalanceNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/balance][%d] getNodesIdRpcBalanceNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCBalanceNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBalanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBalanceInternalServerError creates a GetNodesIDRPCBalanceInternalServerError with default headers values
func NewGetNodesIDRPCBalanceInternalServerError() *GetNodesIDRPCBalanceInternalServerError {
	return &GetNodesIDRPCBalanceInternalServerError{}
}

/*
GetNodesIDRPCBalanceInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCBalanceInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc balance internal server error response has a 2xx status code
func (o *GetNodesIDRPCBalanceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc balance internal server error response has a 3xx status code
func (o *GetNodesIDRPCBalanceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc balance internal server error response has a 4xx status code
func (o *GetNodesIDRPCBalanceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc balance internal server error response has a 5xx status code
func (o *GetNodesIDRPCBalanceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc balance internal server error response a status code equal to that given
func (o *GetNodesIDRPCBalanceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc balance internal server error response
func (o *GetNodesIDRPCBalanceInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCBalanceInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/balance][%d] getNodesIdRpcBalanceInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCBalanceInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/balance][%d] getNodesIdRpcBalanceInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCBalanceInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBalanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
