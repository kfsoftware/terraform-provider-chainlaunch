// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCBlockTransactionCountByNumberReader is a Reader for the GetNodesIDRPCBlockTransactionCountByNumber structure.
type GetNodesIDRPCBlockTransactionCountByNumberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCBlockTransactionCountByNumberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCBlockTransactionCountByNumberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCBlockTransactionCountByNumberBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCBlockTransactionCountByNumberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCBlockTransactionCountByNumberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/block-transaction-count-by-number] GetNodesIDRPCBlockTransactionCountByNumber", response, response.Code())
	}
}

// NewGetNodesIDRPCBlockTransactionCountByNumberOK creates a GetNodesIDRPCBlockTransactionCountByNumberOK with default headers values
func NewGetNodesIDRPCBlockTransactionCountByNumberOK() *GetNodesIDRPCBlockTransactionCountByNumberOK {
	return &GetNodesIDRPCBlockTransactionCountByNumberOK{}
}

/*
GetNodesIDRPCBlockTransactionCountByNumberOK describes a response with status code 200, with default header values.

Transaction count in hex
*/
type GetNodesIDRPCBlockTransactionCountByNumberOK struct {
	Payload string
}

// IsSuccess returns true when this get nodes Id Rpc block transaction count by number o k response has a 2xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc block transaction count by number o k response has a 3xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block transaction count by number o k response has a 4xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc block transaction count by number o k response has a 5xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc block transaction count by number o k response a status code equal to that given
func (o *GetNodesIDRPCBlockTransactionCountByNumberOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc block transaction count by number o k response
func (o *GetNodesIDRPCBlockTransactionCountByNumberOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-number][%d] getNodesIdRpcBlockTransactionCountByNumberOK %s", 200, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-number][%d] getNodesIdRpcBlockTransactionCountByNumberOK %s", 200, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberOK) GetPayload() string {
	return o.Payload
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBlockTransactionCountByNumberBadRequest creates a GetNodesIDRPCBlockTransactionCountByNumberBadRequest with default headers values
func NewGetNodesIDRPCBlockTransactionCountByNumberBadRequest() *GetNodesIDRPCBlockTransactionCountByNumberBadRequest {
	return &GetNodesIDRPCBlockTransactionCountByNumberBadRequest{}
}

/*
GetNodesIDRPCBlockTransactionCountByNumberBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCBlockTransactionCountByNumberBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc block transaction count by number bad request response has a 2xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc block transaction count by number bad request response has a 3xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block transaction count by number bad request response has a 4xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc block transaction count by number bad request response has a 5xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc block transaction count by number bad request response a status code equal to that given
func (o *GetNodesIDRPCBlockTransactionCountByNumberBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc block transaction count by number bad request response
func (o *GetNodesIDRPCBlockTransactionCountByNumberBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-number][%d] getNodesIdRpcBlockTransactionCountByNumberBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-number][%d] getNodesIdRpcBlockTransactionCountByNumberBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBlockTransactionCountByNumberNotFound creates a GetNodesIDRPCBlockTransactionCountByNumberNotFound with default headers values
func NewGetNodesIDRPCBlockTransactionCountByNumberNotFound() *GetNodesIDRPCBlockTransactionCountByNumberNotFound {
	return &GetNodesIDRPCBlockTransactionCountByNumberNotFound{}
}

/*
GetNodesIDRPCBlockTransactionCountByNumberNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodesIDRPCBlockTransactionCountByNumberNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc block transaction count by number not found response has a 2xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc block transaction count by number not found response has a 3xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block transaction count by number not found response has a 4xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc block transaction count by number not found response has a 5xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc block transaction count by number not found response a status code equal to that given
func (o *GetNodesIDRPCBlockTransactionCountByNumberNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc block transaction count by number not found response
func (o *GetNodesIDRPCBlockTransactionCountByNumberNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-number][%d] getNodesIdRpcBlockTransactionCountByNumberNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-number][%d] getNodesIdRpcBlockTransactionCountByNumberNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBlockTransactionCountByNumberInternalServerError creates a GetNodesIDRPCBlockTransactionCountByNumberInternalServerError with default headers values
func NewGetNodesIDRPCBlockTransactionCountByNumberInternalServerError() *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError {
	return &GetNodesIDRPCBlockTransactionCountByNumberInternalServerError{}
}

/*
GetNodesIDRPCBlockTransactionCountByNumberInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCBlockTransactionCountByNumberInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc block transaction count by number internal server error response has a 2xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc block transaction count by number internal server error response has a 3xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block transaction count by number internal server error response has a 4xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc block transaction count by number internal server error response has a 5xx status code
func (o *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc block transaction count by number internal server error response a status code equal to that given
func (o *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc block transaction count by number internal server error response
func (o *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-number][%d] getNodesIdRpcBlockTransactionCountByNumberInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-number][%d] getNodesIdRpcBlockTransactionCountByNumberInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBlockTransactionCountByNumberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
