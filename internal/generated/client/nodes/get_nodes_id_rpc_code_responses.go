// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCCodeReader is a Reader for the GetNodesIDRPCCode structure.
type GetNodesIDRPCCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCCodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCCodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/code] GetNodesIDRPCCode", response, response.Code())
	}
}

// NewGetNodesIDRPCCodeOK creates a GetNodesIDRPCCodeOK with default headers values
func NewGetNodesIDRPCCodeOK() *GetNodesIDRPCCodeOK {
	return &GetNodesIDRPCCodeOK{}
}

/*
GetNodesIDRPCCodeOK describes a response with status code 200, with default header values.

Bytecode in hex
*/
type GetNodesIDRPCCodeOK struct {
	Payload string
}

// IsSuccess returns true when this get nodes Id Rpc code o k response has a 2xx status code
func (o *GetNodesIDRPCCodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc code o k response has a 3xx status code
func (o *GetNodesIDRPCCodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc code o k response has a 4xx status code
func (o *GetNodesIDRPCCodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc code o k response has a 5xx status code
func (o *GetNodesIDRPCCodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc code o k response a status code equal to that given
func (o *GetNodesIDRPCCodeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc code o k response
func (o *GetNodesIDRPCCodeOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCCodeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/code][%d] getNodesIdRpcCodeOK %s", 200, payload)
}

func (o *GetNodesIDRPCCodeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/code][%d] getNodesIdRpcCodeOK %s", 200, payload)
}

func (o *GetNodesIDRPCCodeOK) GetPayload() string {
	return o.Payload
}

func (o *GetNodesIDRPCCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCCodeBadRequest creates a GetNodesIDRPCCodeBadRequest with default headers values
func NewGetNodesIDRPCCodeBadRequest() *GetNodesIDRPCCodeBadRequest {
	return &GetNodesIDRPCCodeBadRequest{}
}

/*
GetNodesIDRPCCodeBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCCodeBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc code bad request response has a 2xx status code
func (o *GetNodesIDRPCCodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc code bad request response has a 3xx status code
func (o *GetNodesIDRPCCodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc code bad request response has a 4xx status code
func (o *GetNodesIDRPCCodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc code bad request response has a 5xx status code
func (o *GetNodesIDRPCCodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc code bad request response a status code equal to that given
func (o *GetNodesIDRPCCodeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc code bad request response
func (o *GetNodesIDRPCCodeBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCCodeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/code][%d] getNodesIdRpcCodeBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCCodeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/code][%d] getNodesIdRpcCodeBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCCodeBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCCodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCCodeNotFound creates a GetNodesIDRPCCodeNotFound with default headers values
func NewGetNodesIDRPCCodeNotFound() *GetNodesIDRPCCodeNotFound {
	return &GetNodesIDRPCCodeNotFound{}
}

/*
GetNodesIDRPCCodeNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodesIDRPCCodeNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc code not found response has a 2xx status code
func (o *GetNodesIDRPCCodeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc code not found response has a 3xx status code
func (o *GetNodesIDRPCCodeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc code not found response has a 4xx status code
func (o *GetNodesIDRPCCodeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc code not found response has a 5xx status code
func (o *GetNodesIDRPCCodeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc code not found response a status code equal to that given
func (o *GetNodesIDRPCCodeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc code not found response
func (o *GetNodesIDRPCCodeNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCCodeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/code][%d] getNodesIdRpcCodeNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCCodeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/code][%d] getNodesIdRpcCodeNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCCodeNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCCodeInternalServerError creates a GetNodesIDRPCCodeInternalServerError with default headers values
func NewGetNodesIDRPCCodeInternalServerError() *GetNodesIDRPCCodeInternalServerError {
	return &GetNodesIDRPCCodeInternalServerError{}
}

/*
GetNodesIDRPCCodeInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCCodeInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc code internal server error response has a 2xx status code
func (o *GetNodesIDRPCCodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc code internal server error response has a 3xx status code
func (o *GetNodesIDRPCCodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc code internal server error response has a 4xx status code
func (o *GetNodesIDRPCCodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc code internal server error response has a 5xx status code
func (o *GetNodesIDRPCCodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc code internal server error response a status code equal to that given
func (o *GetNodesIDRPCCodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc code internal server error response
func (o *GetNodesIDRPCCodeInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCCodeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/code][%d] getNodesIdRpcCodeInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCCodeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/code][%d] getNodesIdRpcCodeInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCCodeInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCCodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
