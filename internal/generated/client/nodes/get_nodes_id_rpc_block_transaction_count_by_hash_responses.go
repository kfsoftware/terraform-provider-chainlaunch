// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodesIDRPCBlockTransactionCountByHashReader is a Reader for the GetNodesIDRPCBlockTransactionCountByHash structure.
type GetNodesIDRPCBlockTransactionCountByHashReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodesIDRPCBlockTransactionCountByHashReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodesIDRPCBlockTransactionCountByHashOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodesIDRPCBlockTransactionCountByHashBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodesIDRPCBlockTransactionCountByHashNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodesIDRPCBlockTransactionCountByHashInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/rpc/block-transaction-count-by-hash] GetNodesIDRPCBlockTransactionCountByHash", response, response.Code())
	}
}

// NewGetNodesIDRPCBlockTransactionCountByHashOK creates a GetNodesIDRPCBlockTransactionCountByHashOK with default headers values
func NewGetNodesIDRPCBlockTransactionCountByHashOK() *GetNodesIDRPCBlockTransactionCountByHashOK {
	return &GetNodesIDRPCBlockTransactionCountByHashOK{}
}

/*
GetNodesIDRPCBlockTransactionCountByHashOK describes a response with status code 200, with default header values.

Transaction count in hex
*/
type GetNodesIDRPCBlockTransactionCountByHashOK struct {
	Payload string
}

// IsSuccess returns true when this get nodes Id Rpc block transaction count by hash o k response has a 2xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get nodes Id Rpc block transaction count by hash o k response has a 3xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block transaction count by hash o k response has a 4xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc block transaction count by hash o k response has a 5xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc block transaction count by hash o k response a status code equal to that given
func (o *GetNodesIDRPCBlockTransactionCountByHashOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get nodes Id Rpc block transaction count by hash o k response
func (o *GetNodesIDRPCBlockTransactionCountByHashOK) Code() int {
	return 200
}

func (o *GetNodesIDRPCBlockTransactionCountByHashOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-hash][%d] getNodesIdRpcBlockTransactionCountByHashOK %s", 200, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByHashOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-hash][%d] getNodesIdRpcBlockTransactionCountByHashOK %s", 200, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByHashOK) GetPayload() string {
	return o.Payload
}

func (o *GetNodesIDRPCBlockTransactionCountByHashOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBlockTransactionCountByHashBadRequest creates a GetNodesIDRPCBlockTransactionCountByHashBadRequest with default headers values
func NewGetNodesIDRPCBlockTransactionCountByHashBadRequest() *GetNodesIDRPCBlockTransactionCountByHashBadRequest {
	return &GetNodesIDRPCBlockTransactionCountByHashBadRequest{}
}

/*
GetNodesIDRPCBlockTransactionCountByHashBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodesIDRPCBlockTransactionCountByHashBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc block transaction count by hash bad request response has a 2xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc block transaction count by hash bad request response has a 3xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block transaction count by hash bad request response has a 4xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc block transaction count by hash bad request response has a 5xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc block transaction count by hash bad request response a status code equal to that given
func (o *GetNodesIDRPCBlockTransactionCountByHashBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get nodes Id Rpc block transaction count by hash bad request response
func (o *GetNodesIDRPCBlockTransactionCountByHashBadRequest) Code() int {
	return 400
}

func (o *GetNodesIDRPCBlockTransactionCountByHashBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-hash][%d] getNodesIdRpcBlockTransactionCountByHashBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByHashBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-hash][%d] getNodesIdRpcBlockTransactionCountByHashBadRequest %s", 400, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByHashBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBlockTransactionCountByHashBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBlockTransactionCountByHashNotFound creates a GetNodesIDRPCBlockTransactionCountByHashNotFound with default headers values
func NewGetNodesIDRPCBlockTransactionCountByHashNotFound() *GetNodesIDRPCBlockTransactionCountByHashNotFound {
	return &GetNodesIDRPCBlockTransactionCountByHashNotFound{}
}

/*
GetNodesIDRPCBlockTransactionCountByHashNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodesIDRPCBlockTransactionCountByHashNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc block transaction count by hash not found response has a 2xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc block transaction count by hash not found response has a 3xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block transaction count by hash not found response has a 4xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get nodes Id Rpc block transaction count by hash not found response has a 5xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get nodes Id Rpc block transaction count by hash not found response a status code equal to that given
func (o *GetNodesIDRPCBlockTransactionCountByHashNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get nodes Id Rpc block transaction count by hash not found response
func (o *GetNodesIDRPCBlockTransactionCountByHashNotFound) Code() int {
	return 404
}

func (o *GetNodesIDRPCBlockTransactionCountByHashNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-hash][%d] getNodesIdRpcBlockTransactionCountByHashNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByHashNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-hash][%d] getNodesIdRpcBlockTransactionCountByHashNotFound %s", 404, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByHashNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBlockTransactionCountByHashNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodesIDRPCBlockTransactionCountByHashInternalServerError creates a GetNodesIDRPCBlockTransactionCountByHashInternalServerError with default headers values
func NewGetNodesIDRPCBlockTransactionCountByHashInternalServerError() *GetNodesIDRPCBlockTransactionCountByHashInternalServerError {
	return &GetNodesIDRPCBlockTransactionCountByHashInternalServerError{}
}

/*
GetNodesIDRPCBlockTransactionCountByHashInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodesIDRPCBlockTransactionCountByHashInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get nodes Id Rpc block transaction count by hash internal server error response has a 2xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get nodes Id Rpc block transaction count by hash internal server error response has a 3xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get nodes Id Rpc block transaction count by hash internal server error response has a 4xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get nodes Id Rpc block transaction count by hash internal server error response has a 5xx status code
func (o *GetNodesIDRPCBlockTransactionCountByHashInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get nodes Id Rpc block transaction count by hash internal server error response a status code equal to that given
func (o *GetNodesIDRPCBlockTransactionCountByHashInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get nodes Id Rpc block transaction count by hash internal server error response
func (o *GetNodesIDRPCBlockTransactionCountByHashInternalServerError) Code() int {
	return 500
}

func (o *GetNodesIDRPCBlockTransactionCountByHashInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-hash][%d] getNodesIdRpcBlockTransactionCountByHashInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByHashInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/rpc/block-transaction-count-by-hash][%d] getNodesIdRpcBlockTransactionCountByHashInternalServerError %s", 500, payload)
}

func (o *GetNodesIDRPCBlockTransactionCountByHashInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodesIDRPCBlockTransactionCountByHashInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
