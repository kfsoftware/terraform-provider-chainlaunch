// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetNodeChannelsReader is a Reader for the GetNodeChannels structure.
type GetNodeChannelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeChannelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetNodeChannelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNodeChannelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNodeChannelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNodeChannelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /nodes/{id}/channels] getNodeChannels", response, response.Code())
	}
}

// NewGetNodeChannelsOK creates a GetNodeChannelsOK with default headers values
func NewGetNodeChannelsOK() *GetNodeChannelsOK {
	return &GetNodeChannelsOK{}
}

/*
GetNodeChannelsOK describes a response with status code 200, with default header values.

OK
*/
type GetNodeChannelsOK struct {
	Payload *models.HTTPNodeChannelsResponse
}

// IsSuccess returns true when this get node channels o k response has a 2xx status code
func (o *GetNodeChannelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get node channels o k response has a 3xx status code
func (o *GetNodeChannelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node channels o k response has a 4xx status code
func (o *GetNodeChannelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node channels o k response has a 5xx status code
func (o *GetNodeChannelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get node channels o k response a status code equal to that given
func (o *GetNodeChannelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get node channels o k response
func (o *GetNodeChannelsOK) Code() int {
	return 200
}

func (o *GetNodeChannelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels][%d] getNodeChannelsOK %s", 200, payload)
}

func (o *GetNodeChannelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels][%d] getNodeChannelsOK %s", 200, payload)
}

func (o *GetNodeChannelsOK) GetPayload() *models.HTTPNodeChannelsResponse {
	return o.Payload
}

func (o *GetNodeChannelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPNodeChannelsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeChannelsBadRequest creates a GetNodeChannelsBadRequest with default headers values
func NewGetNodeChannelsBadRequest() *GetNodeChannelsBadRequest {
	return &GetNodeChannelsBadRequest{}
}

/*
GetNodeChannelsBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetNodeChannelsBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node channels bad request response has a 2xx status code
func (o *GetNodeChannelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node channels bad request response has a 3xx status code
func (o *GetNodeChannelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node channels bad request response has a 4xx status code
func (o *GetNodeChannelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node channels bad request response has a 5xx status code
func (o *GetNodeChannelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get node channels bad request response a status code equal to that given
func (o *GetNodeChannelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get node channels bad request response
func (o *GetNodeChannelsBadRequest) Code() int {
	return 400
}

func (o *GetNodeChannelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels][%d] getNodeChannelsBadRequest %s", 400, payload)
}

func (o *GetNodeChannelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels][%d] getNodeChannelsBadRequest %s", 400, payload)
}

func (o *GetNodeChannelsBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeChannelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeChannelsNotFound creates a GetNodeChannelsNotFound with default headers values
func NewGetNodeChannelsNotFound() *GetNodeChannelsNotFound {
	return &GetNodeChannelsNotFound{}
}

/*
GetNodeChannelsNotFound describes a response with status code 404, with default header values.

Node not found
*/
type GetNodeChannelsNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node channels not found response has a 2xx status code
func (o *GetNodeChannelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node channels not found response has a 3xx status code
func (o *GetNodeChannelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node channels not found response has a 4xx status code
func (o *GetNodeChannelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get node channels not found response has a 5xx status code
func (o *GetNodeChannelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get node channels not found response a status code equal to that given
func (o *GetNodeChannelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get node channels not found response
func (o *GetNodeChannelsNotFound) Code() int {
	return 404
}

func (o *GetNodeChannelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels][%d] getNodeChannelsNotFound %s", 404, payload)
}

func (o *GetNodeChannelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels][%d] getNodeChannelsNotFound %s", 404, payload)
}

func (o *GetNodeChannelsNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeChannelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetNodeChannelsInternalServerError creates a GetNodeChannelsInternalServerError with default headers values
func NewGetNodeChannelsInternalServerError() *GetNodeChannelsInternalServerError {
	return &GetNodeChannelsInternalServerError{}
}

/*
GetNodeChannelsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNodeChannelsInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get node channels internal server error response has a 2xx status code
func (o *GetNodeChannelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get node channels internal server error response has a 3xx status code
func (o *GetNodeChannelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get node channels internal server error response has a 4xx status code
func (o *GetNodeChannelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get node channels internal server error response has a 5xx status code
func (o *GetNodeChannelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get node channels internal server error response a status code equal to that given
func (o *GetNodeChannelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get node channels internal server error response
func (o *GetNodeChannelsInternalServerError) Code() int {
	return 500
}

func (o *GetNodeChannelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels][%d] getNodeChannelsInternalServerError %s", 500, payload)
}

func (o *GetNodeChannelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /nodes/{id}/channels][%d] getNodeChannelsInternalServerError %s", 500, payload)
}

func (o *GetNodeChannelsInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetNodeChannelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
