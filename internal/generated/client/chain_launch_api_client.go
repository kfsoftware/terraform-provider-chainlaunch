// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/ai"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/api_keys"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/audit"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/authentication"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/backup_schedules"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/backup_targets"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/backup_utilities"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/backups"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/besu_networks"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/chaincode"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/chaincode_projects"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/directories"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/external_nodes"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/fabric_networks"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/governance"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/key_providers"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/keys"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/logs"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/m_c_p"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/metrics"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/monitoring"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/node_sharing"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/nodes"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/notifications"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/organizations"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/permissions"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/plugins"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/pro"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/providers"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/settings"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/shell"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/smart_contracts"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/templates"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/troubleshooting"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/user_notifications"
	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/client/users"
)

// Default chain launch API HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/api/v1"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http", "https"}

// NewHTTPClient creates a new chain launch API HTTP client.
func NewHTTPClient(formats strfmt.Registry) *ChainLaunchAPI {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new chain launch API HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *ChainLaunchAPI {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new chain launch API client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *ChainLaunchAPI {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(ChainLaunchAPI)
	cli.Transport = transport
	cli.Ai = ai.New(transport, formats)
	cli.APIKeys = api_keys.New(transport, formats)
	cli.Audit = audit.New(transport, formats)
	cli.Authentication = authentication.New(transport, formats)
	cli.BackupSchedules = backup_schedules.New(transport, formats)
	cli.BackupTargets = backup_targets.New(transport, formats)
	cli.BackupUtilities = backup_utilities.New(transport, formats)
	cli.Backups = backups.New(transport, formats)
	cli.BesuNetworks = besu_networks.New(transport, formats)
	cli.Chaincode = chaincode.New(transport, formats)
	cli.ChaincodeProjects = chaincode_projects.New(transport, formats)
	cli.Directories = directories.New(transport, formats)
	cli.ExternalNodes = external_nodes.New(transport, formats)
	cli.FabricNetworks = fabric_networks.New(transport, formats)
	cli.Governance = governance.New(transport, formats)
	cli.KeyProviders = key_providers.New(transport, formats)
	cli.Keys = keys.New(transport, formats)
	cli.Logs = logs.New(transport, formats)
	cli.Mcp = m_c_p.New(transport, formats)
	cli.Metrics = metrics.New(transport, formats)
	cli.Monitoring = monitoring.New(transport, formats)
	cli.NodeSharing = node_sharing.New(transport, formats)
	cli.Nodes = nodes.New(transport, formats)
	cli.Notifications = notifications.New(transport, formats)
	cli.Organizations = organizations.New(transport, formats)
	cli.Permissions = permissions.New(transport, formats)
	cli.Plugins = plugins.New(transport, formats)
	cli.Pro = pro.New(transport, formats)
	cli.Providers = providers.New(transport, formats)
	cli.Settings = settings.New(transport, formats)
	cli.Shell = shell.New(transport, formats)
	cli.SmartContracts = smart_contracts.New(transport, formats)
	cli.Templates = templates.New(transport, formats)
	cli.Troubleshooting = troubleshooting.New(transport, formats)
	cli.UserNotifications = user_notifications.New(transport, formats)
	cli.Users = users.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// ChainLaunchAPI is a client for chain launch API
type ChainLaunchAPI struct {
	Ai ai.ClientService

	APIKeys api_keys.ClientService

	Audit audit.ClientService

	Authentication authentication.ClientService

	BackupSchedules backup_schedules.ClientService

	BackupTargets backup_targets.ClientService

	BackupUtilities backup_utilities.ClientService

	Backups backups.ClientService

	BesuNetworks besu_networks.ClientService

	Chaincode chaincode.ClientService

	ChaincodeProjects chaincode_projects.ClientService

	Directories directories.ClientService

	ExternalNodes external_nodes.ClientService

	FabricNetworks fabric_networks.ClientService

	Governance governance.ClientService

	KeyProviders key_providers.ClientService

	Keys keys.ClientService

	Logs logs.ClientService

	Mcp m_c_p.ClientService

	Metrics metrics.ClientService

	Monitoring monitoring.ClientService

	NodeSharing node_sharing.ClientService

	Nodes nodes.ClientService

	Notifications notifications.ClientService

	Organizations organizations.ClientService

	Permissions permissions.ClientService

	Plugins plugins.ClientService

	Pro pro.ClientService

	Providers providers.ClientService

	Settings settings.ClientService

	Shell shell.ClientService

	SmartContracts smart_contracts.ClientService

	Templates templates.ClientService

	Troubleshooting troubleshooting.ClientService

	UserNotifications user_notifications.ClientService

	Users users.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *ChainLaunchAPI) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Ai.SetTransport(transport)
	c.APIKeys.SetTransport(transport)
	c.Audit.SetTransport(transport)
	c.Authentication.SetTransport(transport)
	c.BackupSchedules.SetTransport(transport)
	c.BackupTargets.SetTransport(transport)
	c.BackupUtilities.SetTransport(transport)
	c.Backups.SetTransport(transport)
	c.BesuNetworks.SetTransport(transport)
	c.Chaincode.SetTransport(transport)
	c.ChaincodeProjects.SetTransport(transport)
	c.Directories.SetTransport(transport)
	c.ExternalNodes.SetTransport(transport)
	c.FabricNetworks.SetTransport(transport)
	c.Governance.SetTransport(transport)
	c.KeyProviders.SetTransport(transport)
	c.Keys.SetTransport(transport)
	c.Logs.SetTransport(transport)
	c.Mcp.SetTransport(transport)
	c.Metrics.SetTransport(transport)
	c.Monitoring.SetTransport(transport)
	c.NodeSharing.SetTransport(transport)
	c.Nodes.SetTransport(transport)
	c.Notifications.SetTransport(transport)
	c.Organizations.SetTransport(transport)
	c.Permissions.SetTransport(transport)
	c.Plugins.SetTransport(transport)
	c.Pro.SetTransport(transport)
	c.Providers.SetTransport(transport)
	c.Settings.SetTransport(transport)
	c.Shell.SetTransport(transport)
	c.SmartContracts.SetTransport(transport)
	c.Templates.SetTransport(transport)
	c.Troubleshooting.SetTransport(transport)
	c.UserNotifications.SetTransport(transport)
	c.Users.SetTransport(transport)
}
