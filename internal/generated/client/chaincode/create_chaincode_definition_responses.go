// Code generated by go-swagger; DO NOT EDIT.

package chaincode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// CreateChaincodeDefinitionReader is a Reader for the CreateChaincodeDefinition structure.
type CreateChaincodeDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateChaincodeDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewCreateChaincodeDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateChaincodeDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateChaincodeDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /sc/fabric/chaincodes/{chaincodeId}/definitions] createChaincodeDefinition", response, response.Code())
	}
}

// NewCreateChaincodeDefinitionOK creates a CreateChaincodeDefinitionOK with default headers values
func NewCreateChaincodeDefinitionOK() *CreateChaincodeDefinitionOK {
	return &CreateChaincodeDefinitionOK{}
}

/*
CreateChaincodeDefinitionOK describes a response with status code 200, with default header values.

OK
*/
type CreateChaincodeDefinitionOK struct {
	Payload *models.ChainlaunchdeployCreateChaincodeDefinitionResponse
}

// IsSuccess returns true when this create chaincode definition o k response has a 2xx status code
func (o *CreateChaincodeDefinitionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create chaincode definition o k response has a 3xx status code
func (o *CreateChaincodeDefinitionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chaincode definition o k response has a 4xx status code
func (o *CreateChaincodeDefinitionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create chaincode definition o k response has a 5xx status code
func (o *CreateChaincodeDefinitionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create chaincode definition o k response a status code equal to that given
func (o *CreateChaincodeDefinitionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create chaincode definition o k response
func (o *CreateChaincodeDefinitionOK) Code() int {
	return 200
}

func (o *CreateChaincodeDefinitionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] createChaincodeDefinitionOK %s", 200, payload)
}

func (o *CreateChaincodeDefinitionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] createChaincodeDefinitionOK %s", 200, payload)
}

func (o *CreateChaincodeDefinitionOK) GetPayload() *models.ChainlaunchdeployCreateChaincodeDefinitionResponse {
	return o.Payload
}

func (o *CreateChaincodeDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChainlaunchdeployCreateChaincodeDefinitionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateChaincodeDefinitionBadRequest creates a CreateChaincodeDefinitionBadRequest with default headers values
func NewCreateChaincodeDefinitionBadRequest() *CreateChaincodeDefinitionBadRequest {
	return &CreateChaincodeDefinitionBadRequest{}
}

/*
CreateChaincodeDefinitionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateChaincodeDefinitionBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this create chaincode definition bad request response has a 2xx status code
func (o *CreateChaincodeDefinitionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chaincode definition bad request response has a 3xx status code
func (o *CreateChaincodeDefinitionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chaincode definition bad request response has a 4xx status code
func (o *CreateChaincodeDefinitionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create chaincode definition bad request response has a 5xx status code
func (o *CreateChaincodeDefinitionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create chaincode definition bad request response a status code equal to that given
func (o *CreateChaincodeDefinitionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create chaincode definition bad request response
func (o *CreateChaincodeDefinitionBadRequest) Code() int {
	return 400
}

func (o *CreateChaincodeDefinitionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] createChaincodeDefinitionBadRequest %s", 400, payload)
}

func (o *CreateChaincodeDefinitionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] createChaincodeDefinitionBadRequest %s", 400, payload)
}

func (o *CreateChaincodeDefinitionBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *CreateChaincodeDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateChaincodeDefinitionInternalServerError creates a CreateChaincodeDefinitionInternalServerError with default headers values
func NewCreateChaincodeDefinitionInternalServerError() *CreateChaincodeDefinitionInternalServerError {
	return &CreateChaincodeDefinitionInternalServerError{}
}

/*
CreateChaincodeDefinitionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateChaincodeDefinitionInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this create chaincode definition internal server error response has a 2xx status code
func (o *CreateChaincodeDefinitionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chaincode definition internal server error response has a 3xx status code
func (o *CreateChaincodeDefinitionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chaincode definition internal server error response has a 4xx status code
func (o *CreateChaincodeDefinitionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create chaincode definition internal server error response has a 5xx status code
func (o *CreateChaincodeDefinitionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create chaincode definition internal server error response a status code equal to that given
func (o *CreateChaincodeDefinitionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create chaincode definition internal server error response
func (o *CreateChaincodeDefinitionInternalServerError) Code() int {
	return 500
}

func (o *CreateChaincodeDefinitionInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] createChaincodeDefinitionInternalServerError %s", 500, payload)
}

func (o *CreateChaincodeDefinitionInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] createChaincodeDefinitionInternalServerError %s", 500, payload)
}

func (o *CreateChaincodeDefinitionInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *CreateChaincodeDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
