// Code generated by go-swagger; DO NOT EDIT.

package chaincode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListChaincodeProposalsReader is a Reader for the ListChaincodeProposals structure.
type ListChaincodeProposalsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListChaincodeProposalsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListChaincodeProposalsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListChaincodeProposalsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListChaincodeProposalsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /pro/chaincodes/proposals] listChaincodeProposals", response, response.Code())
	}
}

// NewListChaincodeProposalsOK creates a ListChaincodeProposalsOK with default headers values
func NewListChaincodeProposalsOK() *ListChaincodeProposalsOK {
	return &ListChaincodeProposalsOK{}
}

/*
ListChaincodeProposalsOK describes a response with status code 200, with default header values.

OK
*/
type ListChaincodeProposalsOK struct {
	Payload []*models.ProChaincodeProposal
}

// IsSuccess returns true when this list chaincode proposals o k response has a 2xx status code
func (o *ListChaincodeProposalsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list chaincode proposals o k response has a 3xx status code
func (o *ListChaincodeProposalsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list chaincode proposals o k response has a 4xx status code
func (o *ListChaincodeProposalsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list chaincode proposals o k response has a 5xx status code
func (o *ListChaincodeProposalsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list chaincode proposals o k response a status code equal to that given
func (o *ListChaincodeProposalsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list chaincode proposals o k response
func (o *ListChaincodeProposalsOK) Code() int {
	return 200
}

func (o *ListChaincodeProposalsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals][%d] listChaincodeProposalsOK %s", 200, payload)
}

func (o *ListChaincodeProposalsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals][%d] listChaincodeProposalsOK %s", 200, payload)
}

func (o *ListChaincodeProposalsOK) GetPayload() []*models.ProChaincodeProposal {
	return o.Payload
}

func (o *ListChaincodeProposalsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListChaincodeProposalsBadRequest creates a ListChaincodeProposalsBadRequest with default headers values
func NewListChaincodeProposalsBadRequest() *ListChaincodeProposalsBadRequest {
	return &ListChaincodeProposalsBadRequest{}
}

/*
ListChaincodeProposalsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListChaincodeProposalsBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list chaincode proposals bad request response has a 2xx status code
func (o *ListChaincodeProposalsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list chaincode proposals bad request response has a 3xx status code
func (o *ListChaincodeProposalsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list chaincode proposals bad request response has a 4xx status code
func (o *ListChaincodeProposalsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list chaincode proposals bad request response has a 5xx status code
func (o *ListChaincodeProposalsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list chaincode proposals bad request response a status code equal to that given
func (o *ListChaincodeProposalsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list chaincode proposals bad request response
func (o *ListChaincodeProposalsBadRequest) Code() int {
	return 400
}

func (o *ListChaincodeProposalsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals][%d] listChaincodeProposalsBadRequest %s", 400, payload)
}

func (o *ListChaincodeProposalsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals][%d] listChaincodeProposalsBadRequest %s", 400, payload)
}

func (o *ListChaincodeProposalsBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListChaincodeProposalsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListChaincodeProposalsInternalServerError creates a ListChaincodeProposalsInternalServerError with default headers values
func NewListChaincodeProposalsInternalServerError() *ListChaincodeProposalsInternalServerError {
	return &ListChaincodeProposalsInternalServerError{}
}

/*
ListChaincodeProposalsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListChaincodeProposalsInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list chaincode proposals internal server error response has a 2xx status code
func (o *ListChaincodeProposalsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list chaincode proposals internal server error response has a 3xx status code
func (o *ListChaincodeProposalsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list chaincode proposals internal server error response has a 4xx status code
func (o *ListChaincodeProposalsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list chaincode proposals internal server error response has a 5xx status code
func (o *ListChaincodeProposalsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list chaincode proposals internal server error response a status code equal to that given
func (o *ListChaincodeProposalsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list chaincode proposals internal server error response
func (o *ListChaincodeProposalsInternalServerError) Code() int {
	return 500
}

func (o *ListChaincodeProposalsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals][%d] listChaincodeProposalsInternalServerError %s", 500, payload)
}

func (o *ListChaincodeProposalsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals][%d] listChaincodeProposalsInternalServerError %s", 500, payload)
}

func (o *ListChaincodeProposalsInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListChaincodeProposalsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
