// Code generated by go-swagger; DO NOT EDIT.

package chaincode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetChaincodeDefinitionLogsReader is a Reader for the GetChaincodeDefinitionLogs structure.
type GetChaincodeDefinitionLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChaincodeDefinitionLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetChaincodeDefinitionLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetChaincodeDefinitionLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChaincodeDefinitionLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChaincodeDefinitionLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /sc/fabric/definitions/{definitionId}/logs] getChaincodeDefinitionLogs", response, response.Code())
	}
}

// NewGetChaincodeDefinitionLogsOK creates a GetChaincodeDefinitionLogsOK with default headers values
func NewGetChaincodeDefinitionLogsOK() *GetChaincodeDefinitionLogsOK {
	return &GetChaincodeDefinitionLogsOK{}
}

/*
GetChaincodeDefinitionLogsOK describes a response with status code 200, with default header values.

Log content (plain text when follow=false, SSE stream when follow=true)
*/
type GetChaincodeDefinitionLogsOK struct {
	Payload string
}

// IsSuccess returns true when this get chaincode definition logs o k response has a 2xx status code
func (o *GetChaincodeDefinitionLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chaincode definition logs o k response has a 3xx status code
func (o *GetChaincodeDefinitionLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition logs o k response has a 4xx status code
func (o *GetChaincodeDefinitionLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chaincode definition logs o k response has a 5xx status code
func (o *GetChaincodeDefinitionLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode definition logs o k response a status code equal to that given
func (o *GetChaincodeDefinitionLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get chaincode definition logs o k response
func (o *GetChaincodeDefinitionLogsOK) Code() int {
	return 200
}

func (o *GetChaincodeDefinitionLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/logs][%d] getChaincodeDefinitionLogsOK %s", 200, payload)
}

func (o *GetChaincodeDefinitionLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/logs][%d] getChaincodeDefinitionLogsOK %s", 200, payload)
}

func (o *GetChaincodeDefinitionLogsOK) GetPayload() string {
	return o.Payload
}

func (o *GetChaincodeDefinitionLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeDefinitionLogsBadRequest creates a GetChaincodeDefinitionLogsBadRequest with default headers values
func NewGetChaincodeDefinitionLogsBadRequest() *GetChaincodeDefinitionLogsBadRequest {
	return &GetChaincodeDefinitionLogsBadRequest{}
}

/*
GetChaincodeDefinitionLogsBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetChaincodeDefinitionLogsBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode definition logs bad request response has a 2xx status code
func (o *GetChaincodeDefinitionLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode definition logs bad request response has a 3xx status code
func (o *GetChaincodeDefinitionLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition logs bad request response has a 4xx status code
func (o *GetChaincodeDefinitionLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chaincode definition logs bad request response has a 5xx status code
func (o *GetChaincodeDefinitionLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode definition logs bad request response a status code equal to that given
func (o *GetChaincodeDefinitionLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get chaincode definition logs bad request response
func (o *GetChaincodeDefinitionLogsBadRequest) Code() int {
	return 400
}

func (o *GetChaincodeDefinitionLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/logs][%d] getChaincodeDefinitionLogsBadRequest %s", 400, payload)
}

func (o *GetChaincodeDefinitionLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/logs][%d] getChaincodeDefinitionLogsBadRequest %s", 400, payload)
}

func (o *GetChaincodeDefinitionLogsBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeDefinitionLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeDefinitionLogsNotFound creates a GetChaincodeDefinitionLogsNotFound with default headers values
func NewGetChaincodeDefinitionLogsNotFound() *GetChaincodeDefinitionLogsNotFound {
	return &GetChaincodeDefinitionLogsNotFound{}
}

/*
GetChaincodeDefinitionLogsNotFound describes a response with status code 404, with default header values.

Chaincode definition or container not found
*/
type GetChaincodeDefinitionLogsNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode definition logs not found response has a 2xx status code
func (o *GetChaincodeDefinitionLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode definition logs not found response has a 3xx status code
func (o *GetChaincodeDefinitionLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition logs not found response has a 4xx status code
func (o *GetChaincodeDefinitionLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chaincode definition logs not found response has a 5xx status code
func (o *GetChaincodeDefinitionLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode definition logs not found response a status code equal to that given
func (o *GetChaincodeDefinitionLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get chaincode definition logs not found response
func (o *GetChaincodeDefinitionLogsNotFound) Code() int {
	return 404
}

func (o *GetChaincodeDefinitionLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/logs][%d] getChaincodeDefinitionLogsNotFound %s", 404, payload)
}

func (o *GetChaincodeDefinitionLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/logs][%d] getChaincodeDefinitionLogsNotFound %s", 404, payload)
}

func (o *GetChaincodeDefinitionLogsNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeDefinitionLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeDefinitionLogsInternalServerError creates a GetChaincodeDefinitionLogsInternalServerError with default headers values
func NewGetChaincodeDefinitionLogsInternalServerError() *GetChaincodeDefinitionLogsInternalServerError {
	return &GetChaincodeDefinitionLogsInternalServerError{}
}

/*
GetChaincodeDefinitionLogsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetChaincodeDefinitionLogsInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode definition logs internal server error response has a 2xx status code
func (o *GetChaincodeDefinitionLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode definition logs internal server error response has a 3xx status code
func (o *GetChaincodeDefinitionLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition logs internal server error response has a 4xx status code
func (o *GetChaincodeDefinitionLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chaincode definition logs internal server error response has a 5xx status code
func (o *GetChaincodeDefinitionLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get chaincode definition logs internal server error response a status code equal to that given
func (o *GetChaincodeDefinitionLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get chaincode definition logs internal server error response
func (o *GetChaincodeDefinitionLogsInternalServerError) Code() int {
	return 500
}

func (o *GetChaincodeDefinitionLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/logs][%d] getChaincodeDefinitionLogsInternalServerError %s", 500, payload)
}

func (o *GetChaincodeDefinitionLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/logs][%d] getChaincodeDefinitionLogsInternalServerError %s", 500, payload)
}

func (o *GetChaincodeDefinitionLogsInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeDefinitionLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
