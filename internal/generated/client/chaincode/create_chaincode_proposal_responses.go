// Code generated by go-swagger; DO NOT EDIT.

package chaincode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// CreateChaincodeProposalReader is a Reader for the CreateChaincodeProposal structure.
type CreateChaincodeProposalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateChaincodeProposalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 201:
		result := NewCreateChaincodeProposalCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateChaincodeProposalBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateChaincodeProposalInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /pro/chaincodes/proposals] createChaincodeProposal", response, response.Code())
	}
}

// NewCreateChaincodeProposalCreated creates a CreateChaincodeProposalCreated with default headers values
func NewCreateChaincodeProposalCreated() *CreateChaincodeProposalCreated {
	return &CreateChaincodeProposalCreated{}
}

/*
CreateChaincodeProposalCreated describes a response with status code 201, with default header values.

Created
*/
type CreateChaincodeProposalCreated struct {
	Payload *models.ProChaincodeProposal
}

// IsSuccess returns true when this create chaincode proposal created response has a 2xx status code
func (o *CreateChaincodeProposalCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create chaincode proposal created response has a 3xx status code
func (o *CreateChaincodeProposalCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chaincode proposal created response has a 4xx status code
func (o *CreateChaincodeProposalCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create chaincode proposal created response has a 5xx status code
func (o *CreateChaincodeProposalCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create chaincode proposal created response a status code equal to that given
func (o *CreateChaincodeProposalCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create chaincode proposal created response
func (o *CreateChaincodeProposalCreated) Code() int {
	return 201
}

func (o *CreateChaincodeProposalCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/chaincodes/proposals][%d] createChaincodeProposalCreated %s", 201, payload)
}

func (o *CreateChaincodeProposalCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/chaincodes/proposals][%d] createChaincodeProposalCreated %s", 201, payload)
}

func (o *CreateChaincodeProposalCreated) GetPayload() *models.ProChaincodeProposal {
	return o.Payload
}

func (o *CreateChaincodeProposalCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProChaincodeProposal)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateChaincodeProposalBadRequest creates a CreateChaincodeProposalBadRequest with default headers values
func NewCreateChaincodeProposalBadRequest() *CreateChaincodeProposalBadRequest {
	return &CreateChaincodeProposalBadRequest{}
}

/*
CreateChaincodeProposalBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateChaincodeProposalBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create chaincode proposal bad request response has a 2xx status code
func (o *CreateChaincodeProposalBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chaincode proposal bad request response has a 3xx status code
func (o *CreateChaincodeProposalBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chaincode proposal bad request response has a 4xx status code
func (o *CreateChaincodeProposalBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create chaincode proposal bad request response has a 5xx status code
func (o *CreateChaincodeProposalBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create chaincode proposal bad request response a status code equal to that given
func (o *CreateChaincodeProposalBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create chaincode proposal bad request response
func (o *CreateChaincodeProposalBadRequest) Code() int {
	return 400
}

func (o *CreateChaincodeProposalBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/chaincodes/proposals][%d] createChaincodeProposalBadRequest %s", 400, payload)
}

func (o *CreateChaincodeProposalBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/chaincodes/proposals][%d] createChaincodeProposalBadRequest %s", 400, payload)
}

func (o *CreateChaincodeProposalBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateChaincodeProposalBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateChaincodeProposalInternalServerError creates a CreateChaincodeProposalInternalServerError with default headers values
func NewCreateChaincodeProposalInternalServerError() *CreateChaincodeProposalInternalServerError {
	return &CreateChaincodeProposalInternalServerError{}
}

/*
CreateChaincodeProposalInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateChaincodeProposalInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create chaincode proposal internal server error response has a 2xx status code
func (o *CreateChaincodeProposalInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chaincode proposal internal server error response has a 3xx status code
func (o *CreateChaincodeProposalInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chaincode proposal internal server error response has a 4xx status code
func (o *CreateChaincodeProposalInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create chaincode proposal internal server error response has a 5xx status code
func (o *CreateChaincodeProposalInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create chaincode proposal internal server error response a status code equal to that given
func (o *CreateChaincodeProposalInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create chaincode proposal internal server error response
func (o *CreateChaincodeProposalInternalServerError) Code() int {
	return 500
}

func (o *CreateChaincodeProposalInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/chaincodes/proposals][%d] createChaincodeProposalInternalServerError %s", 500, payload)
}

func (o *CreateChaincodeProposalInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/chaincodes/proposals][%d] createChaincodeProposalInternalServerError %s", 500, payload)
}

func (o *CreateChaincodeProposalInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateChaincodeProposalInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
