// Code generated by go-swagger; DO NOT EDIT.

package chaincode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetChaincodeDefinitionDockerInfoReader is a Reader for the GetChaincodeDefinitionDockerInfo structure.
type GetChaincodeDefinitionDockerInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChaincodeDefinitionDockerInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetChaincodeDefinitionDockerInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetChaincodeDefinitionDockerInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChaincodeDefinitionDockerInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /sc/fabric/definitions/{definitionId}/docker-info] getChaincodeDefinitionDockerInfo", response, response.Code())
	}
}

// NewGetChaincodeDefinitionDockerInfoOK creates a GetChaincodeDefinitionDockerInfoOK with default headers values
func NewGetChaincodeDefinitionDockerInfoOK() *GetChaincodeDefinitionDockerInfoOK {
	return &GetChaincodeDefinitionDockerInfoOK{}
}

/*
GetChaincodeDefinitionDockerInfoOK describes a response with status code 200, with default header values.

OK
*/
type GetChaincodeDefinitionDockerInfoOK struct {
	Payload *models.ChainlaunchdeployDockerContainerInfo
}

// IsSuccess returns true when this get chaincode definition docker info o k response has a 2xx status code
func (o *GetChaincodeDefinitionDockerInfoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chaincode definition docker info o k response has a 3xx status code
func (o *GetChaincodeDefinitionDockerInfoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition docker info o k response has a 4xx status code
func (o *GetChaincodeDefinitionDockerInfoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chaincode definition docker info o k response has a 5xx status code
func (o *GetChaincodeDefinitionDockerInfoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode definition docker info o k response a status code equal to that given
func (o *GetChaincodeDefinitionDockerInfoOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get chaincode definition docker info o k response
func (o *GetChaincodeDefinitionDockerInfoOK) Code() int {
	return 200
}

func (o *GetChaincodeDefinitionDockerInfoOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/docker-info][%d] getChaincodeDefinitionDockerInfoOK %s", 200, payload)
}

func (o *GetChaincodeDefinitionDockerInfoOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/docker-info][%d] getChaincodeDefinitionDockerInfoOK %s", 200, payload)
}

func (o *GetChaincodeDefinitionDockerInfoOK) GetPayload() *models.ChainlaunchdeployDockerContainerInfo {
	return o.Payload
}

func (o *GetChaincodeDefinitionDockerInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChainlaunchdeployDockerContainerInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeDefinitionDockerInfoNotFound creates a GetChaincodeDefinitionDockerInfoNotFound with default headers values
func NewGetChaincodeDefinitionDockerInfoNotFound() *GetChaincodeDefinitionDockerInfoNotFound {
	return &GetChaincodeDefinitionDockerInfoNotFound{}
}

/*
GetChaincodeDefinitionDockerInfoNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetChaincodeDefinitionDockerInfoNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode definition docker info not found response has a 2xx status code
func (o *GetChaincodeDefinitionDockerInfoNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode definition docker info not found response has a 3xx status code
func (o *GetChaincodeDefinitionDockerInfoNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition docker info not found response has a 4xx status code
func (o *GetChaincodeDefinitionDockerInfoNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chaincode definition docker info not found response has a 5xx status code
func (o *GetChaincodeDefinitionDockerInfoNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode definition docker info not found response a status code equal to that given
func (o *GetChaincodeDefinitionDockerInfoNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get chaincode definition docker info not found response
func (o *GetChaincodeDefinitionDockerInfoNotFound) Code() int {
	return 404
}

func (o *GetChaincodeDefinitionDockerInfoNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/docker-info][%d] getChaincodeDefinitionDockerInfoNotFound %s", 404, payload)
}

func (o *GetChaincodeDefinitionDockerInfoNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/docker-info][%d] getChaincodeDefinitionDockerInfoNotFound %s", 404, payload)
}

func (o *GetChaincodeDefinitionDockerInfoNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeDefinitionDockerInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeDefinitionDockerInfoInternalServerError creates a GetChaincodeDefinitionDockerInfoInternalServerError with default headers values
func NewGetChaincodeDefinitionDockerInfoInternalServerError() *GetChaincodeDefinitionDockerInfoInternalServerError {
	return &GetChaincodeDefinitionDockerInfoInternalServerError{}
}

/*
GetChaincodeDefinitionDockerInfoInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetChaincodeDefinitionDockerInfoInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode definition docker info internal server error response has a 2xx status code
func (o *GetChaincodeDefinitionDockerInfoInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode definition docker info internal server error response has a 3xx status code
func (o *GetChaincodeDefinitionDockerInfoInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition docker info internal server error response has a 4xx status code
func (o *GetChaincodeDefinitionDockerInfoInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chaincode definition docker info internal server error response has a 5xx status code
func (o *GetChaincodeDefinitionDockerInfoInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get chaincode definition docker info internal server error response a status code equal to that given
func (o *GetChaincodeDefinitionDockerInfoInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get chaincode definition docker info internal server error response
func (o *GetChaincodeDefinitionDockerInfoInternalServerError) Code() int {
	return 500
}

func (o *GetChaincodeDefinitionDockerInfoInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/docker-info][%d] getChaincodeDefinitionDockerInfoInternalServerError %s", 500, payload)
}

func (o *GetChaincodeDefinitionDockerInfoInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/definitions/{definitionId}/docker-info][%d] getChaincodeDefinitionDockerInfoInternalServerError %s", 500, payload)
}

func (o *GetChaincodeDefinitionDockerInfoInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeDefinitionDockerInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
