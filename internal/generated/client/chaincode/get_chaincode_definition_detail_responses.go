// Code generated by go-swagger; DO NOT EDIT.

package chaincode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetChaincodeDefinitionDetailReader is a Reader for the GetChaincodeDefinitionDetail structure.
type GetChaincodeDefinitionDetailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChaincodeDefinitionDetailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetChaincodeDefinitionDetailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetChaincodeDefinitionDetailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChaincodeDefinitionDetailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChaincodeDefinitionDetailInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions/{definitionId}] getChaincodeDefinitionDetail", response, response.Code())
	}
}

// NewGetChaincodeDefinitionDetailOK creates a GetChaincodeDefinitionDetailOK with default headers values
func NewGetChaincodeDefinitionDetailOK() *GetChaincodeDefinitionDetailOK {
	return &GetChaincodeDefinitionDetailOK{}
}

/*
GetChaincodeDefinitionDetailOK describes a response with status code 200, with default header values.

OK
*/
type GetChaincodeDefinitionDetailOK struct {
	Payload *models.ChainlaunchdeployChaincodeDefinitionDetailResponse
}

// IsSuccess returns true when this get chaincode definition detail o k response has a 2xx status code
func (o *GetChaincodeDefinitionDetailOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chaincode definition detail o k response has a 3xx status code
func (o *GetChaincodeDefinitionDetailOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition detail o k response has a 4xx status code
func (o *GetChaincodeDefinitionDetailOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chaincode definition detail o k response has a 5xx status code
func (o *GetChaincodeDefinitionDetailOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode definition detail o k response a status code equal to that given
func (o *GetChaincodeDefinitionDetailOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get chaincode definition detail o k response
func (o *GetChaincodeDefinitionDetailOK) Code() int {
	return 200
}

func (o *GetChaincodeDefinitionDetailOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions/{definitionId}][%d] getChaincodeDefinitionDetailOK %s", 200, payload)
}

func (o *GetChaincodeDefinitionDetailOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions/{definitionId}][%d] getChaincodeDefinitionDetailOK %s", 200, payload)
}

func (o *GetChaincodeDefinitionDetailOK) GetPayload() *models.ChainlaunchdeployChaincodeDefinitionDetailResponse {
	return o.Payload
}

func (o *GetChaincodeDefinitionDetailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChainlaunchdeployChaincodeDefinitionDetailResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeDefinitionDetailBadRequest creates a GetChaincodeDefinitionDetailBadRequest with default headers values
func NewGetChaincodeDefinitionDetailBadRequest() *GetChaincodeDefinitionDetailBadRequest {
	return &GetChaincodeDefinitionDetailBadRequest{}
}

/*
GetChaincodeDefinitionDetailBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetChaincodeDefinitionDetailBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode definition detail bad request response has a 2xx status code
func (o *GetChaincodeDefinitionDetailBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode definition detail bad request response has a 3xx status code
func (o *GetChaincodeDefinitionDetailBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition detail bad request response has a 4xx status code
func (o *GetChaincodeDefinitionDetailBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chaincode definition detail bad request response has a 5xx status code
func (o *GetChaincodeDefinitionDetailBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode definition detail bad request response a status code equal to that given
func (o *GetChaincodeDefinitionDetailBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get chaincode definition detail bad request response
func (o *GetChaincodeDefinitionDetailBadRequest) Code() int {
	return 400
}

func (o *GetChaincodeDefinitionDetailBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions/{definitionId}][%d] getChaincodeDefinitionDetailBadRequest %s", 400, payload)
}

func (o *GetChaincodeDefinitionDetailBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions/{definitionId}][%d] getChaincodeDefinitionDetailBadRequest %s", 400, payload)
}

func (o *GetChaincodeDefinitionDetailBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeDefinitionDetailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeDefinitionDetailNotFound creates a GetChaincodeDefinitionDetailNotFound with default headers values
func NewGetChaincodeDefinitionDetailNotFound() *GetChaincodeDefinitionDetailNotFound {
	return &GetChaincodeDefinitionDetailNotFound{}
}

/*
GetChaincodeDefinitionDetailNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetChaincodeDefinitionDetailNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode definition detail not found response has a 2xx status code
func (o *GetChaincodeDefinitionDetailNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode definition detail not found response has a 3xx status code
func (o *GetChaincodeDefinitionDetailNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition detail not found response has a 4xx status code
func (o *GetChaincodeDefinitionDetailNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chaincode definition detail not found response has a 5xx status code
func (o *GetChaincodeDefinitionDetailNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode definition detail not found response a status code equal to that given
func (o *GetChaincodeDefinitionDetailNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get chaincode definition detail not found response
func (o *GetChaincodeDefinitionDetailNotFound) Code() int {
	return 404
}

func (o *GetChaincodeDefinitionDetailNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions/{definitionId}][%d] getChaincodeDefinitionDetailNotFound %s", 404, payload)
}

func (o *GetChaincodeDefinitionDetailNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions/{definitionId}][%d] getChaincodeDefinitionDetailNotFound %s", 404, payload)
}

func (o *GetChaincodeDefinitionDetailNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeDefinitionDetailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeDefinitionDetailInternalServerError creates a GetChaincodeDefinitionDetailInternalServerError with default headers values
func NewGetChaincodeDefinitionDetailInternalServerError() *GetChaincodeDefinitionDetailInternalServerError {
	return &GetChaincodeDefinitionDetailInternalServerError{}
}

/*
GetChaincodeDefinitionDetailInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetChaincodeDefinitionDetailInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode definition detail internal server error response has a 2xx status code
func (o *GetChaincodeDefinitionDetailInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode definition detail internal server error response has a 3xx status code
func (o *GetChaincodeDefinitionDetailInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode definition detail internal server error response has a 4xx status code
func (o *GetChaincodeDefinitionDetailInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chaincode definition detail internal server error response has a 5xx status code
func (o *GetChaincodeDefinitionDetailInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get chaincode definition detail internal server error response a status code equal to that given
func (o *GetChaincodeDefinitionDetailInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get chaincode definition detail internal server error response
func (o *GetChaincodeDefinitionDetailInternalServerError) Code() int {
	return 500
}

func (o *GetChaincodeDefinitionDetailInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions/{definitionId}][%d] getChaincodeDefinitionDetailInternalServerError %s", 500, payload)
}

func (o *GetChaincodeDefinitionDetailInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions/{definitionId}][%d] getChaincodeDefinitionDetailInternalServerError %s", 500, payload)
}

func (o *GetChaincodeDefinitionDetailInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeDefinitionDetailInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
