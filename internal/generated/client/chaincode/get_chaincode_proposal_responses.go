// Code generated by go-swagger; DO NOT EDIT.

package chaincode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetChaincodeProposalReader is a Reader for the GetChaincodeProposal structure.
type GetChaincodeProposalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChaincodeProposalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetChaincodeProposalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetChaincodeProposalNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChaincodeProposalInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /pro/chaincodes/proposals/{proposalId}] getChaincodeProposal", response, response.Code())
	}
}

// NewGetChaincodeProposalOK creates a GetChaincodeProposalOK with default headers values
func NewGetChaincodeProposalOK() *GetChaincodeProposalOK {
	return &GetChaincodeProposalOK{}
}

/*
GetChaincodeProposalOK describes a response with status code 200, with default header values.

OK
*/
type GetChaincodeProposalOK struct {
	Payload *models.ProChaincodeDefinitionWithChaincode
}

// IsSuccess returns true when this get chaincode proposal o k response has a 2xx status code
func (o *GetChaincodeProposalOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chaincode proposal o k response has a 3xx status code
func (o *GetChaincodeProposalOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode proposal o k response has a 4xx status code
func (o *GetChaincodeProposalOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chaincode proposal o k response has a 5xx status code
func (o *GetChaincodeProposalOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode proposal o k response a status code equal to that given
func (o *GetChaincodeProposalOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get chaincode proposal o k response
func (o *GetChaincodeProposalOK) Code() int {
	return 200
}

func (o *GetChaincodeProposalOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals/{proposalId}][%d] getChaincodeProposalOK %s", 200, payload)
}

func (o *GetChaincodeProposalOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals/{proposalId}][%d] getChaincodeProposalOK %s", 200, payload)
}

func (o *GetChaincodeProposalOK) GetPayload() *models.ProChaincodeDefinitionWithChaincode {
	return o.Payload
}

func (o *GetChaincodeProposalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProChaincodeDefinitionWithChaincode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeProposalNotFound creates a GetChaincodeProposalNotFound with default headers values
func NewGetChaincodeProposalNotFound() *GetChaincodeProposalNotFound {
	return &GetChaincodeProposalNotFound{}
}

/*
GetChaincodeProposalNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetChaincodeProposalNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get chaincode proposal not found response has a 2xx status code
func (o *GetChaincodeProposalNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode proposal not found response has a 3xx status code
func (o *GetChaincodeProposalNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode proposal not found response has a 4xx status code
func (o *GetChaincodeProposalNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chaincode proposal not found response has a 5xx status code
func (o *GetChaincodeProposalNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode proposal not found response a status code equal to that given
func (o *GetChaincodeProposalNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get chaincode proposal not found response
func (o *GetChaincodeProposalNotFound) Code() int {
	return 404
}

func (o *GetChaincodeProposalNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals/{proposalId}][%d] getChaincodeProposalNotFound %s", 404, payload)
}

func (o *GetChaincodeProposalNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals/{proposalId}][%d] getChaincodeProposalNotFound %s", 404, payload)
}

func (o *GetChaincodeProposalNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetChaincodeProposalNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeProposalInternalServerError creates a GetChaincodeProposalInternalServerError with default headers values
func NewGetChaincodeProposalInternalServerError() *GetChaincodeProposalInternalServerError {
	return &GetChaincodeProposalInternalServerError{}
}

/*
GetChaincodeProposalInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetChaincodeProposalInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get chaincode proposal internal server error response has a 2xx status code
func (o *GetChaincodeProposalInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode proposal internal server error response has a 3xx status code
func (o *GetChaincodeProposalInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode proposal internal server error response has a 4xx status code
func (o *GetChaincodeProposalInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chaincode proposal internal server error response has a 5xx status code
func (o *GetChaincodeProposalInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get chaincode proposal internal server error response a status code equal to that given
func (o *GetChaincodeProposalInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get chaincode proposal internal server error response
func (o *GetChaincodeProposalInternalServerError) Code() int {
	return 500
}

func (o *GetChaincodeProposalInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals/{proposalId}][%d] getChaincodeProposalInternalServerError %s", 500, payload)
}

func (o *GetChaincodeProposalInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/chaincodes/proposals/{proposalId}][%d] getChaincodeProposalInternalServerError %s", 500, payload)
}

func (o *GetChaincodeProposalInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetChaincodeProposalInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
