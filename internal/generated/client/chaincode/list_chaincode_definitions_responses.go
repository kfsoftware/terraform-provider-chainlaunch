// Code generated by go-swagger; DO NOT EDIT.

package chaincode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListChaincodeDefinitionsReader is a Reader for the ListChaincodeDefinitions structure.
type ListChaincodeDefinitionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListChaincodeDefinitionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListChaincodeDefinitionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListChaincodeDefinitionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListChaincodeDefinitionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions] listChaincodeDefinitions", response, response.Code())
	}
}

// NewListChaincodeDefinitionsOK creates a ListChaincodeDefinitionsOK with default headers values
func NewListChaincodeDefinitionsOK() *ListChaincodeDefinitionsOK {
	return &ListChaincodeDefinitionsOK{}
}

/*
ListChaincodeDefinitionsOK describes a response with status code 200, with default header values.

OK
*/
type ListChaincodeDefinitionsOK struct {
	Payload *models.ChainlaunchdeployListChaincodeDefinitionsResponse
}

// IsSuccess returns true when this list chaincode definitions o k response has a 2xx status code
func (o *ListChaincodeDefinitionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list chaincode definitions o k response has a 3xx status code
func (o *ListChaincodeDefinitionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list chaincode definitions o k response has a 4xx status code
func (o *ListChaincodeDefinitionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list chaincode definitions o k response has a 5xx status code
func (o *ListChaincodeDefinitionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list chaincode definitions o k response a status code equal to that given
func (o *ListChaincodeDefinitionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list chaincode definitions o k response
func (o *ListChaincodeDefinitionsOK) Code() int {
	return 200
}

func (o *ListChaincodeDefinitionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] listChaincodeDefinitionsOK %s", 200, payload)
}

func (o *ListChaincodeDefinitionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] listChaincodeDefinitionsOK %s", 200, payload)
}

func (o *ListChaincodeDefinitionsOK) GetPayload() *models.ChainlaunchdeployListChaincodeDefinitionsResponse {
	return o.Payload
}

func (o *ListChaincodeDefinitionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChainlaunchdeployListChaincodeDefinitionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListChaincodeDefinitionsBadRequest creates a ListChaincodeDefinitionsBadRequest with default headers values
func NewListChaincodeDefinitionsBadRequest() *ListChaincodeDefinitionsBadRequest {
	return &ListChaincodeDefinitionsBadRequest{}
}

/*
ListChaincodeDefinitionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListChaincodeDefinitionsBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this list chaincode definitions bad request response has a 2xx status code
func (o *ListChaincodeDefinitionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list chaincode definitions bad request response has a 3xx status code
func (o *ListChaincodeDefinitionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list chaincode definitions bad request response has a 4xx status code
func (o *ListChaincodeDefinitionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list chaincode definitions bad request response has a 5xx status code
func (o *ListChaincodeDefinitionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list chaincode definitions bad request response a status code equal to that given
func (o *ListChaincodeDefinitionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list chaincode definitions bad request response
func (o *ListChaincodeDefinitionsBadRequest) Code() int {
	return 400
}

func (o *ListChaincodeDefinitionsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] listChaincodeDefinitionsBadRequest %s", 400, payload)
}

func (o *ListChaincodeDefinitionsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] listChaincodeDefinitionsBadRequest %s", 400, payload)
}

func (o *ListChaincodeDefinitionsBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *ListChaincodeDefinitionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListChaincodeDefinitionsInternalServerError creates a ListChaincodeDefinitionsInternalServerError with default headers values
func NewListChaincodeDefinitionsInternalServerError() *ListChaincodeDefinitionsInternalServerError {
	return &ListChaincodeDefinitionsInternalServerError{}
}

/*
ListChaincodeDefinitionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListChaincodeDefinitionsInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this list chaincode definitions internal server error response has a 2xx status code
func (o *ListChaincodeDefinitionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list chaincode definitions internal server error response has a 3xx status code
func (o *ListChaincodeDefinitionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list chaincode definitions internal server error response has a 4xx status code
func (o *ListChaincodeDefinitionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list chaincode definitions internal server error response has a 5xx status code
func (o *ListChaincodeDefinitionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list chaincode definitions internal server error response a status code equal to that given
func (o *ListChaincodeDefinitionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list chaincode definitions internal server error response
func (o *ListChaincodeDefinitionsInternalServerError) Code() int {
	return 500
}

func (o *ListChaincodeDefinitionsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] listChaincodeDefinitionsInternalServerError %s", 500, payload)
}

func (o *ListChaincodeDefinitionsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /sc/fabric/chaincodes/{chaincodeId}/definitions][%d] listChaincodeDefinitionsInternalServerError %s", 500, payload)
}

func (o *ListChaincodeDefinitionsInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *ListChaincodeDefinitionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
