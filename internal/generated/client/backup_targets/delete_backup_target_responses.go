// Code generated by go-swagger; DO NOT EDIT.

package backup_targets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// DeleteBackupTargetReader is a Reader for the DeleteBackupTarget structure.
type DeleteBackupTargetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBackupTargetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteBackupTargetNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteBackupTargetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteBackupTargetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteBackupTargetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /backups/targets/{id}] deleteBackupTarget", response, response.Code())
	}
}

// NewDeleteBackupTargetNoContent creates a DeleteBackupTargetNoContent with default headers values
func NewDeleteBackupTargetNoContent() *DeleteBackupTargetNoContent {
	return &DeleteBackupTargetNoContent{}
}

/*
DeleteBackupTargetNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteBackupTargetNoContent struct {
}

// IsSuccess returns true when this delete backup target no content response has a 2xx status code
func (o *DeleteBackupTargetNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete backup target no content response has a 3xx status code
func (o *DeleteBackupTargetNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup target no content response has a 4xx status code
func (o *DeleteBackupTargetNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete backup target no content response has a 5xx status code
func (o *DeleteBackupTargetNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete backup target no content response a status code equal to that given
func (o *DeleteBackupTargetNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete backup target no content response
func (o *DeleteBackupTargetNoContent) Code() int {
	return 204
}

func (o *DeleteBackupTargetNoContent) Error() string {
	return fmt.Sprintf("[DELETE /backups/targets/{id}][%d] deleteBackupTargetNoContent", 204)
}

func (o *DeleteBackupTargetNoContent) String() string {
	return fmt.Sprintf("[DELETE /backups/targets/{id}][%d] deleteBackupTargetNoContent", 204)
}

func (o *DeleteBackupTargetNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBackupTargetBadRequest creates a DeleteBackupTargetBadRequest with default headers values
func NewDeleteBackupTargetBadRequest() *DeleteBackupTargetBadRequest {
	return &DeleteBackupTargetBadRequest{}
}

/*
DeleteBackupTargetBadRequest describes a response with status code 400, with default header values.

Invalid ID format
*/
type DeleteBackupTargetBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this delete backup target bad request response has a 2xx status code
func (o *DeleteBackupTargetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete backup target bad request response has a 3xx status code
func (o *DeleteBackupTargetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup target bad request response has a 4xx status code
func (o *DeleteBackupTargetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete backup target bad request response has a 5xx status code
func (o *DeleteBackupTargetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete backup target bad request response a status code equal to that given
func (o *DeleteBackupTargetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete backup target bad request response
func (o *DeleteBackupTargetBadRequest) Code() int {
	return 400
}

func (o *DeleteBackupTargetBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/targets/{id}][%d] deleteBackupTargetBadRequest %s", 400, payload)
}

func (o *DeleteBackupTargetBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/targets/{id}][%d] deleteBackupTargetBadRequest %s", 400, payload)
}

func (o *DeleteBackupTargetBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeleteBackupTargetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteBackupTargetNotFound creates a DeleteBackupTargetNotFound with default headers values
func NewDeleteBackupTargetNotFound() *DeleteBackupTargetNotFound {
	return &DeleteBackupTargetNotFound{}
}

/*
DeleteBackupTargetNotFound describes a response with status code 404, with default header values.

Target not found
*/
type DeleteBackupTargetNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this delete backup target not found response has a 2xx status code
func (o *DeleteBackupTargetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete backup target not found response has a 3xx status code
func (o *DeleteBackupTargetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup target not found response has a 4xx status code
func (o *DeleteBackupTargetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete backup target not found response has a 5xx status code
func (o *DeleteBackupTargetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete backup target not found response a status code equal to that given
func (o *DeleteBackupTargetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete backup target not found response
func (o *DeleteBackupTargetNotFound) Code() int {
	return 404
}

func (o *DeleteBackupTargetNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/targets/{id}][%d] deleteBackupTargetNotFound %s", 404, payload)
}

func (o *DeleteBackupTargetNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/targets/{id}][%d] deleteBackupTargetNotFound %s", 404, payload)
}

func (o *DeleteBackupTargetNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeleteBackupTargetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteBackupTargetInternalServerError creates a DeleteBackupTargetInternalServerError with default headers values
func NewDeleteBackupTargetInternalServerError() *DeleteBackupTargetInternalServerError {
	return &DeleteBackupTargetInternalServerError{}
}

/*
DeleteBackupTargetInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteBackupTargetInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this delete backup target internal server error response has a 2xx status code
func (o *DeleteBackupTargetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete backup target internal server error response has a 3xx status code
func (o *DeleteBackupTargetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup target internal server error response has a 4xx status code
func (o *DeleteBackupTargetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete backup target internal server error response has a 5xx status code
func (o *DeleteBackupTargetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete backup target internal server error response a status code equal to that given
func (o *DeleteBackupTargetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete backup target internal server error response
func (o *DeleteBackupTargetInternalServerError) Code() int {
	return 500
}

func (o *DeleteBackupTargetInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/targets/{id}][%d] deleteBackupTargetInternalServerError %s", 500, payload)
}

func (o *DeleteBackupTargetInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /backups/targets/{id}][%d] deleteBackupTargetInternalServerError %s", 500, payload)
}

func (o *DeleteBackupTargetInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *DeleteBackupTargetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
