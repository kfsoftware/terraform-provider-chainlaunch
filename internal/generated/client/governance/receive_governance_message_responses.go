// Code generated by go-swagger; DO NOT EDIT.

package governance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ReceiveGovernanceMessageReader is a Reader for the ReceiveGovernanceMessage structure.
type ReceiveGovernanceMessageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReceiveGovernanceMessageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewReceiveGovernanceMessageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReceiveGovernanceMessageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReceiveGovernanceMessageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReceiveGovernanceMessageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /pro/receive] receiveGovernanceMessage", response, response.Code())
	}
}

// NewReceiveGovernanceMessageOK creates a ReceiveGovernanceMessageOK with default headers values
func NewReceiveGovernanceMessageOK() *ReceiveGovernanceMessageOK {
	return &ReceiveGovernanceMessageOK{}
}

/*
ReceiveGovernanceMessageOK describes a response with status code 200, with default header values.

OK
*/
type ReceiveGovernanceMessageOK struct {
	Payload map[string]bool
}

// IsSuccess returns true when this receive governance message o k response has a 2xx status code
func (o *ReceiveGovernanceMessageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this receive governance message o k response has a 3xx status code
func (o *ReceiveGovernanceMessageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this receive governance message o k response has a 4xx status code
func (o *ReceiveGovernanceMessageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this receive governance message o k response has a 5xx status code
func (o *ReceiveGovernanceMessageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this receive governance message o k response a status code equal to that given
func (o *ReceiveGovernanceMessageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the receive governance message o k response
func (o *ReceiveGovernanceMessageOK) Code() int {
	return 200
}

func (o *ReceiveGovernanceMessageOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive][%d] receiveGovernanceMessageOK %s", 200, payload)
}

func (o *ReceiveGovernanceMessageOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive][%d] receiveGovernanceMessageOK %s", 200, payload)
}

func (o *ReceiveGovernanceMessageOK) GetPayload() map[string]bool {
	return o.Payload
}

func (o *ReceiveGovernanceMessageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewReceiveGovernanceMessageBadRequest creates a ReceiveGovernanceMessageBadRequest with default headers values
func NewReceiveGovernanceMessageBadRequest() *ReceiveGovernanceMessageBadRequest {
	return &ReceiveGovernanceMessageBadRequest{}
}

/*
ReceiveGovernanceMessageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ReceiveGovernanceMessageBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this receive governance message bad request response has a 2xx status code
func (o *ReceiveGovernanceMessageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this receive governance message bad request response has a 3xx status code
func (o *ReceiveGovernanceMessageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this receive governance message bad request response has a 4xx status code
func (o *ReceiveGovernanceMessageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this receive governance message bad request response has a 5xx status code
func (o *ReceiveGovernanceMessageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this receive governance message bad request response a status code equal to that given
func (o *ReceiveGovernanceMessageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the receive governance message bad request response
func (o *ReceiveGovernanceMessageBadRequest) Code() int {
	return 400
}

func (o *ReceiveGovernanceMessageBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive][%d] receiveGovernanceMessageBadRequest %s", 400, payload)
}

func (o *ReceiveGovernanceMessageBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive][%d] receiveGovernanceMessageBadRequest %s", 400, payload)
}

func (o *ReceiveGovernanceMessageBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ReceiveGovernanceMessageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewReceiveGovernanceMessageUnauthorized creates a ReceiveGovernanceMessageUnauthorized with default headers values
func NewReceiveGovernanceMessageUnauthorized() *ReceiveGovernanceMessageUnauthorized {
	return &ReceiveGovernanceMessageUnauthorized{}
}

/*
ReceiveGovernanceMessageUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ReceiveGovernanceMessageUnauthorized struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this receive governance message unauthorized response has a 2xx status code
func (o *ReceiveGovernanceMessageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this receive governance message unauthorized response has a 3xx status code
func (o *ReceiveGovernanceMessageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this receive governance message unauthorized response has a 4xx status code
func (o *ReceiveGovernanceMessageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this receive governance message unauthorized response has a 5xx status code
func (o *ReceiveGovernanceMessageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this receive governance message unauthorized response a status code equal to that given
func (o *ReceiveGovernanceMessageUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the receive governance message unauthorized response
func (o *ReceiveGovernanceMessageUnauthorized) Code() int {
	return 401
}

func (o *ReceiveGovernanceMessageUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive][%d] receiveGovernanceMessageUnauthorized %s", 401, payload)
}

func (o *ReceiveGovernanceMessageUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive][%d] receiveGovernanceMessageUnauthorized %s", 401, payload)
}

func (o *ReceiveGovernanceMessageUnauthorized) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ReceiveGovernanceMessageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewReceiveGovernanceMessageInternalServerError creates a ReceiveGovernanceMessageInternalServerError with default headers values
func NewReceiveGovernanceMessageInternalServerError() *ReceiveGovernanceMessageInternalServerError {
	return &ReceiveGovernanceMessageInternalServerError{}
}

/*
ReceiveGovernanceMessageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ReceiveGovernanceMessageInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this receive governance message internal server error response has a 2xx status code
func (o *ReceiveGovernanceMessageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this receive governance message internal server error response has a 3xx status code
func (o *ReceiveGovernanceMessageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this receive governance message internal server error response has a 4xx status code
func (o *ReceiveGovernanceMessageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this receive governance message internal server error response has a 5xx status code
func (o *ReceiveGovernanceMessageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this receive governance message internal server error response a status code equal to that given
func (o *ReceiveGovernanceMessageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the receive governance message internal server error response
func (o *ReceiveGovernanceMessageInternalServerError) Code() int {
	return 500
}

func (o *ReceiveGovernanceMessageInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive][%d] receiveGovernanceMessageInternalServerError %s", 500, payload)
}

func (o *ReceiveGovernanceMessageInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/receive][%d] receiveGovernanceMessageInternalServerError %s", 500, payload)
}

func (o *ReceiveGovernanceMessageInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ReceiveGovernanceMessageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
