// Code generated by go-swagger; DO NOT EDIT.

package governance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ShareGovernanceProposalReader is a Reader for the ShareGovernanceProposal structure.
type ShareGovernanceProposalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShareGovernanceProposalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewShareGovernanceProposalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewShareGovernanceProposalBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewShareGovernanceProposalInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /pro/networks/proposals/{proposalId}/share] shareGovernanceProposal", response, response.Code())
	}
}

// NewShareGovernanceProposalOK creates a ShareGovernanceProposalOK with default headers values
func NewShareGovernanceProposalOK() *ShareGovernanceProposalOK {
	return &ShareGovernanceProposalOK{}
}

/*
ShareGovernanceProposalOK describes a response with status code 200, with default header values.

OK
*/
type ShareGovernanceProposalOK struct {
	Payload map[string]bool
}

// IsSuccess returns true when this share governance proposal o k response has a 2xx status code
func (o *ShareGovernanceProposalOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this share governance proposal o k response has a 3xx status code
func (o *ShareGovernanceProposalOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share governance proposal o k response has a 4xx status code
func (o *ShareGovernanceProposalOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this share governance proposal o k response has a 5xx status code
func (o *ShareGovernanceProposalOK) IsServerError() bool {
	return false
}

// IsCode returns true when this share governance proposal o k response a status code equal to that given
func (o *ShareGovernanceProposalOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the share governance proposal o k response
func (o *ShareGovernanceProposalOK) Code() int {
	return 200
}

func (o *ShareGovernanceProposalOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/share][%d] shareGovernanceProposalOK %s", 200, payload)
}

func (o *ShareGovernanceProposalOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/share][%d] shareGovernanceProposalOK %s", 200, payload)
}

func (o *ShareGovernanceProposalOK) GetPayload() map[string]bool {
	return o.Payload
}

func (o *ShareGovernanceProposalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewShareGovernanceProposalBadRequest creates a ShareGovernanceProposalBadRequest with default headers values
func NewShareGovernanceProposalBadRequest() *ShareGovernanceProposalBadRequest {
	return &ShareGovernanceProposalBadRequest{}
}

/*
ShareGovernanceProposalBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ShareGovernanceProposalBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this share governance proposal bad request response has a 2xx status code
func (o *ShareGovernanceProposalBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share governance proposal bad request response has a 3xx status code
func (o *ShareGovernanceProposalBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share governance proposal bad request response has a 4xx status code
func (o *ShareGovernanceProposalBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this share governance proposal bad request response has a 5xx status code
func (o *ShareGovernanceProposalBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this share governance proposal bad request response a status code equal to that given
func (o *ShareGovernanceProposalBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the share governance proposal bad request response
func (o *ShareGovernanceProposalBadRequest) Code() int {
	return 400
}

func (o *ShareGovernanceProposalBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/share][%d] shareGovernanceProposalBadRequest %s", 400, payload)
}

func (o *ShareGovernanceProposalBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/share][%d] shareGovernanceProposalBadRequest %s", 400, payload)
}

func (o *ShareGovernanceProposalBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ShareGovernanceProposalBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewShareGovernanceProposalInternalServerError creates a ShareGovernanceProposalInternalServerError with default headers values
func NewShareGovernanceProposalInternalServerError() *ShareGovernanceProposalInternalServerError {
	return &ShareGovernanceProposalInternalServerError{}
}

/*
ShareGovernanceProposalInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ShareGovernanceProposalInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this share governance proposal internal server error response has a 2xx status code
func (o *ShareGovernanceProposalInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share governance proposal internal server error response has a 3xx status code
func (o *ShareGovernanceProposalInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share governance proposal internal server error response has a 4xx status code
func (o *ShareGovernanceProposalInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this share governance proposal internal server error response has a 5xx status code
func (o *ShareGovernanceProposalInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this share governance proposal internal server error response a status code equal to that given
func (o *ShareGovernanceProposalInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the share governance proposal internal server error response
func (o *ShareGovernanceProposalInternalServerError) Code() int {
	return 500
}

func (o *ShareGovernanceProposalInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/share][%d] shareGovernanceProposalInternalServerError %s", 500, payload)
}

func (o *ShareGovernanceProposalInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/share][%d] shareGovernanceProposalInternalServerError %s", 500, payload)
}

func (o *ShareGovernanceProposalInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ShareGovernanceProposalInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
