// Code generated by go-swagger; DO NOT EDIT.

package governance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListGovernanceEventsReader is a Reader for the ListGovernanceEvents structure.
type ListGovernanceEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListGovernanceEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListGovernanceEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewListGovernanceEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListGovernanceEventsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /pro/networks/proposals/{proposalId}/events] listGovernanceEvents", response, response.Code())
	}
}

// NewListGovernanceEventsOK creates a ListGovernanceEventsOK with default headers values
func NewListGovernanceEventsOK() *ListGovernanceEventsOK {
	return &ListGovernanceEventsOK{}
}

/*
ListGovernanceEventsOK describes a response with status code 200, with default header values.

OK
*/
type ListGovernanceEventsOK struct {
	Payload []*models.ProGovernanceEvent
}

// IsSuccess returns true when this list governance events o k response has a 2xx status code
func (o *ListGovernanceEventsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list governance events o k response has a 3xx status code
func (o *ListGovernanceEventsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list governance events o k response has a 4xx status code
func (o *ListGovernanceEventsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list governance events o k response has a 5xx status code
func (o *ListGovernanceEventsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list governance events o k response a status code equal to that given
func (o *ListGovernanceEventsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list governance events o k response
func (o *ListGovernanceEventsOK) Code() int {
	return 200
}

func (o *ListGovernanceEventsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/networks/proposals/{proposalId}/events][%d] listGovernanceEventsOK %s", 200, payload)
}

func (o *ListGovernanceEventsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/networks/proposals/{proposalId}/events][%d] listGovernanceEventsOK %s", 200, payload)
}

func (o *ListGovernanceEventsOK) GetPayload() []*models.ProGovernanceEvent {
	return o.Payload
}

func (o *ListGovernanceEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListGovernanceEventsNotFound creates a ListGovernanceEventsNotFound with default headers values
func NewListGovernanceEventsNotFound() *ListGovernanceEventsNotFound {
	return &ListGovernanceEventsNotFound{}
}

/*
ListGovernanceEventsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListGovernanceEventsNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list governance events not found response has a 2xx status code
func (o *ListGovernanceEventsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list governance events not found response has a 3xx status code
func (o *ListGovernanceEventsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list governance events not found response has a 4xx status code
func (o *ListGovernanceEventsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list governance events not found response has a 5xx status code
func (o *ListGovernanceEventsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list governance events not found response a status code equal to that given
func (o *ListGovernanceEventsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list governance events not found response
func (o *ListGovernanceEventsNotFound) Code() int {
	return 404
}

func (o *ListGovernanceEventsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/networks/proposals/{proposalId}/events][%d] listGovernanceEventsNotFound %s", 404, payload)
}

func (o *ListGovernanceEventsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/networks/proposals/{proposalId}/events][%d] listGovernanceEventsNotFound %s", 404, payload)
}

func (o *ListGovernanceEventsNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListGovernanceEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListGovernanceEventsInternalServerError creates a ListGovernanceEventsInternalServerError with default headers values
func NewListGovernanceEventsInternalServerError() *ListGovernanceEventsInternalServerError {
	return &ListGovernanceEventsInternalServerError{}
}

/*
ListGovernanceEventsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListGovernanceEventsInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list governance events internal server error response has a 2xx status code
func (o *ListGovernanceEventsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list governance events internal server error response has a 3xx status code
func (o *ListGovernanceEventsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list governance events internal server error response has a 4xx status code
func (o *ListGovernanceEventsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list governance events internal server error response has a 5xx status code
func (o *ListGovernanceEventsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list governance events internal server error response a status code equal to that given
func (o *ListGovernanceEventsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list governance events internal server error response
func (o *ListGovernanceEventsInternalServerError) Code() int {
	return 500
}

func (o *ListGovernanceEventsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/networks/proposals/{proposalId}/events][%d] listGovernanceEventsInternalServerError %s", 500, payload)
}

func (o *ListGovernanceEventsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pro/networks/proposals/{proposalId}/events][%d] listGovernanceEventsInternalServerError %s", 500, payload)
}

func (o *ListGovernanceEventsInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListGovernanceEventsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
