// Code generated by go-swagger; DO NOT EDIT.

package governance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// SubmitGovernanceProposalReader is a Reader for the SubmitGovernanceProposal structure.
type SubmitGovernanceProposalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubmitGovernanceProposalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewSubmitGovernanceProposalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSubmitGovernanceProposalBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSubmitGovernanceProposalInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /pro/networks/proposals/{proposalId}/submit] submitGovernanceProposal", response, response.Code())
	}
}

// NewSubmitGovernanceProposalOK creates a SubmitGovernanceProposalOK with default headers values
func NewSubmitGovernanceProposalOK() *SubmitGovernanceProposalOK {
	return &SubmitGovernanceProposalOK{}
}

/*
SubmitGovernanceProposalOK describes a response with status code 200, with default header values.

OK
*/
type SubmitGovernanceProposalOK struct {
	Payload *models.ProSubmitConfigUpdateResponse
}

// IsSuccess returns true when this submit governance proposal o k response has a 2xx status code
func (o *SubmitGovernanceProposalOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this submit governance proposal o k response has a 3xx status code
func (o *SubmitGovernanceProposalOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit governance proposal o k response has a 4xx status code
func (o *SubmitGovernanceProposalOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this submit governance proposal o k response has a 5xx status code
func (o *SubmitGovernanceProposalOK) IsServerError() bool {
	return false
}

// IsCode returns true when this submit governance proposal o k response a status code equal to that given
func (o *SubmitGovernanceProposalOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the submit governance proposal o k response
func (o *SubmitGovernanceProposalOK) Code() int {
	return 200
}

func (o *SubmitGovernanceProposalOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/submit][%d] submitGovernanceProposalOK %s", 200, payload)
}

func (o *SubmitGovernanceProposalOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/submit][%d] submitGovernanceProposalOK %s", 200, payload)
}

func (o *SubmitGovernanceProposalOK) GetPayload() *models.ProSubmitConfigUpdateResponse {
	return o.Payload
}

func (o *SubmitGovernanceProposalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProSubmitConfigUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewSubmitGovernanceProposalBadRequest creates a SubmitGovernanceProposalBadRequest with default headers values
func NewSubmitGovernanceProposalBadRequest() *SubmitGovernanceProposalBadRequest {
	return &SubmitGovernanceProposalBadRequest{}
}

/*
SubmitGovernanceProposalBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SubmitGovernanceProposalBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this submit governance proposal bad request response has a 2xx status code
func (o *SubmitGovernanceProposalBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit governance proposal bad request response has a 3xx status code
func (o *SubmitGovernanceProposalBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit governance proposal bad request response has a 4xx status code
func (o *SubmitGovernanceProposalBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit governance proposal bad request response has a 5xx status code
func (o *SubmitGovernanceProposalBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this submit governance proposal bad request response a status code equal to that given
func (o *SubmitGovernanceProposalBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the submit governance proposal bad request response
func (o *SubmitGovernanceProposalBadRequest) Code() int {
	return 400
}

func (o *SubmitGovernanceProposalBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/submit][%d] submitGovernanceProposalBadRequest %s", 400, payload)
}

func (o *SubmitGovernanceProposalBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/submit][%d] submitGovernanceProposalBadRequest %s", 400, payload)
}

func (o *SubmitGovernanceProposalBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *SubmitGovernanceProposalBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewSubmitGovernanceProposalInternalServerError creates a SubmitGovernanceProposalInternalServerError with default headers values
func NewSubmitGovernanceProposalInternalServerError() *SubmitGovernanceProposalInternalServerError {
	return &SubmitGovernanceProposalInternalServerError{}
}

/*
SubmitGovernanceProposalInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SubmitGovernanceProposalInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this submit governance proposal internal server error response has a 2xx status code
func (o *SubmitGovernanceProposalInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit governance proposal internal server error response has a 3xx status code
func (o *SubmitGovernanceProposalInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit governance proposal internal server error response has a 4xx status code
func (o *SubmitGovernanceProposalInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this submit governance proposal internal server error response has a 5xx status code
func (o *SubmitGovernanceProposalInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this submit governance proposal internal server error response a status code equal to that given
func (o *SubmitGovernanceProposalInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the submit governance proposal internal server error response
func (o *SubmitGovernanceProposalInternalServerError) Code() int {
	return 500
}

func (o *SubmitGovernanceProposalInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/submit][%d] submitGovernanceProposalInternalServerError %s", 500, payload)
}

func (o *SubmitGovernanceProposalInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /pro/networks/proposals/{proposalId}/submit][%d] submitGovernanceProposalInternalServerError %s", 500, payload)
}

func (o *SubmitGovernanceProposalInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *SubmitGovernanceProposalInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
