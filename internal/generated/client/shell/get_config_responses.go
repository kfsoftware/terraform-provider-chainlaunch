// Code generated by go-swagger; DO NOT EDIT.

package shell

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetConfigReader is a Reader for the GetConfig structure.
type GetConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /chaincode-projects/{id}/shell/config] getConfig", response, response.Code())
	}
}

// NewGetConfigOK creates a GetConfigOK with default headers values
func NewGetConfigOK() *GetConfigOK {
	return &GetConfigOK{}
}

/*
GetConfigOK describes a response with status code 200, with default header values.

Terminal configuration
*/
type GetConfigOK struct {
	Payload any
}

// IsSuccess returns true when this get config o k response has a 2xx status code
func (o *GetConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get config o k response has a 3xx status code
func (o *GetConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config o k response has a 4xx status code
func (o *GetConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config o k response has a 5xx status code
func (o *GetConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get config o k response a status code equal to that given
func (o *GetConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get config o k response
func (o *GetConfigOK) Code() int {
	return 200
}

func (o *GetConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/config][%d] getConfigOK %s", 200, payload)
}

func (o *GetConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/config][%d] getConfigOK %s", 200, payload)
}

func (o *GetConfigOK) GetPayload() any {
	return o.Payload
}

func (o *GetConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConfigBadRequest creates a GetConfigBadRequest with default headers values
func NewGetConfigBadRequest() *GetConfigBadRequest {
	return &GetConfigBadRequest{}
}

/*
GetConfigBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetConfigBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get config bad request response has a 2xx status code
func (o *GetConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config bad request response has a 3xx status code
func (o *GetConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config bad request response has a 4xx status code
func (o *GetConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get config bad request response has a 5xx status code
func (o *GetConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get config bad request response a status code equal to that given
func (o *GetConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get config bad request response
func (o *GetConfigBadRequest) Code() int {
	return 400
}

func (o *GetConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/config][%d] getConfigBadRequest %s", 400, payload)
}

func (o *GetConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/config][%d] getConfigBadRequest %s", 400, payload)
}

func (o *GetConfigBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConfigInternalServerError creates a GetConfigInternalServerError with default headers values
func NewGetConfigInternalServerError() *GetConfigInternalServerError {
	return &GetConfigInternalServerError{}
}

/*
GetConfigInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetConfigInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get config internal server error response has a 2xx status code
func (o *GetConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config internal server error response has a 3xx status code
func (o *GetConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config internal server error response has a 4xx status code
func (o *GetConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config internal server error response has a 5xx status code
func (o *GetConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get config internal server error response a status code equal to that given
func (o *GetConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get config internal server error response
func (o *GetConfigInternalServerError) Code() int {
	return 500
}

func (o *GetConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/config][%d] getConfigInternalServerError %s", 500, payload)
}

func (o *GetConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/config][%d] getConfigInternalServerError %s", 500, payload)
}

func (o *GetConfigInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
