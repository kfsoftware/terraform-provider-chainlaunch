// Code generated by go-swagger; DO NOT EDIT.

package shell

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetSessionReader is a Reader for the GetSession structure.
type GetSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSessionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /chaincode-projects/{id}/shell/sessions/{sessionID}] getSession", response, response.Code())
	}
}

// NewGetSessionOK creates a GetSessionOK with default headers values
func NewGetSessionOK() *GetSessionOK {
	return &GetSessionOK{}
}

/*
GetSessionOK describes a response with status code 200, with default header values.

Session details
*/
type GetSessionOK struct {
	Payload any
}

// IsSuccess returns true when this get session o k response has a 2xx status code
func (o *GetSessionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get session o k response has a 3xx status code
func (o *GetSessionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get session o k response has a 4xx status code
func (o *GetSessionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get session o k response has a 5xx status code
func (o *GetSessionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get session o k response a status code equal to that given
func (o *GetSessionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get session o k response
func (o *GetSessionOK) Code() int {
	return 200
}

func (o *GetSessionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/sessions/{sessionID}][%d] getSessionOK %s", 200, payload)
}

func (o *GetSessionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/sessions/{sessionID}][%d] getSessionOK %s", 200, payload)
}

func (o *GetSessionOK) GetPayload() any {
	return o.Payload
}

func (o *GetSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetSessionBadRequest creates a GetSessionBadRequest with default headers values
func NewGetSessionBadRequest() *GetSessionBadRequest {
	return &GetSessionBadRequest{}
}

/*
GetSessionBadRequest describes a response with status code 400, with default header values.

Validation error
*/
type GetSessionBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get session bad request response has a 2xx status code
func (o *GetSessionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get session bad request response has a 3xx status code
func (o *GetSessionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get session bad request response has a 4xx status code
func (o *GetSessionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get session bad request response has a 5xx status code
func (o *GetSessionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get session bad request response a status code equal to that given
func (o *GetSessionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get session bad request response
func (o *GetSessionBadRequest) Code() int {
	return 400
}

func (o *GetSessionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/sessions/{sessionID}][%d] getSessionBadRequest %s", 400, payload)
}

func (o *GetSessionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/sessions/{sessionID}][%d] getSessionBadRequest %s", 400, payload)
}

func (o *GetSessionBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetSessionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetSessionNotFound creates a GetSessionNotFound with default headers values
func NewGetSessionNotFound() *GetSessionNotFound {
	return &GetSessionNotFound{}
}

/*
GetSessionNotFound describes a response with status code 404, with default header values.

Session not found
*/
type GetSessionNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get session not found response has a 2xx status code
func (o *GetSessionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get session not found response has a 3xx status code
func (o *GetSessionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get session not found response has a 4xx status code
func (o *GetSessionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get session not found response has a 5xx status code
func (o *GetSessionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get session not found response a status code equal to that given
func (o *GetSessionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get session not found response
func (o *GetSessionNotFound) Code() int {
	return 404
}

func (o *GetSessionNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/sessions/{sessionID}][%d] getSessionNotFound %s", 404, payload)
}

func (o *GetSessionNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/sessions/{sessionID}][%d] getSessionNotFound %s", 404, payload)
}

func (o *GetSessionNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetSessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetSessionInternalServerError creates a GetSessionInternalServerError with default headers values
func NewGetSessionInternalServerError() *GetSessionInternalServerError {
	return &GetSessionInternalServerError{}
}

/*
GetSessionInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetSessionInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this get session internal server error response has a 2xx status code
func (o *GetSessionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get session internal server error response has a 3xx status code
func (o *GetSessionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get session internal server error response has a 4xx status code
func (o *GetSessionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get session internal server error response has a 5xx status code
func (o *GetSessionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get session internal server error response a status code equal to that given
func (o *GetSessionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get session internal server error response
func (o *GetSessionInternalServerError) Code() int {
	return 500
}

func (o *GetSessionInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/sessions/{sessionID}][%d] getSessionInternalServerError %s", 500, payload)
}

func (o *GetSessionInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/shell/sessions/{sessionID}][%d] getSessionInternalServerError %s", 500, payload)
}

func (o *GetSessionInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *GetSessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
