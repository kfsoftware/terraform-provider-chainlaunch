// Code generated by go-swagger; DO NOT EDIT.

package api_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeactivateAPIKeyReader is a Reader for the DeactivateAPIKey structure.
type DeactivateAPIKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeactivateAPIKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 204:
		result := NewDeactivateAPIKeyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeactivateAPIKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeactivateAPIKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeactivateAPIKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeactivateAPIKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeactivateAPIKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api-keys/{id}] deactivateAPIKey", response, response.Code())
	}
}

// NewDeactivateAPIKeyNoContent creates a DeactivateAPIKeyNoContent with default headers values
func NewDeactivateAPIKeyNoContent() *DeactivateAPIKeyNoContent {
	return &DeactivateAPIKeyNoContent{}
}

/*
DeactivateAPIKeyNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeactivateAPIKeyNoContent struct {
}

// IsSuccess returns true when this deactivate Api key no content response has a 2xx status code
func (o *DeactivateAPIKeyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deactivate Api key no content response has a 3xx status code
func (o *DeactivateAPIKeyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate Api key no content response has a 4xx status code
func (o *DeactivateAPIKeyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this deactivate Api key no content response has a 5xx status code
func (o *DeactivateAPIKeyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate Api key no content response a status code equal to that given
func (o *DeactivateAPIKeyNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the deactivate Api key no content response
func (o *DeactivateAPIKeyNoContent) Code() int {
	return 204
}

func (o *DeactivateAPIKeyNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyNoContent", 204)
}

func (o *DeactivateAPIKeyNoContent) String() string {
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyNoContent", 204)
}

func (o *DeactivateAPIKeyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeactivateAPIKeyBadRequest creates a DeactivateAPIKeyBadRequest with default headers values
func NewDeactivateAPIKeyBadRequest() *DeactivateAPIKeyBadRequest {
	return &DeactivateAPIKeyBadRequest{}
}

/*
DeactivateAPIKeyBadRequest describes a response with status code 400, with default header values.

Invalid ID
*/
type DeactivateAPIKeyBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this deactivate Api key bad request response has a 2xx status code
func (o *DeactivateAPIKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate Api key bad request response has a 3xx status code
func (o *DeactivateAPIKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate Api key bad request response has a 4xx status code
func (o *DeactivateAPIKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this deactivate Api key bad request response has a 5xx status code
func (o *DeactivateAPIKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate Api key bad request response a status code equal to that given
func (o *DeactivateAPIKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the deactivate Api key bad request response
func (o *DeactivateAPIKeyBadRequest) Code() int {
	return 400
}

func (o *DeactivateAPIKeyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyBadRequest %s", 400, payload)
}

func (o *DeactivateAPIKeyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyBadRequest %s", 400, payload)
}

func (o *DeactivateAPIKeyBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeactivateAPIKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeactivateAPIKeyUnauthorized creates a DeactivateAPIKeyUnauthorized with default headers values
func NewDeactivateAPIKeyUnauthorized() *DeactivateAPIKeyUnauthorized {
	return &DeactivateAPIKeyUnauthorized{}
}

/*
DeactivateAPIKeyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeactivateAPIKeyUnauthorized struct {
	Payload map[string]string
}

// IsSuccess returns true when this deactivate Api key unauthorized response has a 2xx status code
func (o *DeactivateAPIKeyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate Api key unauthorized response has a 3xx status code
func (o *DeactivateAPIKeyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate Api key unauthorized response has a 4xx status code
func (o *DeactivateAPIKeyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this deactivate Api key unauthorized response has a 5xx status code
func (o *DeactivateAPIKeyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate Api key unauthorized response a status code equal to that given
func (o *DeactivateAPIKeyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the deactivate Api key unauthorized response
func (o *DeactivateAPIKeyUnauthorized) Code() int {
	return 401
}

func (o *DeactivateAPIKeyUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyUnauthorized %s", 401, payload)
}

func (o *DeactivateAPIKeyUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyUnauthorized %s", 401, payload)
}

func (o *DeactivateAPIKeyUnauthorized) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeactivateAPIKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeactivateAPIKeyForbidden creates a DeactivateAPIKeyForbidden with default headers values
func NewDeactivateAPIKeyForbidden() *DeactivateAPIKeyForbidden {
	return &DeactivateAPIKeyForbidden{}
}

/*
DeactivateAPIKeyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeactivateAPIKeyForbidden struct {
	Payload map[string]string
}

// IsSuccess returns true when this deactivate Api key forbidden response has a 2xx status code
func (o *DeactivateAPIKeyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate Api key forbidden response has a 3xx status code
func (o *DeactivateAPIKeyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate Api key forbidden response has a 4xx status code
func (o *DeactivateAPIKeyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this deactivate Api key forbidden response has a 5xx status code
func (o *DeactivateAPIKeyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate Api key forbidden response a status code equal to that given
func (o *DeactivateAPIKeyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the deactivate Api key forbidden response
func (o *DeactivateAPIKeyForbidden) Code() int {
	return 403
}

func (o *DeactivateAPIKeyForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyForbidden %s", 403, payload)
}

func (o *DeactivateAPIKeyForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyForbidden %s", 403, payload)
}

func (o *DeactivateAPIKeyForbidden) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeactivateAPIKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeactivateAPIKeyNotFound creates a DeactivateAPIKeyNotFound with default headers values
func NewDeactivateAPIKeyNotFound() *DeactivateAPIKeyNotFound {
	return &DeactivateAPIKeyNotFound{}
}

/*
DeactivateAPIKeyNotFound describes a response with status code 404, with default header values.

API key not found
*/
type DeactivateAPIKeyNotFound struct {
	Payload map[string]string
}

// IsSuccess returns true when this deactivate Api key not found response has a 2xx status code
func (o *DeactivateAPIKeyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate Api key not found response has a 3xx status code
func (o *DeactivateAPIKeyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate Api key not found response has a 4xx status code
func (o *DeactivateAPIKeyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this deactivate Api key not found response has a 5xx status code
func (o *DeactivateAPIKeyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this deactivate Api key not found response a status code equal to that given
func (o *DeactivateAPIKeyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the deactivate Api key not found response
func (o *DeactivateAPIKeyNotFound) Code() int {
	return 404
}

func (o *DeactivateAPIKeyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyNotFound %s", 404, payload)
}

func (o *DeactivateAPIKeyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyNotFound %s", 404, payload)
}

func (o *DeactivateAPIKeyNotFound) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeactivateAPIKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeactivateAPIKeyInternalServerError creates a DeactivateAPIKeyInternalServerError with default headers values
func NewDeactivateAPIKeyInternalServerError() *DeactivateAPIKeyInternalServerError {
	return &DeactivateAPIKeyInternalServerError{}
}

/*
DeactivateAPIKeyInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeactivateAPIKeyInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this deactivate Api key internal server error response has a 2xx status code
func (o *DeactivateAPIKeyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deactivate Api key internal server error response has a 3xx status code
func (o *DeactivateAPIKeyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deactivate Api key internal server error response has a 4xx status code
func (o *DeactivateAPIKeyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this deactivate Api key internal server error response has a 5xx status code
func (o *DeactivateAPIKeyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this deactivate Api key internal server error response a status code equal to that given
func (o *DeactivateAPIKeyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the deactivate Api key internal server error response
func (o *DeactivateAPIKeyInternalServerError) Code() int {
	return 500
}

func (o *DeactivateAPIKeyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyInternalServerError %s", 500, payload)
}

func (o *DeactivateAPIKeyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api-keys/{id}][%d] deactivateApiKeyInternalServerError %s", 500, payload)
}

func (o *DeactivateAPIKeyInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *DeactivateAPIKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
