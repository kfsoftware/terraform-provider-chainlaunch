// Code generated by go-swagger; DO NOT EDIT.

package chaincode_projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// InvokeChaincodeTransactionReader is a Reader for the InvokeChaincodeTransaction structure.
type InvokeChaincodeTransactionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InvokeChaincodeTransactionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewInvokeChaincodeTransactionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInvokeChaincodeTransactionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInvokeChaincodeTransactionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInvokeChaincodeTransactionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /chaincode-projects/{id}/invoke] invokeChaincodeTransaction", response, response.Code())
	}
}

// NewInvokeChaincodeTransactionOK creates a InvokeChaincodeTransactionOK with default headers values
func NewInvokeChaincodeTransactionOK() *InvokeChaincodeTransactionOK {
	return &InvokeChaincodeTransactionOK{}
}

/*
InvokeChaincodeTransactionOK describes a response with status code 200, with default header values.

Transaction result
*/
type InvokeChaincodeTransactionOK struct {
	Payload *models.ProjectsHandlerResponse
}

// IsSuccess returns true when this invoke chaincode transaction o k response has a 2xx status code
func (o *InvokeChaincodeTransactionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this invoke chaincode transaction o k response has a 3xx status code
func (o *InvokeChaincodeTransactionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke chaincode transaction o k response has a 4xx status code
func (o *InvokeChaincodeTransactionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this invoke chaincode transaction o k response has a 5xx status code
func (o *InvokeChaincodeTransactionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke chaincode transaction o k response a status code equal to that given
func (o *InvokeChaincodeTransactionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the invoke chaincode transaction o k response
func (o *InvokeChaincodeTransactionOK) Code() int {
	return 200
}

func (o *InvokeChaincodeTransactionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/invoke][%d] invokeChaincodeTransactionOK %s", 200, payload)
}

func (o *InvokeChaincodeTransactionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/invoke][%d] invokeChaincodeTransactionOK %s", 200, payload)
}

func (o *InvokeChaincodeTransactionOK) GetPayload() *models.ProjectsHandlerResponse {
	return o.Payload
}

func (o *InvokeChaincodeTransactionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectsHandlerResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewInvokeChaincodeTransactionBadRequest creates a InvokeChaincodeTransactionBadRequest with default headers values
func NewInvokeChaincodeTransactionBadRequest() *InvokeChaincodeTransactionBadRequest {
	return &InvokeChaincodeTransactionBadRequest{}
}

/*
InvokeChaincodeTransactionBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type InvokeChaincodeTransactionBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this invoke chaincode transaction bad request response has a 2xx status code
func (o *InvokeChaincodeTransactionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke chaincode transaction bad request response has a 3xx status code
func (o *InvokeChaincodeTransactionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke chaincode transaction bad request response has a 4xx status code
func (o *InvokeChaincodeTransactionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke chaincode transaction bad request response has a 5xx status code
func (o *InvokeChaincodeTransactionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke chaincode transaction bad request response a status code equal to that given
func (o *InvokeChaincodeTransactionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the invoke chaincode transaction bad request response
func (o *InvokeChaincodeTransactionBadRequest) Code() int {
	return 400
}

func (o *InvokeChaincodeTransactionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/invoke][%d] invokeChaincodeTransactionBadRequest %s", 400, payload)
}

func (o *InvokeChaincodeTransactionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/invoke][%d] invokeChaincodeTransactionBadRequest %s", 400, payload)
}

func (o *InvokeChaincodeTransactionBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *InvokeChaincodeTransactionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewInvokeChaincodeTransactionNotFound creates a InvokeChaincodeTransactionNotFound with default headers values
func NewInvokeChaincodeTransactionNotFound() *InvokeChaincodeTransactionNotFound {
	return &InvokeChaincodeTransactionNotFound{}
}

/*
InvokeChaincodeTransactionNotFound describes a response with status code 404, with default header values.

Project not found
*/
type InvokeChaincodeTransactionNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this invoke chaincode transaction not found response has a 2xx status code
func (o *InvokeChaincodeTransactionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke chaincode transaction not found response has a 3xx status code
func (o *InvokeChaincodeTransactionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke chaincode transaction not found response has a 4xx status code
func (o *InvokeChaincodeTransactionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke chaincode transaction not found response has a 5xx status code
func (o *InvokeChaincodeTransactionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke chaincode transaction not found response a status code equal to that given
func (o *InvokeChaincodeTransactionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the invoke chaincode transaction not found response
func (o *InvokeChaincodeTransactionNotFound) Code() int {
	return 404
}

func (o *InvokeChaincodeTransactionNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/invoke][%d] invokeChaincodeTransactionNotFound %s", 404, payload)
}

func (o *InvokeChaincodeTransactionNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/invoke][%d] invokeChaincodeTransactionNotFound %s", 404, payload)
}

func (o *InvokeChaincodeTransactionNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *InvokeChaincodeTransactionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewInvokeChaincodeTransactionInternalServerError creates a InvokeChaincodeTransactionInternalServerError with default headers values
func NewInvokeChaincodeTransactionInternalServerError() *InvokeChaincodeTransactionInternalServerError {
	return &InvokeChaincodeTransactionInternalServerError{}
}

/*
InvokeChaincodeTransactionInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type InvokeChaincodeTransactionInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this invoke chaincode transaction internal server error response has a 2xx status code
func (o *InvokeChaincodeTransactionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke chaincode transaction internal server error response has a 3xx status code
func (o *InvokeChaincodeTransactionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke chaincode transaction internal server error response has a 4xx status code
func (o *InvokeChaincodeTransactionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this invoke chaincode transaction internal server error response has a 5xx status code
func (o *InvokeChaincodeTransactionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this invoke chaincode transaction internal server error response a status code equal to that given
func (o *InvokeChaincodeTransactionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the invoke chaincode transaction internal server error response
func (o *InvokeChaincodeTransactionInternalServerError) Code() int {
	return 500
}

func (o *InvokeChaincodeTransactionInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/invoke][%d] invokeChaincodeTransactionInternalServerError %s", 500, payload)
}

func (o *InvokeChaincodeTransactionInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/invoke][%d] invokeChaincodeTransactionInternalServerError %s", 500, payload)
}

func (o *InvokeChaincodeTransactionInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *InvokeChaincodeTransactionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
