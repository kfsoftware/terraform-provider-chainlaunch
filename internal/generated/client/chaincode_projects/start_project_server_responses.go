// Code generated by go-swagger; DO NOT EDIT.

package chaincode_projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// StartProjectServerReader is a Reader for the StartProjectServer structure.
type StartProjectServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartProjectServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewStartProjectServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartProjectServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStartProjectServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartProjectServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /chaincode-projects/{id}/start] startProjectServer", response, response.Code())
	}
}

// NewStartProjectServerOK creates a StartProjectServerOK with default headers values
func NewStartProjectServerOK() *StartProjectServerOK {
	return &StartProjectServerOK{}
}

/*
StartProjectServerOK describes a response with status code 200, with default header values.

OK
*/
type StartProjectServerOK struct {
	Payload map[string]string
}

// IsSuccess returns true when this start project server o k response has a 2xx status code
func (o *StartProjectServerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start project server o k response has a 3xx status code
func (o *StartProjectServerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start project server o k response has a 4xx status code
func (o *StartProjectServerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start project server o k response has a 5xx status code
func (o *StartProjectServerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start project server o k response a status code equal to that given
func (o *StartProjectServerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start project server o k response
func (o *StartProjectServerOK) Code() int {
	return 200
}

func (o *StartProjectServerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/start][%d] startProjectServerOK %s", 200, payload)
}

func (o *StartProjectServerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/start][%d] startProjectServerOK %s", 200, payload)
}

func (o *StartProjectServerOK) GetPayload() map[string]string {
	return o.Payload
}

func (o *StartProjectServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewStartProjectServerBadRequest creates a StartProjectServerBadRequest with default headers values
func NewStartProjectServerBadRequest() *StartProjectServerBadRequest {
	return &StartProjectServerBadRequest{}
}

/*
StartProjectServerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StartProjectServerBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this start project server bad request response has a 2xx status code
func (o *StartProjectServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start project server bad request response has a 3xx status code
func (o *StartProjectServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start project server bad request response has a 4xx status code
func (o *StartProjectServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start project server bad request response has a 5xx status code
func (o *StartProjectServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start project server bad request response a status code equal to that given
func (o *StartProjectServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start project server bad request response
func (o *StartProjectServerBadRequest) Code() int {
	return 400
}

func (o *StartProjectServerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/start][%d] startProjectServerBadRequest %s", 400, payload)
}

func (o *StartProjectServerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/start][%d] startProjectServerBadRequest %s", 400, payload)
}

func (o *StartProjectServerBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *StartProjectServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewStartProjectServerNotFound creates a StartProjectServerNotFound with default headers values
func NewStartProjectServerNotFound() *StartProjectServerNotFound {
	return &StartProjectServerNotFound{}
}

/*
StartProjectServerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StartProjectServerNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this start project server not found response has a 2xx status code
func (o *StartProjectServerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start project server not found response has a 3xx status code
func (o *StartProjectServerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start project server not found response has a 4xx status code
func (o *StartProjectServerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this start project server not found response has a 5xx status code
func (o *StartProjectServerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this start project server not found response a status code equal to that given
func (o *StartProjectServerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the start project server not found response
func (o *StartProjectServerNotFound) Code() int {
	return 404
}

func (o *StartProjectServerNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/start][%d] startProjectServerNotFound %s", 404, payload)
}

func (o *StartProjectServerNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/start][%d] startProjectServerNotFound %s", 404, payload)
}

func (o *StartProjectServerNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *StartProjectServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewStartProjectServerInternalServerError creates a StartProjectServerInternalServerError with default headers values
func NewStartProjectServerInternalServerError() *StartProjectServerInternalServerError {
	return &StartProjectServerInternalServerError{}
}

/*
StartProjectServerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type StartProjectServerInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this start project server internal server error response has a 2xx status code
func (o *StartProjectServerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start project server internal server error response has a 3xx status code
func (o *StartProjectServerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start project server internal server error response has a 4xx status code
func (o *StartProjectServerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start project server internal server error response has a 5xx status code
func (o *StartProjectServerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start project server internal server error response a status code equal to that given
func (o *StartProjectServerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start project server internal server error response
func (o *StartProjectServerInternalServerError) Code() int {
	return 500
}

func (o *StartProjectServerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/start][%d] startProjectServerInternalServerError %s", 500, payload)
}

func (o *StartProjectServerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects/{id}/start][%d] startProjectServerInternalServerError %s", 500, payload)
}

func (o *StartProjectServerInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *StartProjectServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
