// Code generated by go-swagger; DO NOT EDIT.

package chaincode_projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetProjectFileDiffParams creates a new GetProjectFileDiffParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetProjectFileDiffParams() *GetProjectFileDiffParams {
	return &GetProjectFileDiffParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetProjectFileDiffParamsWithTimeout creates a new GetProjectFileDiffParams object
// with the ability to set a timeout on a request.
func NewGetProjectFileDiffParamsWithTimeout(timeout time.Duration) *GetProjectFileDiffParams {
	return &GetProjectFileDiffParams{
		timeout: timeout,
	}
}

// NewGetProjectFileDiffParamsWithContext creates a new GetProjectFileDiffParams object
// with the ability to set a context for a request.
func NewGetProjectFileDiffParamsWithContext(ctx context.Context) *GetProjectFileDiffParams {
	return &GetProjectFileDiffParams{
		Context: ctx,
	}
}

// NewGetProjectFileDiffParamsWithHTTPClient creates a new GetProjectFileDiffParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetProjectFileDiffParamsWithHTTPClient(client *http.Client) *GetProjectFileDiffParams {
	return &GetProjectFileDiffParams{
		HTTPClient: client,
	}
}

/*
GetProjectFileDiffParams contains all the parameters to send to the API endpoint

	for the get project file diff operation.

	Typically these are written to a http.Request.
*/
type GetProjectFileDiffParams struct {

	/* File.

	   File path (relative to project root)
	*/
	File string

	/* From.

	   From commit hash
	*/
	From string

	/* ID.

	   Project ID
	*/
	ID int64

	/* To.

	   To commit hash
	*/
	To string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get project file diff params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProjectFileDiffParams) WithDefaults() *GetProjectFileDiffParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get project file diff params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProjectFileDiffParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get project file diff params
func (o *GetProjectFileDiffParams) WithTimeout(timeout time.Duration) *GetProjectFileDiffParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get project file diff params
func (o *GetProjectFileDiffParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get project file diff params
func (o *GetProjectFileDiffParams) WithContext(ctx context.Context) *GetProjectFileDiffParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get project file diff params
func (o *GetProjectFileDiffParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get project file diff params
func (o *GetProjectFileDiffParams) WithHTTPClient(client *http.Client) *GetProjectFileDiffParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get project file diff params
func (o *GetProjectFileDiffParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFile adds the file to the get project file diff params
func (o *GetProjectFileDiffParams) WithFile(file string) *GetProjectFileDiffParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the get project file diff params
func (o *GetProjectFileDiffParams) SetFile(file string) {
	o.File = file
}

// WithFrom adds the from to the get project file diff params
func (o *GetProjectFileDiffParams) WithFrom(from string) *GetProjectFileDiffParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the get project file diff params
func (o *GetProjectFileDiffParams) SetFrom(from string) {
	o.From = from
}

// WithID adds the id to the get project file diff params
func (o *GetProjectFileDiffParams) WithID(id int64) *GetProjectFileDiffParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get project file diff params
func (o *GetProjectFileDiffParams) SetID(id int64) {
	o.ID = id
}

// WithTo adds the to to the get project file diff params
func (o *GetProjectFileDiffParams) WithTo(to string) *GetProjectFileDiffParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the get project file diff params
func (o *GetProjectFileDiffParams) SetTo(to string) {
	o.To = to
}

// WriteToRequest writes these params to a swagger request
func (o *GetProjectFileDiffParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param file
	qrFile := o.File
	qFile := qrFile
	if qFile != "" {

		if err := r.SetQueryParam("file", qFile); err != nil {
			return err
		}
	}

	// query param from
	qrFrom := o.From
	qFrom := qrFrom
	if qFrom != "" {

		if err := r.SetQueryParam("from", qFrom); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	// query param to
	qrTo := o.To
	qTo := qrTo
	if qTo != "" {

		if err := r.SetQueryParam("to", qTo); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
