// Code generated by go-swagger; DO NOT EDIT.

package chaincode_projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// CreateProjectReader is a Reader for the CreateProject structure.
type CreateProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 201:
		result := NewCreateProjectCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateProjectConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateProjectUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /chaincode-projects] createProject", response, response.Code())
	}
}

// NewCreateProjectCreated creates a CreateProjectCreated with default headers values
func NewCreateProjectCreated() *CreateProjectCreated {
	return &CreateProjectCreated{}
}

/*
CreateProjectCreated describes a response with status code 201, with default header values.

Created
*/
type CreateProjectCreated struct {
	Payload *models.ProjectsCreateProjectResponse
}

// IsSuccess returns true when this create project created response has a 2xx status code
func (o *CreateProjectCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project created response has a 3xx status code
func (o *CreateProjectCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project created response has a 4xx status code
func (o *CreateProjectCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project created response has a 5xx status code
func (o *CreateProjectCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create project created response a status code equal to that given
func (o *CreateProjectCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create project created response
func (o *CreateProjectCreated) Code() int {
	return 201
}

func (o *CreateProjectCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectCreated %s", 201, payload)
}

func (o *CreateProjectCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectCreated %s", 201, payload)
}

func (o *CreateProjectCreated) GetPayload() *models.ProjectsCreateProjectResponse {
	return o.Payload
}

func (o *CreateProjectCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectsCreateProjectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateProjectBadRequest creates a CreateProjectBadRequest with default headers values
func NewCreateProjectBadRequest() *CreateProjectBadRequest {
	return &CreateProjectBadRequest{}
}

/*
CreateProjectBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateProjectBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create project bad request response has a 2xx status code
func (o *CreateProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project bad request response has a 3xx status code
func (o *CreateProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project bad request response has a 4xx status code
func (o *CreateProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project bad request response has a 5xx status code
func (o *CreateProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create project bad request response a status code equal to that given
func (o *CreateProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create project bad request response
func (o *CreateProjectBadRequest) Code() int {
	return 400
}

func (o *CreateProjectBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectBadRequest %s", 400, payload)
}

func (o *CreateProjectBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectBadRequest %s", 400, payload)
}

func (o *CreateProjectBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateProjectUnauthorized creates a CreateProjectUnauthorized with default headers values
func NewCreateProjectUnauthorized() *CreateProjectUnauthorized {
	return &CreateProjectUnauthorized{}
}

/*
CreateProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateProjectUnauthorized struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create project unauthorized response has a 2xx status code
func (o *CreateProjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project unauthorized response has a 3xx status code
func (o *CreateProjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project unauthorized response has a 4xx status code
func (o *CreateProjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project unauthorized response has a 5xx status code
func (o *CreateProjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create project unauthorized response a status code equal to that given
func (o *CreateProjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create project unauthorized response
func (o *CreateProjectUnauthorized) Code() int {
	return 401
}

func (o *CreateProjectUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectUnauthorized %s", 401, payload)
}

func (o *CreateProjectUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectUnauthorized %s", 401, payload)
}

func (o *CreateProjectUnauthorized) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateProjectForbidden creates a CreateProjectForbidden with default headers values
func NewCreateProjectForbidden() *CreateProjectForbidden {
	return &CreateProjectForbidden{}
}

/*
CreateProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateProjectForbidden struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create project forbidden response has a 2xx status code
func (o *CreateProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project forbidden response has a 3xx status code
func (o *CreateProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project forbidden response has a 4xx status code
func (o *CreateProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project forbidden response has a 5xx status code
func (o *CreateProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create project forbidden response a status code equal to that given
func (o *CreateProjectForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create project forbidden response
func (o *CreateProjectForbidden) Code() int {
	return 403
}

func (o *CreateProjectForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectForbidden %s", 403, payload)
}

func (o *CreateProjectForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectForbidden %s", 403, payload)
}

func (o *CreateProjectForbidden) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateProjectNotFound creates a CreateProjectNotFound with default headers values
func NewCreateProjectNotFound() *CreateProjectNotFound {
	return &CreateProjectNotFound{}
}

/*
CreateProjectNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateProjectNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create project not found response has a 2xx status code
func (o *CreateProjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project not found response has a 3xx status code
func (o *CreateProjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project not found response has a 4xx status code
func (o *CreateProjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project not found response has a 5xx status code
func (o *CreateProjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create project not found response a status code equal to that given
func (o *CreateProjectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create project not found response
func (o *CreateProjectNotFound) Code() int {
	return 404
}

func (o *CreateProjectNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectNotFound %s", 404, payload)
}

func (o *CreateProjectNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectNotFound %s", 404, payload)
}

func (o *CreateProjectNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateProjectConflict creates a CreateProjectConflict with default headers values
func NewCreateProjectConflict() *CreateProjectConflict {
	return &CreateProjectConflict{}
}

/*
CreateProjectConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreateProjectConflict struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create project conflict response has a 2xx status code
func (o *CreateProjectConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project conflict response has a 3xx status code
func (o *CreateProjectConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project conflict response has a 4xx status code
func (o *CreateProjectConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project conflict response has a 5xx status code
func (o *CreateProjectConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create project conflict response a status code equal to that given
func (o *CreateProjectConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create project conflict response
func (o *CreateProjectConflict) Code() int {
	return 409
}

func (o *CreateProjectConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectConflict %s", 409, payload)
}

func (o *CreateProjectConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectConflict %s", 409, payload)
}

func (o *CreateProjectConflict) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateProjectConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateProjectUnprocessableEntity creates a CreateProjectUnprocessableEntity with default headers values
func NewCreateProjectUnprocessableEntity() *CreateProjectUnprocessableEntity {
	return &CreateProjectUnprocessableEntity{}
}

/*
CreateProjectUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type CreateProjectUnprocessableEntity struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create project unprocessable entity response has a 2xx status code
func (o *CreateProjectUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project unprocessable entity response has a 3xx status code
func (o *CreateProjectUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project unprocessable entity response has a 4xx status code
func (o *CreateProjectUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project unprocessable entity response has a 5xx status code
func (o *CreateProjectUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create project unprocessable entity response a status code equal to that given
func (o *CreateProjectUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create project unprocessable entity response
func (o *CreateProjectUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateProjectUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectUnprocessableEntity %s", 422, payload)
}

func (o *CreateProjectUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectUnprocessableEntity %s", 422, payload)
}

func (o *CreateProjectUnprocessableEntity) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateProjectUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateProjectInternalServerError creates a CreateProjectInternalServerError with default headers values
func NewCreateProjectInternalServerError() *CreateProjectInternalServerError {
	return &CreateProjectInternalServerError{}
}

/*
CreateProjectInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateProjectInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this create project internal server error response has a 2xx status code
func (o *CreateProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project internal server error response has a 3xx status code
func (o *CreateProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project internal server error response has a 4xx status code
func (o *CreateProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project internal server error response has a 5xx status code
func (o *CreateProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create project internal server error response a status code equal to that given
func (o *CreateProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create project internal server error response
func (o *CreateProjectInternalServerError) Code() int {
	return 500
}

func (o *CreateProjectInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectInternalServerError %s", 500, payload)
}

func (o *CreateProjectInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /chaincode-projects][%d] createProjectInternalServerError %s", 500, payload)
}

func (o *CreateProjectInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *CreateProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
