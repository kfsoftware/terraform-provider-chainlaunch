// Code generated by go-swagger; DO NOT EDIT.

package chaincode_projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// GetChaincodeProjectMetadataReader is a Reader for the GetChaincodeProjectMetadata structure.
type GetChaincodeProjectMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChaincodeProjectMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetChaincodeProjectMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetChaincodeProjectMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChaincodeProjectMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChaincodeProjectMetadataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /chaincode-projects/{id}/metadata] getChaincodeProjectMetadata", response, response.Code())
	}
}

// NewGetChaincodeProjectMetadataOK creates a GetChaincodeProjectMetadataOK with default headers values
func NewGetChaincodeProjectMetadataOK() *GetChaincodeProjectMetadataOK {
	return &GetChaincodeProjectMetadataOK{}
}

/*
GetChaincodeProjectMetadataOK describes a response with status code 200, with default header values.

Project metadata
*/
type GetChaincodeProjectMetadataOK struct {
	Payload *models.ProjectsHandlerResponse
}

// IsSuccess returns true when this get chaincode project metadata o k response has a 2xx status code
func (o *GetChaincodeProjectMetadataOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chaincode project metadata o k response has a 3xx status code
func (o *GetChaincodeProjectMetadataOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode project metadata o k response has a 4xx status code
func (o *GetChaincodeProjectMetadataOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chaincode project metadata o k response has a 5xx status code
func (o *GetChaincodeProjectMetadataOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode project metadata o k response a status code equal to that given
func (o *GetChaincodeProjectMetadataOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get chaincode project metadata o k response
func (o *GetChaincodeProjectMetadataOK) Code() int {
	return 200
}

func (o *GetChaincodeProjectMetadataOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/metadata][%d] getChaincodeProjectMetadataOK %s", 200, payload)
}

func (o *GetChaincodeProjectMetadataOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/metadata][%d] getChaincodeProjectMetadataOK %s", 200, payload)
}

func (o *GetChaincodeProjectMetadataOK) GetPayload() *models.ProjectsHandlerResponse {
	return o.Payload
}

func (o *GetChaincodeProjectMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectsHandlerResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeProjectMetadataBadRequest creates a GetChaincodeProjectMetadataBadRequest with default headers values
func NewGetChaincodeProjectMetadataBadRequest() *GetChaincodeProjectMetadataBadRequest {
	return &GetChaincodeProjectMetadataBadRequest{}
}

/*
GetChaincodeProjectMetadataBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type GetChaincodeProjectMetadataBadRequest struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode project metadata bad request response has a 2xx status code
func (o *GetChaincodeProjectMetadataBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode project metadata bad request response has a 3xx status code
func (o *GetChaincodeProjectMetadataBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode project metadata bad request response has a 4xx status code
func (o *GetChaincodeProjectMetadataBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chaincode project metadata bad request response has a 5xx status code
func (o *GetChaincodeProjectMetadataBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode project metadata bad request response a status code equal to that given
func (o *GetChaincodeProjectMetadataBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get chaincode project metadata bad request response
func (o *GetChaincodeProjectMetadataBadRequest) Code() int {
	return 400
}

func (o *GetChaincodeProjectMetadataBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/metadata][%d] getChaincodeProjectMetadataBadRequest %s", 400, payload)
}

func (o *GetChaincodeProjectMetadataBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/metadata][%d] getChaincodeProjectMetadataBadRequest %s", 400, payload)
}

func (o *GetChaincodeProjectMetadataBadRequest) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeProjectMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeProjectMetadataNotFound creates a GetChaincodeProjectMetadataNotFound with default headers values
func NewGetChaincodeProjectMetadataNotFound() *GetChaincodeProjectMetadataNotFound {
	return &GetChaincodeProjectMetadataNotFound{}
}

/*
GetChaincodeProjectMetadataNotFound describes a response with status code 404, with default header values.

Project not found
*/
type GetChaincodeProjectMetadataNotFound struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode project metadata not found response has a 2xx status code
func (o *GetChaincodeProjectMetadataNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode project metadata not found response has a 3xx status code
func (o *GetChaincodeProjectMetadataNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode project metadata not found response has a 4xx status code
func (o *GetChaincodeProjectMetadataNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chaincode project metadata not found response has a 5xx status code
func (o *GetChaincodeProjectMetadataNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get chaincode project metadata not found response a status code equal to that given
func (o *GetChaincodeProjectMetadataNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get chaincode project metadata not found response
func (o *GetChaincodeProjectMetadataNotFound) Code() int {
	return 404
}

func (o *GetChaincodeProjectMetadataNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/metadata][%d] getChaincodeProjectMetadataNotFound %s", 404, payload)
}

func (o *GetChaincodeProjectMetadataNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/metadata][%d] getChaincodeProjectMetadataNotFound %s", 404, payload)
}

func (o *GetChaincodeProjectMetadataNotFound) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeProjectMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetChaincodeProjectMetadataInternalServerError creates a GetChaincodeProjectMetadataInternalServerError with default headers values
func NewGetChaincodeProjectMetadataInternalServerError() *GetChaincodeProjectMetadataInternalServerError {
	return &GetChaincodeProjectMetadataInternalServerError{}
}

/*
GetChaincodeProjectMetadataInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetChaincodeProjectMetadataInternalServerError struct {
	Payload *models.ResponseResponse
}

// IsSuccess returns true when this get chaincode project metadata internal server error response has a 2xx status code
func (o *GetChaincodeProjectMetadataInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chaincode project metadata internal server error response has a 3xx status code
func (o *GetChaincodeProjectMetadataInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chaincode project metadata internal server error response has a 4xx status code
func (o *GetChaincodeProjectMetadataInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chaincode project metadata internal server error response has a 5xx status code
func (o *GetChaincodeProjectMetadataInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get chaincode project metadata internal server error response a status code equal to that given
func (o *GetChaincodeProjectMetadataInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get chaincode project metadata internal server error response
func (o *GetChaincodeProjectMetadataInternalServerError) Code() int {
	return 500
}

func (o *GetChaincodeProjectMetadataInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/metadata][%d] getChaincodeProjectMetadataInternalServerError %s", 500, payload)
}

func (o *GetChaincodeProjectMetadataInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /chaincode-projects/{id}/metadata][%d] getChaincodeProjectMetadataInternalServerError %s", 500, payload)
}

func (o *GetChaincodeProjectMetadataInternalServerError) GetPayload() *models.ResponseResponse {
	return o.Payload
}

func (o *GetChaincodeProjectMetadataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
