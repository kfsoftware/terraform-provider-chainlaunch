// Code generated by go-swagger; DO NOT EDIT.

package chaincode_projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// ListFilesEntriesReader is a Reader for the ListFilesEntries structure.
type ListFilesEntriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListFilesEntriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListFilesEntriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListFilesEntriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListFilesEntriesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListFilesEntriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListFilesEntriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListFilesEntriesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListFilesEntriesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListFilesEntriesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /projects/{projectId}/files/entries] listFilesEntries", response, response.Code())
	}
}

// NewListFilesEntriesOK creates a ListFilesEntriesOK with default headers values
func NewListFilesEntriesOK() *ListFilesEntriesOK {
	return &ListFilesEntriesOK{}
}

/*
ListFilesEntriesOK describes a response with status code 200, with default header values.

OK
*/
type ListFilesEntriesOK struct {
	Payload *models.FilesDirectoryTreeNode
}

// IsSuccess returns true when this list files entries o k response has a 2xx status code
func (o *ListFilesEntriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list files entries o k response has a 3xx status code
func (o *ListFilesEntriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files entries o k response has a 4xx status code
func (o *ListFilesEntriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list files entries o k response has a 5xx status code
func (o *ListFilesEntriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list files entries o k response a status code equal to that given
func (o *ListFilesEntriesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list files entries o k response
func (o *ListFilesEntriesOK) Code() int {
	return 200
}

func (o *ListFilesEntriesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesOK %s", 200, payload)
}

func (o *ListFilesEntriesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesOK %s", 200, payload)
}

func (o *ListFilesEntriesOK) GetPayload() *models.FilesDirectoryTreeNode {
	return o.Payload
}

func (o *ListFilesEntriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FilesDirectoryTreeNode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListFilesEntriesBadRequest creates a ListFilesEntriesBadRequest with default headers values
func NewListFilesEntriesBadRequest() *ListFilesEntriesBadRequest {
	return &ListFilesEntriesBadRequest{}
}

/*
ListFilesEntriesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListFilesEntriesBadRequest struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list files entries bad request response has a 2xx status code
func (o *ListFilesEntriesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files entries bad request response has a 3xx status code
func (o *ListFilesEntriesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files entries bad request response has a 4xx status code
func (o *ListFilesEntriesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files entries bad request response has a 5xx status code
func (o *ListFilesEntriesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list files entries bad request response a status code equal to that given
func (o *ListFilesEntriesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list files entries bad request response
func (o *ListFilesEntriesBadRequest) Code() int {
	return 400
}

func (o *ListFilesEntriesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesBadRequest %s", 400, payload)
}

func (o *ListFilesEntriesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesBadRequest %s", 400, payload)
}

func (o *ListFilesEntriesBadRequest) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListFilesEntriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListFilesEntriesUnauthorized creates a ListFilesEntriesUnauthorized with default headers values
func NewListFilesEntriesUnauthorized() *ListFilesEntriesUnauthorized {
	return &ListFilesEntriesUnauthorized{}
}

/*
ListFilesEntriesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListFilesEntriesUnauthorized struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list files entries unauthorized response has a 2xx status code
func (o *ListFilesEntriesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files entries unauthorized response has a 3xx status code
func (o *ListFilesEntriesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files entries unauthorized response has a 4xx status code
func (o *ListFilesEntriesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files entries unauthorized response has a 5xx status code
func (o *ListFilesEntriesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list files entries unauthorized response a status code equal to that given
func (o *ListFilesEntriesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list files entries unauthorized response
func (o *ListFilesEntriesUnauthorized) Code() int {
	return 401
}

func (o *ListFilesEntriesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesUnauthorized %s", 401, payload)
}

func (o *ListFilesEntriesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesUnauthorized %s", 401, payload)
}

func (o *ListFilesEntriesUnauthorized) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListFilesEntriesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListFilesEntriesForbidden creates a ListFilesEntriesForbidden with default headers values
func NewListFilesEntriesForbidden() *ListFilesEntriesForbidden {
	return &ListFilesEntriesForbidden{}
}

/*
ListFilesEntriesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListFilesEntriesForbidden struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list files entries forbidden response has a 2xx status code
func (o *ListFilesEntriesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files entries forbidden response has a 3xx status code
func (o *ListFilesEntriesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files entries forbidden response has a 4xx status code
func (o *ListFilesEntriesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files entries forbidden response has a 5xx status code
func (o *ListFilesEntriesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list files entries forbidden response a status code equal to that given
func (o *ListFilesEntriesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list files entries forbidden response
func (o *ListFilesEntriesForbidden) Code() int {
	return 403
}

func (o *ListFilesEntriesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesForbidden %s", 403, payload)
}

func (o *ListFilesEntriesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesForbidden %s", 403, payload)
}

func (o *ListFilesEntriesForbidden) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListFilesEntriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListFilesEntriesNotFound creates a ListFilesEntriesNotFound with default headers values
func NewListFilesEntriesNotFound() *ListFilesEntriesNotFound {
	return &ListFilesEntriesNotFound{}
}

/*
ListFilesEntriesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListFilesEntriesNotFound struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list files entries not found response has a 2xx status code
func (o *ListFilesEntriesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files entries not found response has a 3xx status code
func (o *ListFilesEntriesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files entries not found response has a 4xx status code
func (o *ListFilesEntriesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files entries not found response has a 5xx status code
func (o *ListFilesEntriesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list files entries not found response a status code equal to that given
func (o *ListFilesEntriesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list files entries not found response
func (o *ListFilesEntriesNotFound) Code() int {
	return 404
}

func (o *ListFilesEntriesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesNotFound %s", 404, payload)
}

func (o *ListFilesEntriesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesNotFound %s", 404, payload)
}

func (o *ListFilesEntriesNotFound) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListFilesEntriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListFilesEntriesConflict creates a ListFilesEntriesConflict with default headers values
func NewListFilesEntriesConflict() *ListFilesEntriesConflict {
	return &ListFilesEntriesConflict{}
}

/*
ListFilesEntriesConflict describes a response with status code 409, with default header values.

Conflict
*/
type ListFilesEntriesConflict struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list files entries conflict response has a 2xx status code
func (o *ListFilesEntriesConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files entries conflict response has a 3xx status code
func (o *ListFilesEntriesConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files entries conflict response has a 4xx status code
func (o *ListFilesEntriesConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files entries conflict response has a 5xx status code
func (o *ListFilesEntriesConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this list files entries conflict response a status code equal to that given
func (o *ListFilesEntriesConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the list files entries conflict response
func (o *ListFilesEntriesConflict) Code() int {
	return 409
}

func (o *ListFilesEntriesConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesConflict %s", 409, payload)
}

func (o *ListFilesEntriesConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesConflict %s", 409, payload)
}

func (o *ListFilesEntriesConflict) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListFilesEntriesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListFilesEntriesUnprocessableEntity creates a ListFilesEntriesUnprocessableEntity with default headers values
func NewListFilesEntriesUnprocessableEntity() *ListFilesEntriesUnprocessableEntity {
	return &ListFilesEntriesUnprocessableEntity{}
}

/*
ListFilesEntriesUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type ListFilesEntriesUnprocessableEntity struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list files entries unprocessable entity response has a 2xx status code
func (o *ListFilesEntriesUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files entries unprocessable entity response has a 3xx status code
func (o *ListFilesEntriesUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files entries unprocessable entity response has a 4xx status code
func (o *ListFilesEntriesUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files entries unprocessable entity response has a 5xx status code
func (o *ListFilesEntriesUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list files entries unprocessable entity response a status code equal to that given
func (o *ListFilesEntriesUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list files entries unprocessable entity response
func (o *ListFilesEntriesUnprocessableEntity) Code() int {
	return 422
}

func (o *ListFilesEntriesUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesUnprocessableEntity %s", 422, payload)
}

func (o *ListFilesEntriesUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesUnprocessableEntity %s", 422, payload)
}

func (o *ListFilesEntriesUnprocessableEntity) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListFilesEntriesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListFilesEntriesInternalServerError creates a ListFilesEntriesInternalServerError with default headers values
func NewListFilesEntriesInternalServerError() *ListFilesEntriesInternalServerError {
	return &ListFilesEntriesInternalServerError{}
}

/*
ListFilesEntriesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListFilesEntriesInternalServerError struct {
	Payload *models.ResponseErrorResponse
}

// IsSuccess returns true when this list files entries internal server error response has a 2xx status code
func (o *ListFilesEntriesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files entries internal server error response has a 3xx status code
func (o *ListFilesEntriesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files entries internal server error response has a 4xx status code
func (o *ListFilesEntriesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list files entries internal server error response has a 5xx status code
func (o *ListFilesEntriesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list files entries internal server error response a status code equal to that given
func (o *ListFilesEntriesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list files entries internal server error response
func (o *ListFilesEntriesInternalServerError) Code() int {
	return 500
}

func (o *ListFilesEntriesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesInternalServerError %s", 500, payload)
}

func (o *ListFilesEntriesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /projects/{projectId}/files/entries][%d] listFilesEntriesInternalServerError %s", 500, payload)
}

func (o *ListFilesEntriesInternalServerError) GetPayload() *models.ResponseErrorResponse {
	return o.Payload
}

func (o *ListFilesEntriesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
