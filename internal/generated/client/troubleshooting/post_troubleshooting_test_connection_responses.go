// Code generated by go-swagger; DO NOT EDIT.

package troubleshooting

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chainlaunch/terraform-provider-chainlaunch/internal/generated/models"
)

// PostTroubleshootingTestConnectionReader is a Reader for the PostTroubleshootingTestConnection structure.
type PostTroubleshootingTestConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTroubleshootingTestConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewPostTroubleshootingTestConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostTroubleshootingTestConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostTroubleshootingTestConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /troubleshooting/test-connection] PostTroubleshootingTestConnection", response, response.Code())
	}
}

// NewPostTroubleshootingTestConnectionOK creates a PostTroubleshootingTestConnectionOK with default headers values
func NewPostTroubleshootingTestConnectionOK() *PostTroubleshootingTestConnectionOK {
	return &PostTroubleshootingTestConnectionOK{}
}

/*
PostTroubleshootingTestConnectionOK describes a response with status code 200, with default header values.

OK
*/
type PostTroubleshootingTestConnectionOK struct {
	Payload *models.TroubleshootingConnectionTestResponse
}

// IsSuccess returns true when this post troubleshooting test connection o k response has a 2xx status code
func (o *PostTroubleshootingTestConnectionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post troubleshooting test connection o k response has a 3xx status code
func (o *PostTroubleshootingTestConnectionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post troubleshooting test connection o k response has a 4xx status code
func (o *PostTroubleshootingTestConnectionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post troubleshooting test connection o k response has a 5xx status code
func (o *PostTroubleshootingTestConnectionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post troubleshooting test connection o k response a status code equal to that given
func (o *PostTroubleshootingTestConnectionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post troubleshooting test connection o k response
func (o *PostTroubleshootingTestConnectionOK) Code() int {
	return 200
}

func (o *PostTroubleshootingTestConnectionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /troubleshooting/test-connection][%d] postTroubleshootingTestConnectionOK %s", 200, payload)
}

func (o *PostTroubleshootingTestConnectionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /troubleshooting/test-connection][%d] postTroubleshootingTestConnectionOK %s", 200, payload)
}

func (o *PostTroubleshootingTestConnectionOK) GetPayload() *models.TroubleshootingConnectionTestResponse {
	return o.Payload
}

func (o *PostTroubleshootingTestConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TroubleshootingConnectionTestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostTroubleshootingTestConnectionBadRequest creates a PostTroubleshootingTestConnectionBadRequest with default headers values
func NewPostTroubleshootingTestConnectionBadRequest() *PostTroubleshootingTestConnectionBadRequest {
	return &PostTroubleshootingTestConnectionBadRequest{}
}

/*
PostTroubleshootingTestConnectionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostTroubleshootingTestConnectionBadRequest struct {
	Payload map[string]string
}

// IsSuccess returns true when this post troubleshooting test connection bad request response has a 2xx status code
func (o *PostTroubleshootingTestConnectionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post troubleshooting test connection bad request response has a 3xx status code
func (o *PostTroubleshootingTestConnectionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post troubleshooting test connection bad request response has a 4xx status code
func (o *PostTroubleshootingTestConnectionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post troubleshooting test connection bad request response has a 5xx status code
func (o *PostTroubleshootingTestConnectionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post troubleshooting test connection bad request response a status code equal to that given
func (o *PostTroubleshootingTestConnectionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post troubleshooting test connection bad request response
func (o *PostTroubleshootingTestConnectionBadRequest) Code() int {
	return 400
}

func (o *PostTroubleshootingTestConnectionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /troubleshooting/test-connection][%d] postTroubleshootingTestConnectionBadRequest %s", 400, payload)
}

func (o *PostTroubleshootingTestConnectionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /troubleshooting/test-connection][%d] postTroubleshootingTestConnectionBadRequest %s", 400, payload)
}

func (o *PostTroubleshootingTestConnectionBadRequest) GetPayload() map[string]string {
	return o.Payload
}

func (o *PostTroubleshootingTestConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewPostTroubleshootingTestConnectionInternalServerError creates a PostTroubleshootingTestConnectionInternalServerError with default headers values
func NewPostTroubleshootingTestConnectionInternalServerError() *PostTroubleshootingTestConnectionInternalServerError {
	return &PostTroubleshootingTestConnectionInternalServerError{}
}

/*
PostTroubleshootingTestConnectionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostTroubleshootingTestConnectionInternalServerError struct {
	Payload map[string]string
}

// IsSuccess returns true when this post troubleshooting test connection internal server error response has a 2xx status code
func (o *PostTroubleshootingTestConnectionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post troubleshooting test connection internal server error response has a 3xx status code
func (o *PostTroubleshootingTestConnectionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post troubleshooting test connection internal server error response has a 4xx status code
func (o *PostTroubleshootingTestConnectionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post troubleshooting test connection internal server error response has a 5xx status code
func (o *PostTroubleshootingTestConnectionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post troubleshooting test connection internal server error response a status code equal to that given
func (o *PostTroubleshootingTestConnectionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post troubleshooting test connection internal server error response
func (o *PostTroubleshootingTestConnectionInternalServerError) Code() int {
	return 500
}

func (o *PostTroubleshootingTestConnectionInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /troubleshooting/test-connection][%d] postTroubleshootingTestConnectionInternalServerError %s", 500, payload)
}

func (o *PostTroubleshootingTestConnectionInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /troubleshooting/test-connection][%d] postTroubleshootingTestConnectionInternalServerError %s", 500, payload)
}

func (o *PostTroubleshootingTestConnectionInternalServerError) GetPayload() map[string]string {
	return o.Payload
}

func (o *PostTroubleshootingTestConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
